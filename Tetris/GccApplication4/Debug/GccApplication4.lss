
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  0000209c  00002130  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000209c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010e  00800140  00800140  00002170  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002170  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000021e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b67  00000000  00000000  000022f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa6  00000000  00000000  00003e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001920  00000000  00000000  00004905  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00006228  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000821  00000000  00000000  000064b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014e8  00000000  00000000  00006cd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000081c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	61 c0       	rjmp	.+194    	; 0xc4 <__ctors_end>
       2:	00 00       	nop
       4:	7e c0       	rjmp	.+252    	; 0x102 <__bad_interrupt>
       6:	00 00       	nop
       8:	7c c0       	rjmp	.+248    	; 0x102 <__bad_interrupt>
       a:	00 00       	nop
       c:	7a c0       	rjmp	.+244    	; 0x102 <__bad_interrupt>
       e:	00 00       	nop
      10:	78 c0       	rjmp	.+240    	; 0x102 <__bad_interrupt>
      12:	00 00       	nop
      14:	76 c0       	rjmp	.+236    	; 0x102 <__bad_interrupt>
      16:	00 00       	nop
      18:	74 c0       	rjmp	.+232    	; 0x102 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	72 c0       	rjmp	.+228    	; 0x102 <__bad_interrupt>
      1e:	00 00       	nop
      20:	70 c0       	rjmp	.+224    	; 0x102 <__bad_interrupt>
      22:	00 00       	nop
      24:	6e c0       	rjmp	.+220    	; 0x102 <__bad_interrupt>
      26:	00 00       	nop
      28:	6c c0       	rjmp	.+216    	; 0x102 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6a c0       	rjmp	.+212    	; 0x102 <__bad_interrupt>
      2e:	00 00       	nop
      30:	68 c0       	rjmp	.+208    	; 0x102 <__bad_interrupt>
      32:	00 00       	nop
      34:	af c3       	rjmp	.+1886   	; 0x794 <__vector_13>
      36:	00 00       	nop
      38:	64 c0       	rjmp	.+200    	; 0x102 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	62 c0       	rjmp	.+196    	; 0x102 <__bad_interrupt>
      3e:	00 00       	nop
      40:	60 c0       	rjmp	.+192    	; 0x102 <__bad_interrupt>
      42:	00 00       	nop
      44:	5e c0       	rjmp	.+188    	; 0x102 <__bad_interrupt>
      46:	00 00       	nop
      48:	5c c0       	rjmp	.+184    	; 0x102 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	5a c0       	rjmp	.+180    	; 0x102 <__bad_interrupt>
      4e:	00 00       	nop
      50:	58 c0       	rjmp	.+176    	; 0x102 <__bad_interrupt>
      52:	00 00       	nop
      54:	56 c0       	rjmp	.+172    	; 0x102 <__bad_interrupt>
      56:	00 00       	nop
      58:	54 c0       	rjmp	.+168    	; 0x102 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	52 c0       	rjmp	.+164    	; 0x102 <__bad_interrupt>
      5e:	00 00       	nop
      60:	50 c0       	rjmp	.+160    	; 0x102 <__bad_interrupt>
      62:	00 00       	nop
      64:	4e c0       	rjmp	.+156    	; 0x102 <__bad_interrupt>
      66:	00 00       	nop
      68:	4c c0       	rjmp	.+152    	; 0x102 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4a c0       	rjmp	.+148    	; 0x102 <__bad_interrupt>
      6e:	00 00       	nop
      70:	48 c0       	rjmp	.+144    	; 0x102 <__bad_interrupt>
      72:	00 00       	nop
      74:	46 c0       	rjmp	.+140    	; 0x102 <__bad_interrupt>
      76:	00 00       	nop
      78:	44 c0       	rjmp	.+136    	; 0x102 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	42 c0       	rjmp	.+132    	; 0x102 <__bad_interrupt>
      7e:	00 00       	nop
      80:	40 c0       	rjmp	.+128    	; 0x102 <__bad_interrupt>
      82:	00 00       	nop
      84:	3e c0       	rjmp	.+124    	; 0x102 <__bad_interrupt>
      86:	00 00       	nop
      88:	3c c0       	rjmp	.+120    	; 0x102 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	64 01       	movw	r12, r8
      8e:	86 01       	movw	r16, r12
      90:	a8 01       	movw	r20, r16
      92:	ca 01       	movw	r24, r20
      94:	ec 01       	movw	r28, r24
      96:	0e 02       	muls	r16, r30
      98:	30 02       	muls	r19, r16
      9a:	52 02       	muls	r21, r18
      9c:	64 01       	movw	r12, r8
      9e:	0a 05       	cpc	r16, r10
      a0:	b4 04       	cpc	r11, r4
      a2:	d0 04       	cpc	r13, r0
      a4:	d6 04       	cpc	r13, r6
      a6:	fa 04       	cpc	r15, r10
      a8:	da 05       	cpc	r29, r10
      aa:	1b 0e       	add	r1, r27
      ac:	9b 05       	cpc	r25, r11
      ae:	da 05       	cpc	r29, r10
      b0:	04 05       	cpc	r16, r4
      b2:	17 05       	cpc	r17, r7
      b4:	9b 05       	cpc	r25, r11
      b6:	da 05       	cpc	r29, r10
      b8:	e7 07       	cpc	r30, r23
      ba:	a4 0b       	sbc	r26, r20
      bc:	1e 0e       	add	r1, r30
      be:	52 05       	cpc	r21, r2
      c0:	c0 0d       	add	r28, r0
      c2:	d9 0d       	add	r29, r9

000000c4 <__ctors_end>:
      c4:	11 24       	eor	r1, r1
      c6:	1f be       	out	0x3f, r1	; 63
      c8:	cf ef       	ldi	r28, 0xFF	; 255
      ca:	d0 e4       	ldi	r29, 0x40	; 64
      cc:	de bf       	out	0x3e, r29	; 62
      ce:	cd bf       	out	0x3d, r28	; 61

000000d0 <__do_copy_data>:
      d0:	11 e0       	ldi	r17, 0x01	; 1
      d2:	a0 e0       	ldi	r26, 0x00	; 0
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	ec e9       	ldi	r30, 0x9C	; 156
      d8:	f0 e2       	ldi	r31, 0x20	; 32
      da:	00 e0       	ldi	r16, 0x00	; 0
      dc:	0b bf       	out	0x3b, r16	; 59
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x14>
      e0:	07 90       	elpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	a0 34       	cpi	r26, 0x40	; 64
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0x10>

000000ea <__do_clear_bss>:
      ea:	22 e0       	ldi	r18, 0x02	; 2
      ec:	a0 e4       	ldi	r26, 0x40	; 64
      ee:	b1 e0       	ldi	r27, 0x01	; 1
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	ae 34       	cpi	r26, 0x4E	; 78
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>
      fa:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <main>
      fe:	0c 94 4c 10 	jmp	0x2098	; 0x2098 <_exit>

00000102 <__bad_interrupt>:
     102:	7e cf       	rjmp	.-260    	; 0x0 <__vectors>

00000104 <SMTick2>:
		PORTB |= 0x08;
	}
	// set RCLK = 1. Rising edge copies data from “Shift” register to “Storage” register
	PORTB |= 0x04;
	// clears all lines in preparation of a new transmission
	PORTB = 0x00;
     104:	99 23       	and	r25, r25
     106:	3c f0       	brlt	.+14     	; 0x116 <SMTick2+0x12>
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	91 05       	cpc	r25, r1
     10c:	3c f0       	brlt	.+14     	; 0x11c <SMTick2+0x18>
     10e:	82 30       	cpi	r24, 0x02	; 2
     110:	91 05       	cpc	r25, r1
     112:	09 f4       	brne	.+2      	; 0x116 <SMTick2+0x12>
     114:	cf c0       	rjmp	.+414    	; 0x2b4 <SMTick2+0x1b0>
     116:	80 e0       	ldi	r24, 0x00	; 0
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	08 95       	ret
     11c:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <rowcnt>
     120:	e0 e0       	ldi	r30, 0x00	; 0
     122:	f2 e0       	ldi	r31, 0x02	; 2
     124:	28 e0       	ldi	r18, 0x08	; 8
     126:	32 e0       	ldi	r19, 0x02	; 2
     128:	81 91       	ld	r24, Z+
     12a:	81 30       	cpi	r24, 0x01	; 1
     12c:	09 f4       	brne	.+2      	; 0x130 <SMTick2+0x2c>
     12e:	9f 5f       	subi	r25, 0xFF	; 255
     130:	e2 17       	cp	r30, r18
     132:	f3 07       	cpc	r31, r19
     134:	c9 f7       	brne	.-14     	; 0x128 <SMTick2+0x24>
     136:	98 30       	cpi	r25, 0x08	; 8
     138:	51 f4       	brne	.+20     	; 0x14e <SMTick2+0x4a>
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     140:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     144:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     148:	81 e0       	ldi	r24, 0x01	; 1
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	08 95       	ret
     14e:	e8 e0       	ldi	r30, 0x08	; 8
     150:	f2 e0       	ldi	r31, 0x02	; 2
     152:	20 e1       	ldi	r18, 0x10	; 16
     154:	32 e0       	ldi	r19, 0x02	; 2
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	81 91       	ld	r24, Z+
     15a:	81 30       	cpi	r24, 0x01	; 1
     15c:	09 f4       	brne	.+2      	; 0x160 <SMTick2+0x5c>
     15e:	9f 5f       	subi	r25, 0xFF	; 255
     160:	e2 17       	cp	r30, r18
     162:	f3 07       	cpc	r31, r19
     164:	c9 f7       	brne	.-14     	; 0x158 <SMTick2+0x54>
     166:	98 30       	cpi	r25, 0x08	; 8
     168:	59 f4       	brne	.+22     	; 0x180 <SMTick2+0x7c>
     16a:	82 e0       	ldi	r24, 0x02	; 2
     16c:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     170:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     174:	81 e0       	ldi	r24, 0x01	; 1
     176:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     17a:	81 e0       	ldi	r24, 0x01	; 1
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	08 95       	ret
     180:	e0 e1       	ldi	r30, 0x10	; 16
     182:	f2 e0       	ldi	r31, 0x02	; 2
     184:	28 e1       	ldi	r18, 0x18	; 24
     186:	32 e0       	ldi	r19, 0x02	; 2
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	81 91       	ld	r24, Z+
     18c:	81 30       	cpi	r24, 0x01	; 1
     18e:	09 f4       	brne	.+2      	; 0x192 <SMTick2+0x8e>
     190:	9f 5f       	subi	r25, 0xFF	; 255
     192:	e2 17       	cp	r30, r18
     194:	f3 07       	cpc	r31, r19
     196:	c9 f7       	brne	.-14     	; 0x18a <SMTick2+0x86>
     198:	98 30       	cpi	r25, 0x08	; 8
     19a:	59 f4       	brne	.+22     	; 0x1b2 <SMTick2+0xae>
     19c:	83 e0       	ldi	r24, 0x03	; 3
     19e:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     1a2:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     1ac:	81 e0       	ldi	r24, 0x01	; 1
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	08 95       	ret
     1b2:	e8 e1       	ldi	r30, 0x18	; 24
     1b4:	f2 e0       	ldi	r31, 0x02	; 2
     1b6:	20 e2       	ldi	r18, 0x20	; 32
     1b8:	32 e0       	ldi	r19, 0x02	; 2
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	81 91       	ld	r24, Z+
     1be:	81 30       	cpi	r24, 0x01	; 1
     1c0:	09 f4       	brne	.+2      	; 0x1c4 <SMTick2+0xc0>
     1c2:	9f 5f       	subi	r25, 0xFF	; 255
     1c4:	e2 17       	cp	r30, r18
     1c6:	f3 07       	cpc	r31, r19
     1c8:	c9 f7       	brne	.-14     	; 0x1bc <SMTick2+0xb8>
     1ca:	98 30       	cpi	r25, 0x08	; 8
     1cc:	59 f4       	brne	.+22     	; 0x1e4 <SMTick2+0xe0>
     1ce:	84 e0       	ldi	r24, 0x04	; 4
     1d0:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     1d4:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	08 95       	ret
     1e4:	e0 e2       	ldi	r30, 0x20	; 32
     1e6:	f2 e0       	ldi	r31, 0x02	; 2
     1e8:	28 e2       	ldi	r18, 0x28	; 40
     1ea:	32 e0       	ldi	r19, 0x02	; 2
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	81 91       	ld	r24, Z+
     1f0:	81 30       	cpi	r24, 0x01	; 1
     1f2:	09 f4       	brne	.+2      	; 0x1f6 <SMTick2+0xf2>
     1f4:	9f 5f       	subi	r25, 0xFF	; 255
     1f6:	e2 17       	cp	r30, r18
     1f8:	f3 07       	cpc	r31, r19
     1fa:	c9 f7       	brne	.-14     	; 0x1ee <SMTick2+0xea>
     1fc:	98 30       	cpi	r25, 0x08	; 8
     1fe:	59 f4       	brne	.+22     	; 0x216 <SMTick2+0x112>
     200:	85 e0       	ldi	r24, 0x05	; 5
     202:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     206:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	08 95       	ret
     216:	e8 e2       	ldi	r30, 0x28	; 40
     218:	f2 e0       	ldi	r31, 0x02	; 2
     21a:	20 e3       	ldi	r18, 0x30	; 48
     21c:	32 e0       	ldi	r19, 0x02	; 2
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	81 91       	ld	r24, Z+
     222:	81 30       	cpi	r24, 0x01	; 1
     224:	09 f4       	brne	.+2      	; 0x228 <SMTick2+0x124>
     226:	9f 5f       	subi	r25, 0xFF	; 255
     228:	e2 17       	cp	r30, r18
     22a:	f3 07       	cpc	r31, r19
     22c:	c9 f7       	brne	.-14     	; 0x220 <SMTick2+0x11c>
     22e:	98 30       	cpi	r25, 0x08	; 8
     230:	59 f4       	brne	.+22     	; 0x248 <SMTick2+0x144>
     232:	86 e0       	ldi	r24, 0x06	; 6
     234:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     238:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	08 95       	ret
     248:	e0 e3       	ldi	r30, 0x30	; 48
     24a:	f2 e0       	ldi	r31, 0x02	; 2
     24c:	28 e3       	ldi	r18, 0x38	; 56
     24e:	32 e0       	ldi	r19, 0x02	; 2
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	81 91       	ld	r24, Z+
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	09 f4       	brne	.+2      	; 0x25a <SMTick2+0x156>
     258:	9f 5f       	subi	r25, 0xFF	; 255
     25a:	e2 17       	cp	r30, r18
     25c:	f3 07       	cpc	r31, r19
     25e:	c9 f7       	brne	.-14     	; 0x252 <SMTick2+0x14e>
     260:	98 30       	cpi	r25, 0x08	; 8
     262:	59 f4       	brne	.+22     	; 0x27a <SMTick2+0x176>
     264:	87 e0       	ldi	r24, 0x07	; 7
     266:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     26a:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	08 95       	ret
     27a:	e8 e3       	ldi	r30, 0x38	; 56
     27c:	f2 e0       	ldi	r31, 0x02	; 2
     27e:	20 e4       	ldi	r18, 0x40	; 64
     280:	32 e0       	ldi	r19, 0x02	; 2
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	81 91       	ld	r24, Z+
     286:	81 30       	cpi	r24, 0x01	; 1
     288:	09 f4       	brne	.+2      	; 0x28c <SMTick2+0x188>
     28a:	9f 5f       	subi	r25, 0xFF	; 255
     28c:	e2 17       	cp	r30, r18
     28e:	f3 07       	cpc	r31, r19
     290:	c9 f7       	brne	.-14     	; 0x284 <SMTick2+0x180>
     292:	98 30       	cpi	r25, 0x08	; 8
     294:	59 f4       	brne	.+22     	; 0x2ac <SMTick2+0x1a8>
     296:	88 e0       	ldi	r24, 0x08	; 8
     298:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <delr>
     29c:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     2a0:	81 e0       	ldi	r24, 0x01	; 1
     2a2:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <rowfull>
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	08 95       	ret
     2ac:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <rowcnt>
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	08 95       	ret

000002b6 <SMTick3>:
     2b6:	89 30       	cpi	r24, 0x09	; 9
     2b8:	91 05       	cpc	r25, r1
     2ba:	08 f0       	brcs	.+2      	; 0x2be <SMTick3+0x8>
     2bc:	15 c1       	rjmp	.+554    	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     2be:	fc 01       	movw	r30, r24
     2c0:	ea 5b       	subi	r30, 0xBA	; 186
     2c2:	ff 4f       	sbci	r31, 0xFF	; 255
     2c4:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__tablejump2__>
     2c8:	e8 ef       	ldi	r30, 0xF8	; 248
     2ca:	f1 e0       	ldi	r31, 0x01	; 1
     2cc:	a0 ea       	ldi	r26, 0xA0	; 160
     2ce:	b1 e0       	ldi	r27, 0x01	; 1
     2d0:	20 e0       	ldi	r18, 0x00	; 0
     2d2:	32 e0       	ldi	r19, 0x02	; 2
     2d4:	81 91       	ld	r24, Z+
     2d6:	8d 93       	st	X+, r24
     2d8:	e2 17       	cp	r30, r18
     2da:	f3 07       	cpc	r31, r19
     2dc:	d9 f7       	brne	.-10     	; 0x2d4 <SMTick3+0x1e>
     2de:	e6 e0       	ldi	r30, 0x06	; 6
     2e0:	f1 e0       	ldi	r31, 0x01	; 1
     2e2:	10 82       	st	Z, r1
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	81 83       	std	Z+1, r24	; 0x01
     2e8:	82 83       	std	Z+2, r24	; 0x02
     2ea:	83 83       	std	Z+3, r24	; 0x03
     2ec:	84 83       	std	Z+4, r24	; 0x04
     2ee:	85 83       	std	Z+5, r24	; 0x05
     2f0:	86 83       	std	Z+6, r24	; 0x06
     2f2:	87 83       	std	Z+7, r24	; 0x07
     2f4:	a8 e9       	ldi	r26, 0x98	; 152
     2f6:	b1 e0       	ldi	r27, 0x01	; 1
     2f8:	2e e0       	ldi	r18, 0x0E	; 14
     2fa:	31 e0       	ldi	r19, 0x01	; 1
     2fc:	81 91       	ld	r24, Z+
     2fe:	8d 93       	st	X+, r24
     300:	e2 17       	cp	r30, r18
     302:	f3 07       	cpc	r31, r19
     304:	d9 f7       	brne	.-10     	; 0x2fc <SMTick3+0x46>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	08 95       	ret
     30c:	e0 e0       	ldi	r30, 0x00	; 0
     30e:	f2 e0       	ldi	r31, 0x02	; 2
     310:	a0 ea       	ldi	r26, 0xA0	; 160
     312:	b1 e0       	ldi	r27, 0x01	; 1
     314:	28 e0       	ldi	r18, 0x08	; 8
     316:	32 e0       	ldi	r19, 0x02	; 2
     318:	81 91       	ld	r24, Z+
     31a:	8d 93       	st	X+, r24
     31c:	e2 17       	cp	r30, r18
     31e:	f3 07       	cpc	r31, r19
     320:	d9 f7       	brne	.-10     	; 0x318 <SMTick3+0x62>
     322:	e6 e0       	ldi	r30, 0x06	; 6
     324:	f1 e0       	ldi	r31, 0x01	; 1
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	80 83       	st	Z, r24
     32a:	11 82       	std	Z+1, r1	; 0x01
     32c:	82 83       	std	Z+2, r24	; 0x02
     32e:	83 83       	std	Z+3, r24	; 0x03
     330:	84 83       	std	Z+4, r24	; 0x04
     332:	85 83       	std	Z+5, r24	; 0x05
     334:	86 83       	std	Z+6, r24	; 0x06
     336:	87 83       	std	Z+7, r24	; 0x07
     338:	a8 e9       	ldi	r26, 0x98	; 152
     33a:	b1 e0       	ldi	r27, 0x01	; 1
     33c:	2e e0       	ldi	r18, 0x0E	; 14
     33e:	31 e0       	ldi	r19, 0x01	; 1
     340:	81 91       	ld	r24, Z+
     342:	8d 93       	st	X+, r24
     344:	e2 17       	cp	r30, r18
     346:	f3 07       	cpc	r31, r19
     348:	d9 f7       	brne	.-10     	; 0x340 <SMTick3+0x8a>
     34a:	82 e0       	ldi	r24, 0x02	; 2
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	08 95       	ret
     350:	e8 e0       	ldi	r30, 0x08	; 8
     352:	f2 e0       	ldi	r31, 0x02	; 2
     354:	a0 ea       	ldi	r26, 0xA0	; 160
     356:	b1 e0       	ldi	r27, 0x01	; 1
     358:	20 e1       	ldi	r18, 0x10	; 16
     35a:	32 e0       	ldi	r19, 0x02	; 2
     35c:	81 91       	ld	r24, Z+
     35e:	8d 93       	st	X+, r24
     360:	e2 17       	cp	r30, r18
     362:	f3 07       	cpc	r31, r19
     364:	d9 f7       	brne	.-10     	; 0x35c <SMTick3+0xa6>
     366:	e6 e0       	ldi	r30, 0x06	; 6
     368:	f1 e0       	ldi	r31, 0x01	; 1
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	80 83       	st	Z, r24
     36e:	81 83       	std	Z+1, r24	; 0x01
     370:	12 82       	std	Z+2, r1	; 0x02
     372:	83 83       	std	Z+3, r24	; 0x03
     374:	84 83       	std	Z+4, r24	; 0x04
     376:	85 83       	std	Z+5, r24	; 0x05
     378:	86 83       	std	Z+6, r24	; 0x06
     37a:	87 83       	std	Z+7, r24	; 0x07
     37c:	a8 e9       	ldi	r26, 0x98	; 152
     37e:	b1 e0       	ldi	r27, 0x01	; 1
     380:	2e e0       	ldi	r18, 0x0E	; 14
     382:	31 e0       	ldi	r19, 0x01	; 1
     384:	81 91       	ld	r24, Z+
     386:	8d 93       	st	X+, r24
     388:	e2 17       	cp	r30, r18
     38a:	f3 07       	cpc	r31, r19
     38c:	d9 f7       	brne	.-10     	; 0x384 <SMTick3+0xce>
     38e:	83 e0       	ldi	r24, 0x03	; 3
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	08 95       	ret
     394:	e0 e1       	ldi	r30, 0x10	; 16
     396:	f2 e0       	ldi	r31, 0x02	; 2
     398:	a0 ea       	ldi	r26, 0xA0	; 160
     39a:	b1 e0       	ldi	r27, 0x01	; 1
     39c:	28 e1       	ldi	r18, 0x18	; 24
     39e:	32 e0       	ldi	r19, 0x02	; 2
     3a0:	81 91       	ld	r24, Z+
     3a2:	8d 93       	st	X+, r24
     3a4:	e2 17       	cp	r30, r18
     3a6:	f3 07       	cpc	r31, r19
     3a8:	d9 f7       	brne	.-10     	; 0x3a0 <SMTick3+0xea>
     3aa:	e6 e0       	ldi	r30, 0x06	; 6
     3ac:	f1 e0       	ldi	r31, 0x01	; 1
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	80 83       	st	Z, r24
     3b2:	81 83       	std	Z+1, r24	; 0x01
     3b4:	82 83       	std	Z+2, r24	; 0x02
     3b6:	13 82       	std	Z+3, r1	; 0x03
     3b8:	84 83       	std	Z+4, r24	; 0x04
     3ba:	85 83       	std	Z+5, r24	; 0x05
     3bc:	86 83       	std	Z+6, r24	; 0x06
     3be:	87 83       	std	Z+7, r24	; 0x07
     3c0:	a8 e9       	ldi	r26, 0x98	; 152
     3c2:	b1 e0       	ldi	r27, 0x01	; 1
     3c4:	2e e0       	ldi	r18, 0x0E	; 14
     3c6:	31 e0       	ldi	r19, 0x01	; 1
     3c8:	81 91       	ld	r24, Z+
     3ca:	8d 93       	st	X+, r24
     3cc:	e2 17       	cp	r30, r18
     3ce:	f3 07       	cpc	r31, r19
     3d0:	d9 f7       	brne	.-10     	; 0x3c8 <SMTick3+0x112>
     3d2:	84 e0       	ldi	r24, 0x04	; 4
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	08 95       	ret
     3d8:	e8 e1       	ldi	r30, 0x18	; 24
     3da:	f2 e0       	ldi	r31, 0x02	; 2
     3dc:	a0 ea       	ldi	r26, 0xA0	; 160
     3de:	b1 e0       	ldi	r27, 0x01	; 1
     3e0:	20 e2       	ldi	r18, 0x20	; 32
     3e2:	32 e0       	ldi	r19, 0x02	; 2
     3e4:	81 91       	ld	r24, Z+
     3e6:	8d 93       	st	X+, r24
     3e8:	e2 17       	cp	r30, r18
     3ea:	f3 07       	cpc	r31, r19
     3ec:	d9 f7       	brne	.-10     	; 0x3e4 <SMTick3+0x12e>
     3ee:	e6 e0       	ldi	r30, 0x06	; 6
     3f0:	f1 e0       	ldi	r31, 0x01	; 1
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	80 83       	st	Z, r24
     3f6:	81 83       	std	Z+1, r24	; 0x01
     3f8:	82 83       	std	Z+2, r24	; 0x02
     3fa:	83 83       	std	Z+3, r24	; 0x03
     3fc:	14 82       	std	Z+4, r1	; 0x04
     3fe:	85 83       	std	Z+5, r24	; 0x05
     400:	86 83       	std	Z+6, r24	; 0x06
     402:	87 83       	std	Z+7, r24	; 0x07
     404:	a8 e9       	ldi	r26, 0x98	; 152
     406:	b1 e0       	ldi	r27, 0x01	; 1
     408:	2e e0       	ldi	r18, 0x0E	; 14
     40a:	31 e0       	ldi	r19, 0x01	; 1
     40c:	81 91       	ld	r24, Z+
     40e:	8d 93       	st	X+, r24
     410:	e2 17       	cp	r30, r18
     412:	f3 07       	cpc	r31, r19
     414:	d9 f7       	brne	.-10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     416:	85 e0       	ldi	r24, 0x05	; 5
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	08 95       	ret
     41c:	e0 e2       	ldi	r30, 0x20	; 32
     41e:	f2 e0       	ldi	r31, 0x02	; 2
     420:	a0 ea       	ldi	r26, 0xA0	; 160
     422:	b1 e0       	ldi	r27, 0x01	; 1
     424:	28 e2       	ldi	r18, 0x28	; 40
     426:	32 e0       	ldi	r19, 0x02	; 2
     428:	81 91       	ld	r24, Z+
     42a:	8d 93       	st	X+, r24
     42c:	e2 17       	cp	r30, r18
     42e:	f3 07       	cpc	r31, r19
     430:	d9 f7       	brne	.-10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     432:	e6 e0       	ldi	r30, 0x06	; 6
     434:	f1 e0       	ldi	r31, 0x01	; 1
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	80 83       	st	Z, r24
     43a:	81 83       	std	Z+1, r24	; 0x01
     43c:	82 83       	std	Z+2, r24	; 0x02
     43e:	83 83       	std	Z+3, r24	; 0x03
     440:	84 83       	std	Z+4, r24	; 0x04
     442:	15 82       	std	Z+5, r1	; 0x05
     444:	86 83       	std	Z+6, r24	; 0x06
     446:	87 83       	std	Z+7, r24	; 0x07
     448:	a8 e9       	ldi	r26, 0x98	; 152
     44a:	b1 e0       	ldi	r27, 0x01	; 1
     44c:	2e e0       	ldi	r18, 0x0E	; 14
     44e:	31 e0       	ldi	r19, 0x01	; 1
     450:	81 91       	ld	r24, Z+
     452:	8d 93       	st	X+, r24
     454:	e2 17       	cp	r30, r18
     456:	f3 07       	cpc	r31, r19
     458:	d9 f7       	brne	.-10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     45a:	86 e0       	ldi	r24, 0x06	; 6
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	08 95       	ret
     460:	e8 e2       	ldi	r30, 0x28	; 40
     462:	f2 e0       	ldi	r31, 0x02	; 2
     464:	a0 ea       	ldi	r26, 0xA0	; 160
     466:	b1 e0       	ldi	r27, 0x01	; 1
     468:	20 e3       	ldi	r18, 0x30	; 48
     46a:	32 e0       	ldi	r19, 0x02	; 2
     46c:	81 91       	ld	r24, Z+
     46e:	8d 93       	st	X+, r24
     470:	e2 17       	cp	r30, r18
     472:	f3 07       	cpc	r31, r19
     474:	d9 f7       	brne	.-10     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     476:	e6 e0       	ldi	r30, 0x06	; 6
     478:	f1 e0       	ldi	r31, 0x01	; 1
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	80 83       	st	Z, r24
     47e:	81 83       	std	Z+1, r24	; 0x01
     480:	82 83       	std	Z+2, r24	; 0x02
     482:	83 83       	std	Z+3, r24	; 0x03
     484:	84 83       	std	Z+4, r24	; 0x04
     486:	85 83       	std	Z+5, r24	; 0x05
     488:	16 82       	std	Z+6, r1	; 0x06
     48a:	87 83       	std	Z+7, r24	; 0x07
     48c:	a8 e9       	ldi	r26, 0x98	; 152
     48e:	b1 e0       	ldi	r27, 0x01	; 1
     490:	2e e0       	ldi	r18, 0x0E	; 14
     492:	31 e0       	ldi	r19, 0x01	; 1
     494:	81 91       	ld	r24, Z+
     496:	8d 93       	st	X+, r24
     498:	e2 17       	cp	r30, r18
     49a:	f3 07       	cpc	r31, r19
     49c:	d9 f7       	brne	.-10     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     49e:	87 e0       	ldi	r24, 0x07	; 7
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	08 95       	ret
     4a4:	e0 e3       	ldi	r30, 0x30	; 48
     4a6:	f2 e0       	ldi	r31, 0x02	; 2
     4a8:	a0 ea       	ldi	r26, 0xA0	; 160
     4aa:	b1 e0       	ldi	r27, 0x01	; 1
     4ac:	28 e3       	ldi	r18, 0x38	; 56
     4ae:	32 e0       	ldi	r19, 0x02	; 2
     4b0:	81 91       	ld	r24, Z+
     4b2:	8d 93       	st	X+, r24
     4b4:	e2 17       	cp	r30, r18
     4b6:	f3 07       	cpc	r31, r19
     4b8:	d9 f7       	brne	.-10     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     4ba:	e6 e0       	ldi	r30, 0x06	; 6
     4bc:	f1 e0       	ldi	r31, 0x01	; 1
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	80 83       	st	Z, r24
     4c2:	81 83       	std	Z+1, r24	; 0x01
     4c4:	82 83       	std	Z+2, r24	; 0x02
     4c6:	83 83       	std	Z+3, r24	; 0x03
     4c8:	84 83       	std	Z+4, r24	; 0x04
     4ca:	85 83       	std	Z+5, r24	; 0x05
     4cc:	86 83       	std	Z+6, r24	; 0x06
     4ce:	17 82       	std	Z+7, r1	; 0x07
     4d0:	a8 e9       	ldi	r26, 0x98	; 152
     4d2:	b1 e0       	ldi	r27, 0x01	; 1
     4d4:	2e e0       	ldi	r18, 0x0E	; 14
     4d6:	31 e0       	ldi	r19, 0x01	; 1
     4d8:	81 91       	ld	r24, Z+
     4da:	8d 93       	st	X+, r24
     4dc:	e2 17       	cp	r30, r18
     4de:	f3 07       	cpc	r31, r19
     4e0:	d9 f7       	brne	.-10     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     4e2:	88 e0       	ldi	r24, 0x08	; 8
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	08 95       	ret
     4e8:	80 e0       	ldi	r24, 0x00	; 0
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	08 95       	ret

000004ee <SMTick4>:
     4ee:	e0 ea       	ldi	r30, 0xA0	; 160
     4f0:	f1 e0       	ldi	r31, 0x01	; 1
     4f2:	48 ea       	ldi	r20, 0xA8	; 168
     4f4:	51 e0       	ldi	r21, 0x01	; 1
     4f6:	22 e0       	ldi	r18, 0x02	; 2
     4f8:	25 b9       	out	0x05, r18	; 5
     4fa:	81 91       	ld	r24, Z+
     4fc:	95 b1       	in	r25, 0x05	; 5
     4fe:	81 70       	andi	r24, 0x01	; 1
     500:	82 95       	swap	r24
     502:	88 0f       	add	r24, r24
     504:	80 7e       	andi	r24, 0xE0	; 224
     506:	89 2b       	or	r24, r25
     508:	85 b9       	out	0x05, r24	; 5
     50a:	2f 9a       	sbi	0x05, 7	; 5
     50c:	e4 17       	cp	r30, r20
     50e:	f5 07       	cpc	r31, r21
     510:	99 f7       	brne	.-26     	; 0x4f8 <SMTick4+0xa>
     512:	28 9a       	sbi	0x05, 0	; 5
     514:	15 b8       	out	0x05, r1	; 5
     516:	e8 e9       	ldi	r30, 0x98	; 152
     518:	f1 e0       	ldi	r31, 0x01	; 1
     51a:	40 ea       	ldi	r20, 0xA0	; 160
     51c:	51 e0       	ldi	r21, 0x01	; 1
     51e:	22 e0       	ldi	r18, 0x02	; 2
     520:	25 b9       	out	0x05, r18	; 5
     522:	81 91       	ld	r24, Z+
     524:	95 b1       	in	r25, 0x05	; 5
     526:	81 70       	andi	r24, 0x01	; 1
     528:	82 95       	swap	r24
     52a:	80 7f       	andi	r24, 0xF0	; 240
     52c:	89 2b       	or	r24, r25
     52e:	85 b9       	out	0x05, r24	; 5
     530:	2b 9a       	sbi	0x05, 3	; 5
     532:	e4 17       	cp	r30, r20
     534:	f5 07       	cpc	r31, r21
     536:	a1 f7       	brne	.-24     	; 0x520 <SMTick4+0x32>
     538:	2a 9a       	sbi	0x05, 2	; 5
     53a:	15 b8       	out	0x05, r1	; 5
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	08 95       	ret

00000542 <gameover>:
     542:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <c0.2397>
     546:	82 30       	cpi	r24, 0x02	; 2
     548:	e1 f0       	breq	.+56     	; 0x582 <gameover+0x40>
     54a:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <c1.2398>
     54e:	92 30       	cpi	r25, 0x02	; 2
     550:	c1 f0       	breq	.+48     	; 0x582 <gameover+0x40>
     552:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <c2.2399>
     556:	22 30       	cpi	r18, 0x02	; 2
     558:	a1 f0       	breq	.+40     	; 0x582 <gameover+0x40>
     55a:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <c3.2400>
     55e:	32 30       	cpi	r19, 0x02	; 2
     560:	81 f0       	breq	.+32     	; 0x582 <gameover+0x40>
     562:	30 91 7a 01 	lds	r19, 0x017A	; 0x80017a <c4.2401>
     566:	32 30       	cpi	r19, 0x02	; 2
     568:	61 f0       	breq	.+24     	; 0x582 <gameover+0x40>
     56a:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <c5.2402>
     56e:	32 30       	cpi	r19, 0x02	; 2
     570:	41 f0       	breq	.+16     	; 0x582 <gameover+0x40>
     572:	30 91 78 01 	lds	r19, 0x0178	; 0x800178 <c6.2403>
     576:	32 30       	cpi	r19, 0x02	; 2
     578:	21 f0       	breq	.+8      	; 0x582 <gameover+0x40>
     57a:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <c7.2404>
     57e:	32 30       	cpi	r19, 0x02	; 2
     580:	71 f5       	brne	.+92     	; 0x5de <gameover+0x9c>
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <endg>
     588:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <toprowcnt>
     58c:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <c0.2397>
     590:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <c1.2398>
     594:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <c2.2399>
     598:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <c3.2400>
     59c:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <c4.2401>
     5a0:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <c5.2402>
     5a4:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <c6.2403>
     5a8:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <c7.2404>
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	09 c0       	rjmp	.+18     	; 0x5c4 <gameover+0x82>
     5b2:	81 91       	ld	r24, Z+
     5b4:	8d 93       	st	X+, r24
     5b6:	e2 17       	cp	r30, r18
     5b8:	f3 07       	cpc	r31, r19
     5ba:	d9 f7       	brne	.-10     	; 0x5b2 <gameover+0x70>
     5bc:	ca 01       	movw	r24, r20
     5be:	48 34       	cpi	r20, 0x48	; 72
     5c0:	51 05       	cpc	r21, r1
     5c2:	59 f1       	breq	.+86     	; 0x61a <gameover+0xd8>
     5c4:	fc 01       	movw	r30, r24
     5c6:	e0 55       	subi	r30, 0x50	; 80
     5c8:	fe 4f       	sbci	r31, 0xFE	; 254
     5ca:	dc 01       	movw	r26, r24
     5cc:	a8 50       	subi	r26, 0x08	; 8
     5ce:	be 4f       	sbci	r27, 0xFE	; 254
     5d0:	ac 01       	movw	r20, r24
     5d2:	48 5f       	subi	r20, 0xF8	; 248
     5d4:	5f 4f       	sbci	r21, 0xFF	; 255
     5d6:	9a 01       	movw	r18, r20
     5d8:	20 55       	subi	r18, 0x50	; 80
     5da:	3e 4f       	sbci	r19, 0xFE	; 254
     5dc:	ea cf       	rjmp	.-44     	; 0x5b2 <gameover+0x70>
     5de:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <row+0x40>
     5e2:	31 30       	cpi	r19, 0x01	; 1
     5e4:	21 f4       	brne	.+8      	; 0x5ee <gameover+0xac>
     5e6:	8f 5f       	subi	r24, 0xFF	; 255
     5e8:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <c0.2397>
     5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <gameover+0xb0>
     5ee:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <c0.2397>
     5f2:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <row+0x41>
     5f6:	81 30       	cpi	r24, 0x01	; 1
     5f8:	21 f4       	brne	.+8      	; 0x602 <gameover+0xc0>
     5fa:	9f 5f       	subi	r25, 0xFF	; 255
     5fc:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <c1.2398>
     600:	02 c0       	rjmp	.+4      	; 0x606 <gameover+0xc4>
     602:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <c1.2398>
     606:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <row+0x42>
     60a:	81 30       	cpi	r24, 0x01	; 1
     60c:	21 f4       	brne	.+8      	; 0x616 <gameover+0xd4>
     60e:	2f 5f       	subi	r18, 0xFF	; 255
     610:	20 93 7c 01 	sts	0x017C, r18	; 0x80017c <c2.2399>
     614:	02 c0       	rjmp	.+4      	; 0x61a <gameover+0xd8>
     616:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <c2.2399>
     61a:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <row+0x43>
     61e:	81 30       	cpi	r24, 0x01	; 1
     620:	31 f4       	brne	.+12     	; 0x62e <gameover+0xec>
     622:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <c3.2400>
     626:	8f 5f       	subi	r24, 0xFF	; 255
     628:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <c3.2400>
     62c:	02 c0       	rjmp	.+4      	; 0x632 <gameover+0xf0>
     62e:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <c3.2400>
     632:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <row+0x44>
     636:	81 30       	cpi	r24, 0x01	; 1
     638:	31 f4       	brne	.+12     	; 0x646 <gameover+0x104>
     63a:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <c4.2401>
     63e:	8f 5f       	subi	r24, 0xFF	; 255
     640:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <c4.2401>
     644:	02 c0       	rjmp	.+4      	; 0x64a <gameover+0x108>
     646:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <c4.2401>
     64a:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <row+0x45>
     64e:	81 30       	cpi	r24, 0x01	; 1
     650:	31 f4       	brne	.+12     	; 0x65e <gameover+0x11c>
     652:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <c5.2402>
     656:	8f 5f       	subi	r24, 0xFF	; 255
     658:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <c5.2402>
     65c:	02 c0       	rjmp	.+4      	; 0x662 <gameover+0x120>
     65e:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <c5.2402>
     662:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <row+0x46>
     666:	81 30       	cpi	r24, 0x01	; 1
     668:	31 f4       	brne	.+12     	; 0x676 <gameover+0x134>
     66a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <c6.2403>
     66e:	8f 5f       	subi	r24, 0xFF	; 255
     670:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <c6.2403>
     674:	02 c0       	rjmp	.+4      	; 0x67a <gameover+0x138>
     676:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <c6.2403>
     67a:	80 91 3f 02 	lds	r24, 0x023F	; 0x80023f <row+0x47>
     67e:	81 30       	cpi	r24, 0x01	; 1
     680:	31 f4       	brne	.+12     	; 0x68e <gameover+0x14c>
     682:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <c7.2404>
     686:	8f 5f       	subi	r24, 0xFF	; 255
     688:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <c7.2404>
     68c:	02 c0       	rjmp	.+4      	; 0x692 <gameover+0x150>
     68e:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <c7.2404>
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	08 95       	ret

00000698 <delay_ms>:
     698:	18 16       	cp	r1, r24
     69a:	19 06       	cpc	r1, r25
     69c:	5c f0       	brlt	.+22     	; 0x6b4 <delay_ms+0x1c>
     69e:	08 95       	ret
     6a0:	00 00       	nop
     6a2:	21 50       	subi	r18, 0x01	; 1
     6a4:	31 09       	sbc	r19, r1
     6a6:	e1 f7       	brne	.-8      	; 0x6a0 <delay_ms+0x8>
     6a8:	4f 5f       	subi	r20, 0xFF	; 255
     6aa:	5f 4f       	sbci	r21, 0xFF	; 255
     6ac:	48 17       	cp	r20, r24
     6ae:	59 07       	cpc	r21, r25
     6b0:	29 f4       	brne	.+10     	; 0x6bc <delay_ms+0x24>
     6b2:	08 95       	ret
     6b4:	40 e0       	ldi	r20, 0x00	; 0
     6b6:	50 e0       	ldi	r21, 0x00	; 0
     6b8:	77 e0       	ldi	r23, 0x07	; 7
     6ba:	63 e0       	ldi	r22, 0x03	; 3
     6bc:	27 2f       	mov	r18, r23
     6be:	36 2f       	mov	r19, r22
     6c0:	ef cf       	rjmp	.-34     	; 0x6a0 <delay_ms+0x8>

000006c2 <LCD_WriteCommand>:
     6c2:	5e 98       	cbi	0x0b, 6	; 11
     6c4:	88 b9       	out	0x08, r24	; 8
     6c6:	5f 9a       	sbi	0x0b, 7	; 11
     6c8:	00 00       	nop
     6ca:	5f 98       	cbi	0x0b, 7	; 11
     6cc:	82 e0       	ldi	r24, 0x02	; 2
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	e3 cf       	rjmp	.-58     	; 0x698 <delay_ms>
     6d2:	08 95       	ret

000006d4 <LCD_ClearScreen>:
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	f5 cf       	rjmp	.-22     	; 0x6c2 <LCD_WriteCommand>
     6d8:	08 95       	ret

000006da <LCD_Cursor>:
     6da:	81 31       	cpi	r24, 0x11	; 17
     6dc:	18 f4       	brcc	.+6      	; 0x6e4 <LCD_Cursor+0xa>
     6de:	81 58       	subi	r24, 0x81	; 129
     6e0:	f0 cf       	rjmp	.-32     	; 0x6c2 <LCD_WriteCommand>
     6e2:	08 95       	ret
     6e4:	81 55       	subi	r24, 0x51	; 81
     6e6:	ed cf       	rjmp	.-38     	; 0x6c2 <LCD_WriteCommand>
     6e8:	08 95       	ret

000006ea <LCD_init>:
     6ea:	84 e6       	ldi	r24, 0x64	; 100
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	d4 df       	rcall	.-88     	; 0x698 <delay_ms>
     6f0:	88 e3       	ldi	r24, 0x38	; 56
     6f2:	e7 df       	rcall	.-50     	; 0x6c2 <LCD_WriteCommand>
     6f4:	86 e0       	ldi	r24, 0x06	; 6
     6f6:	e5 df       	rcall	.-54     	; 0x6c2 <LCD_WriteCommand>
     6f8:	8f e0       	ldi	r24, 0x0F	; 15
     6fa:	e3 df       	rcall	.-58     	; 0x6c2 <LCD_WriteCommand>
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	e1 df       	rcall	.-62     	; 0x6c2 <LCD_WriteCommand>
     700:	8a e0       	ldi	r24, 0x0A	; 10
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	c9 cf       	rjmp	.-110    	; 0x698 <delay_ms>
     706:	08 95       	ret

00000708 <LCD_WriteData>:
     708:	5e 9a       	sbi	0x0b, 6	; 11
     70a:	88 b9       	out	0x08, r24	; 8
     70c:	5f 9a       	sbi	0x0b, 7	; 11
     70e:	00 00       	nop
     710:	5f 98       	cbi	0x0b, 7	; 11
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	c0 cf       	rjmp	.-128    	; 0x698 <delay_ms>
     718:	08 95       	ret

0000071a <LCD_DisplayString>:
     71a:	0f 93       	push	r16
     71c:	1f 93       	push	r17
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	18 2f       	mov	r17, r24
     724:	eb 01       	movw	r28, r22
     726:	d6 df       	rcall	.-84     	; 0x6d4 <LCD_ClearScreen>
     728:	88 81       	ld	r24, Y
     72a:	88 23       	and	r24, r24
     72c:	51 f0       	breq	.+20     	; 0x742 <LCD_DisplayString+0x28>
     72e:	01 e0       	ldi	r16, 0x01	; 1
     730:	01 0f       	add	r16, r17
     732:	81 2f       	mov	r24, r17
     734:	d2 df       	rcall	.-92     	; 0x6da <LCD_Cursor>
     736:	89 91       	ld	r24, Y+
     738:	e7 df       	rcall	.-50     	; 0x708 <LCD_WriteData>
     73a:	10 2f       	mov	r17, r16
     73c:	88 81       	ld	r24, Y
     73e:	81 11       	cpse	r24, r1
     740:	f6 cf       	rjmp	.-20     	; 0x72e <LCD_DisplayString+0x14>
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	1f 91       	pop	r17
     748:	0f 91       	pop	r16
     74a:	08 95       	ret

0000074c <TimerOn>:
     74c:	8b e0       	ldi	r24, 0x0B	; 11
     74e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     752:	8d e7       	ldi	r24, 0x7D	; 125
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     75a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     75e:	82 e0       	ldi	r24, 0x02	; 2
     760:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     764:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     768:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     76c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_avr_timer_M>
     770:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <_avr_timer_M+0x1>
     774:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <_avr_timer_M+0x2>
     778:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <_avr_timer_M+0x3>
     77c:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <_avr_timer_cntcurr>
     780:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <_avr_timer_cntcurr+0x1>
     784:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <_avr_timer_cntcurr+0x2>
     788:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <_avr_timer_cntcurr+0x3>
     78c:	8f b7       	in	r24, 0x3f	; 63
     78e:	80 68       	ori	r24, 0x80	; 128
     790:	8f bf       	out	0x3f, r24	; 63
     792:	08 95       	ret

00000794 <__vector_13>:
     794:	1f 92       	push	r1
     796:	0f 92       	push	r0
     798:	0f b6       	in	r0, 0x3f	; 63
     79a:	0f 92       	push	r0
     79c:	11 24       	eor	r1, r1
     79e:	8f 93       	push	r24
     7a0:	9f 93       	push	r25
     7a2:	af 93       	push	r26
     7a4:	bf 93       	push	r27
     7a6:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <_avr_timer_cntcurr>
     7aa:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <_avr_timer_cntcurr+0x1>
     7ae:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <_avr_timer_cntcurr+0x2>
     7b2:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <_avr_timer_cntcurr+0x3>
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	a1 09       	sbc	r26, r1
     7ba:	b1 09       	sbc	r27, r1
     7bc:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <_avr_timer_cntcurr>
     7c0:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <_avr_timer_cntcurr+0x1>
     7c4:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <_avr_timer_cntcurr+0x2>
     7c8:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <_avr_timer_cntcurr+0x3>
     7cc:	89 2b       	or	r24, r25
     7ce:	8a 2b       	or	r24, r26
     7d0:	8b 2b       	or	r24, r27
     7d2:	99 f4       	brne	.+38     	; 0x7fa <__vector_13+0x66>
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <TimerFlag>
     7da:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_avr_timer_M>
     7de:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <_avr_timer_M+0x1>
     7e2:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <_avr_timer_M+0x2>
     7e6:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <_avr_timer_M+0x3>
     7ea:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <_avr_timer_cntcurr>
     7ee:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <_avr_timer_cntcurr+0x1>
     7f2:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <_avr_timer_cntcurr+0x2>
     7f6:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <_avr_timer_cntcurr+0x3>
     7fa:	bf 91       	pop	r27
     7fc:	af 91       	pop	r26
     7fe:	9f 91       	pop	r25
     800:	8f 91       	pop	r24
     802:	0f 90       	pop	r0
     804:	0f be       	out	0x3f, r0	; 63
     806:	0f 90       	pop	r0
     808:	1f 90       	pop	r1
     80a:	18 95       	reti

0000080c <initUSART>:
     80c:	81 30       	cpi	r24, 0x01	; 1
     80e:	81 f0       	breq	.+32     	; 0x830 <initUSART+0x24>
     810:	e1 ec       	ldi	r30, 0xC1	; 193
     812:	f0 e0       	ldi	r31, 0x00	; 0
     814:	80 81       	ld	r24, Z
     816:	88 61       	ori	r24, 0x18	; 24
     818:	80 83       	st	Z, r24
     81a:	e2 ec       	ldi	r30, 0xC2	; 194
     81c:	f0 e0       	ldi	r31, 0x00	; 0
     81e:	80 81       	ld	r24, Z
     820:	86 60       	ori	r24, 0x06	; 6
     822:	80 83       	st	Z, r24
     824:	83 e3       	ldi	r24, 0x33	; 51
     826:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     82a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     82e:	08 95       	ret
     830:	e9 ec       	ldi	r30, 0xC9	; 201
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	80 81       	ld	r24, Z
     836:	88 61       	ori	r24, 0x18	; 24
     838:	80 83       	st	Z, r24
     83a:	ea ec       	ldi	r30, 0xCA	; 202
     83c:	f0 e0       	ldi	r31, 0x00	; 0
     83e:	80 81       	ld	r24, Z
     840:	86 60       	ori	r24, 0x06	; 6
     842:	80 83       	st	Z, r24
     844:	83 e3       	ldi	r24, 0x33	; 51
     846:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     84a:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     84e:	08 95       	ret

00000850 <USART_Flush>:
     850:	81 30       	cpi	r24, 0x01	; 1
     852:	29 f4       	brne	.+10     	; 0x85e <USART_Flush+0xe>
     854:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     858:	88 23       	and	r24, r24
     85a:	84 f0       	brlt	.+32     	; 0x87c <USART_Flush+0x2c>
     85c:	08 95       	ret
     85e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     862:	88 23       	and	r24, r24
     864:	ac f4       	brge	.+42     	; 0x890 <USART_Flush+0x40>
     866:	a6 ec       	ldi	r26, 0xC6	; 198
     868:	b0 e0       	ldi	r27, 0x00	; 0
     86a:	e0 ec       	ldi	r30, 0xC0	; 192
     86c:	f0 e0       	ldi	r31, 0x00	; 0
     86e:	8c 91       	ld	r24, X
     870:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <dummy.2051>
     874:	80 81       	ld	r24, Z
     876:	88 23       	and	r24, r24
     878:	d4 f3       	brlt	.-12     	; 0x86e <USART_Flush+0x1e>
     87a:	08 95       	ret
     87c:	ae ec       	ldi	r26, 0xCE	; 206
     87e:	b0 e0       	ldi	r27, 0x00	; 0
     880:	e8 ec       	ldi	r30, 0xC8	; 200
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	8c 91       	ld	r24, X
     886:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <dummy.2051>
     88a:	80 81       	ld	r24, Z
     88c:	88 23       	and	r24, r24
     88e:	d4 f3       	brlt	.-12     	; 0x884 <USART_Flush+0x34>
     890:	08 95       	ret

00000892 <USART_Send>:
     892:	61 30       	cpi	r22, 0x01	; 1
     894:	41 f0       	breq	.+16     	; 0x8a6 <USART_Send+0x14>
     896:	e0 ec       	ldi	r30, 0xC0	; 192
     898:	f0 e0       	ldi	r31, 0x00	; 0
     89a:	90 81       	ld	r25, Z
     89c:	95 ff       	sbrs	r25, 5
     89e:	fd cf       	rjmp	.-6      	; 0x89a <USART_Send+0x8>
     8a0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     8a4:	08 95       	ret
     8a6:	e8 ec       	ldi	r30, 0xC8	; 200
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	90 81       	ld	r25, Z
     8ac:	95 ff       	sbrs	r25, 5
     8ae:	fd cf       	rjmp	.-6      	; 0x8aa <USART_Send+0x18>
     8b0:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     8b4:	08 95       	ret

000008b6 <USART_Receive>:
     8b6:	81 30       	cpi	r24, 0x01	; 1
     8b8:	41 f0       	breq	.+16     	; 0x8ca <USART_Receive+0x14>
     8ba:	e0 ec       	ldi	r30, 0xC0	; 192
     8bc:	f0 e0       	ldi	r31, 0x00	; 0
     8be:	80 81       	ld	r24, Z
     8c0:	88 23       	and	r24, r24
     8c2:	ec f7       	brge	.-6      	; 0x8be <USART_Receive+0x8>
     8c4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     8c8:	08 95       	ret
     8ca:	e8 ec       	ldi	r30, 0xC8	; 200
     8cc:	f0 e0       	ldi	r31, 0x00	; 0
     8ce:	80 81       	ld	r24, Z
     8d0:	88 23       	and	r24, r24
     8d2:	ec f7       	brge	.-6      	; 0x8ce <USART_Receive+0x18>
     8d4:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     8d8:	08 95       	ret

000008da <randpiece>:
	char part3[2];
		
	};
	
struct piece randpiece()
{
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	00 d0       	rcall	.+0      	; 0x8e0 <randpiece+0x6>
     8e0:	00 d0       	rcall	.+0      	; 0x8e2 <randpiece+0x8>
     8e2:	00 d0       	rcall	.+0      	; 0x8e4 <randpiece+0xa>
     8e4:	cd b7       	in	r28, 0x3d	; 61
     8e6:	de b7       	in	r29, 0x3e	; 62
	struct piece prandom;
	if (pselection==4)
     8e8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pselection>
     8ec:	84 30       	cpi	r24, 0x04	; 4
     8ee:	61 f0       	breq	.+24     	; 0x908 <randpiece+0x2e>
	{
		pselection=0;
	}
	  if (pselection==0)
     8f0:	88 23       	and	r24, r24
     8f2:	79 f0       	breq	.+30     	; 0x912 <randpiece+0x38>
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
		  prandom.part3[0]=1;prandom.part3[1]=1;
	  }
	  else if (pselection==1)
     8f4:	81 30       	cpi	r24, 0x01	; 1
     8f6:	89 f0       	breq	.+34     	; 0x91a <randpiece+0x40>
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=1;
		  prandom.part3[0]=0;prandom.part3[1]=0;
	  }
	  else if (pselection==2)
     8f8:	82 30       	cpi	r24, 0x02	; 2
     8fa:	99 f0       	breq	.+38     	; 0x922 <randpiece+0x48>
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=1;
		  prandom.part3[0]=1;prandom.part3[1]=1;
	  }
	  else if (pselection==3)
     8fc:	83 30       	cpi	r24, 0x03	; 3
     8fe:	a1 f4       	brne	.+40     	; 0x928 <randpiece+0x4e>
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
		  prandom.part3[0]=0;prandom.part3[1]=1;
     900:	71 e0       	ldi	r23, 0x01	; 1
     902:	60 e0       	ldi	r22, 0x00	; 0
		  prandom.part3[0]=1;prandom.part3[1]=1;
	  }
	  else if (pselection==3)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	10 c0       	rjmp	.+32     	; 0x928 <randpiece+0x4e>
	struct piece prandom;
	if (pselection==4)
	{
		pselection=0;
	}
	  if (pselection==0)
     908:	80 e0       	ldi	r24, 0x00	; 0
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
		  prandom.part3[0]=1;prandom.part3[1]=1;
     90a:	71 e0       	ldi	r23, 0x01	; 1
     90c:	61 e0       	ldi	r22, 0x01	; 1
		pselection=0;
	}
	  if (pselection==0)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
     90e:	50 e0       	ldi	r21, 0x00	; 0
     910:	0b c0       	rjmp	.+22     	; 0x928 <randpiece+0x4e>
		  prandom.part3[0]=1;prandom.part3[1]=1;
     912:	71 e0       	ldi	r23, 0x01	; 1
     914:	61 e0       	ldi	r22, 0x01	; 1
		pselection=0;
	}
	  if (pselection==0)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
     916:	50 e0       	ldi	r21, 0x00	; 0
     918:	07 c0       	rjmp	.+14     	; 0x928 <randpiece+0x4e>
	  }
	  else if (pselection==1)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=1;
		  prandom.part3[0]=0;prandom.part3[1]=0;
     91a:	70 e0       	ldi	r23, 0x00	; 0
     91c:	60 e0       	ldi	r22, 0x00	; 0
		  prandom.part3[0]=1;prandom.part3[1]=1;
	  }
	  else if (pselection==1)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=1;
     91e:	51 e0       	ldi	r21, 0x01	; 1
     920:	03 c0       	rjmp	.+6      	; 0x928 <randpiece+0x4e>
	  }
	  else if (pselection==2)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=1;
		  prandom.part3[0]=1;prandom.part3[1]=1;
     922:	71 e0       	ldi	r23, 0x01	; 1
     924:	61 e0       	ldi	r22, 0x01	; 1
		  prandom.part3[0]=0;prandom.part3[1]=0;
	  }
	  else if (pselection==2)
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=1;
     926:	51 e0       	ldi	r21, 0x01	; 1
	  {
		  prandom.part1[0]=0;prandom.part1[1]=0;
		  prandom.part2[0]=1;prandom.part2[1]=0;
		  prandom.part3[0]=0;prandom.part3[1]=1;
	  }
	 pselection++;
     928:	8f 5f       	subi	r24, 0xFF	; 255
     92a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <pselection>
	 return prandom;
}
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	41 e0       	ldi	r20, 0x01	; 1
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	26 96       	adiw	r28, 0x06	; 6
     93a:	0f b6       	in	r0, 0x3f	; 63
     93c:	f8 94       	cli
     93e:	de bf       	out	0x3e, r29	; 62
     940:	0f be       	out	0x3f, r0	; 63
     942:	cd bf       	out	0x3d, r28	; 61
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	08 95       	ret

0000094a <SMTick1>:
//--------User defined FSMs---------------------------------------------------
//Enumeration of states.
enum Movement_States {SM_Start,init,insert,movedown,left,right,hd,remov,rotate,gameov};

 //checks movement and changes position if movement
int SMTick1(int state) {
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	ec 01       	movw	r28, r24

	// Local Variables
	//unsigned char press = ~PINA & 0x01;
	//State machine transitions
	switch (state) {
     954:	8a 30       	cpi	r24, 0x0A	; 10
     956:	91 05       	cpc	r25, r1
     958:	10 f0       	brcs	.+4      	; 0x95e <SMTick1+0x14>
     95a:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <SMTick1+0x12ec>
     95e:	fc 01       	movw	r30, r24
     960:	e1 5b       	subi	r30, 0xB1	; 177
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__tablejump2__>
//Functionality - Gets bit from a PINx
//Parameter: Takes in a uChar for a PINx and the pin number
//Returns: The value of the PINx
unsigned char GetBit(unsigned char port, unsigned char number) 
{
	return ( port & (0x01 << number) );
     968:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <button>
	case SM_Start: 	
	state = init;
	break;

	case init:	
	if (GetBit(button,0)!=1)
     96c:	80 fd       	sbrc	r24, 0
     96e:	08 c0       	rjmp	.+16     	; 0x980 <SMTick1+0x36>
//Functionality - checks if USART is ready to send
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_IsSendReady(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << UDRE0)) : (UCSR1A & (1 << UDRE1));
     970:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
	{
		if (USART_IsSendReady(1))
     974:	85 ff       	sbrs	r24, 5
     976:	5b c0       	rjmp	.+182    	; 0xa2e <SMTick1+0xe4>
		{
			USART_Send(0xFF,1);
     978:	61 e0       	ldi	r22, 0x01	; 1
     97a:	8f ef       	ldi	r24, 0xFF	; 255
     97c:	8a df       	rcall	.-236    	; 0x892 <USART_Send>
     97e:	db c0       	rjmp	.+438    	; 0xb36 <SMTick1+0x1ec>
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
     980:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
			state = insert;
		}
	}
	else if (USART_HasReceived(1)) {
     984:	88 23       	and	r24, r24
     986:	0c f0       	brlt	.+2      	; 0x98a <SMTick1+0x40>
     988:	52 c0       	rjmp	.+164    	; 0xa2e <SMTick1+0xe4>
		receive = USART_Receive(1);
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	94 df       	rcall	.-216    	; 0x8b6 <USART_Receive>
     98e:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <receive>
		
		if (GetBit(receive,0)!=1)
     992:	80 fd       	sbrc	r24, 0
     994:	02 c0       	rjmp	.+4      	; 0x99a <SMTick1+0x50>
		{
			state=insert;
     996:	c2 e0       	ldi	r28, 0x02	; 2
     998:	d0 e0       	ldi	r29, 0x00	; 0
		}
		USART_Flush(1);
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	59 df       	rcall	.-334    	; 0x850 <USART_Flush>
     99e:	3c c0       	rjmp	.+120    	; 0xa18 <SMTick1+0xce>
	case remov:
	state=insert;
	break;
	
	case insert:
	if (rowfull==1)
     9a0:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <rowfull>
     9a4:	81 30       	cpi	r24, 0x01	; 1
     9a6:	09 f0       	breq	.+2      	; 0x9aa <SMTick1+0x60>
     9a8:	05 c1       	rjmp	.+522    	; 0xbb4 <SMTick1+0x26a>
     9aa:	7c c0       	rjmp	.+248    	; 0xaa4 <SMTick1+0x15a>
	else
	state=movedown;
	break;
	
	case movedown:
	if (adcvalue>=0&&adcvalue<200)
     9ac:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <adcvalue>
     9b0:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <adcvalue+0x1>
     9b4:	88 3c       	cpi	r24, 0xC8	; 200
     9b6:	91 05       	cpc	r25, r1
     9b8:	10 f4       	brcc	.+4      	; 0x9be <SMTick1+0x74>
     9ba:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <SMTick1+0x1382>
		{
			state=left;
		}
		else if (adcvalue<=999&&adcvalue>550)
     9be:	87 52       	subi	r24, 0x27	; 39
     9c0:	92 40       	sbci	r25, 0x02	; 2
     9c2:	81 3c       	cpi	r24, 0xC1	; 193
     9c4:	91 40       	sbci	r25, 0x01	; 1
     9c6:	10 f4       	brcc	.+4      	; 0x9cc <SMTick1+0x82>
     9c8:	0c 94 73 0e 	jmp	0x1ce6	; 0x1ce6 <SMTick1+0x139c>
		{
			state=right;
		}
		else if (endg==1)
     9cc:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <endg>
     9d0:	81 30       	cpi	r24, 0x01	; 1
     9d2:	11 f4       	brne	.+4      	; 0x9d8 <SMTick1+0x8e>
     9d4:	0c 94 86 0e 	jmp	0x1d0c	; 0x1d0c <SMTick1+0x13c2>
		{
			state=gameov;
		}
		else if (count==7)
     9d8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <count>
     9dc:	87 30       	cpi	r24, 0x07	; 7
     9de:	11 f4       	brne	.+4      	; 0x9e4 <SMTick1+0x9a>
     9e0:	0c 94 79 0e 	jmp	0x1cf2	; 0x1cf2 <SMTick1+0x13a8>
     9e4:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <rotbutton>
		{
			state=insert;
		}
		else if(GetBit(rotbutton,0)!=1)
     9e8:	80 fd       	sbrc	r24, 0
     9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <SMTick1+0xa6>
     9ec:	0c 94 80 0e 	jmp	0x1d00	; 0x1d00 <SMTick1+0x13b6>
     9f0:	0c 94 6c 0e 	jmp	0x1cd8	; 0x1cd8 <SMTick1+0x138e>
			state=gameov;
		}
		break;
	
	case left:
		if (adcvalue>=50&&adcvalue<200)
     9f4:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <adcvalue>
     9f8:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <adcvalue+0x1>
     9fc:	c2 97       	sbiw	r24, 0x32	; 50
     9fe:	86 39       	cpi	r24, 0x96	; 150
     a00:	91 05       	cpc	r25, r1
     a02:	08 f4       	brcc	.+2      	; 0xa06 <SMTick1+0xbc>
     a04:	e4 c2       	rjmp	.+1480   	; 0xfce <SMTick1+0x684>
     a06:	d6 c0       	rjmp	.+428    	; 0xbb4 <SMTick1+0x26a>
     a08:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <button>
	case rotate:
    state=movedown;
	break;
	
	case  gameov:
	if (GetBit(button,0)!=1)
     a0c:	80 ff       	sbrs	r24, 0
     a0e:	0f c0       	rjmp	.+30     	; 0xa2e <SMTick1+0xe4>
     a10:	0c 94 d9 0d 	jmp	0x1bb2	; 0x1bb2 <SMTick1+0x1268>
	//unsigned char press = ~PINA & 0x01;
	//State machine transitions
	switch (state) {
	
	case SM_Start: 	
	state = init;
     a14:	c1 e0       	ldi	r28, 0x01	; 1
     a16:	d0 e0       	ldi	r29, 0x00	; 0
	state = SM_Start; // default: Initial state
	break;
	}

	//State machine actions
	switch(state) {
     a18:	fe 01       	movw	r30, r28
     a1a:	31 97       	sbiw	r30, 0x01	; 1
     a1c:	e9 30       	cpi	r30, 0x09	; 9
     a1e:	f1 05       	cpc	r31, r1
     a20:	10 f0       	brcs	.+4      	; 0xa26 <SMTick1+0xdc>
     a22:	0c 94 1e 0e 	jmp	0x1c3c	; 0x1c3c <SMTick1+0x12f2>
     a26:	e7 5a       	subi	r30, 0xA7	; 167
     a28:	ff 4f       	sbci	r31, 0xFF	; 255
     a2a:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__tablejump2__>
	case SM_Start:	
	break;

	case init:	
	LCD_DisplayString(1, "Press Button to start");
     a2e:	6c e1       	ldi	r22, 0x1C	; 28
     a30:	71 e0       	ldi	r23, 0x01	; 1
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	72 de       	rcall	.-796    	; 0x71a <LCD_DisplayString>
	endg=0;
     a36:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <endg>
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	09 c0       	rjmp	.+18     	; 0xa52 <SMTick1+0x108>
	for (int i=0;i<9;i++)
	{
		for (int j=0;j<8;j++)
		{
			row[i][j]=output[i][j];
     a40:	81 91       	ld	r24, Z+
     a42:	8d 93       	st	X+, r24
	case init:	
	LCD_DisplayString(1, "Press Button to start");
	endg=0;
	for (int i=0;i<9;i++)
	{
		for (int j=0;j<8;j++)
     a44:	2e 17       	cp	r18, r30
     a46:	3f 07       	cpc	r19, r31
     a48:	d9 f7       	brne	.-10     	; 0xa40 <SMTick1+0xf6>
     a4a:	ca 01       	movw	r24, r20
	break;

	case init:	
	LCD_DisplayString(1, "Press Button to start");
	endg=0;
	for (int i=0;i<9;i++)
     a4c:	48 34       	cpi	r20, 0x48	; 72
     a4e:	51 05       	cpc	r21, r1
     a50:	69 f0       	breq	.+26     	; 0xa6c <SMTick1+0x122>
     a52:	fc 01       	movw	r30, r24
     a54:	e0 55       	subi	r30, 0x50	; 80
     a56:	fe 4f       	sbci	r31, 0xFE	; 254
     a58:	dc 01       	movw	r26, r24
     a5a:	a8 50       	subi	r26, 0x08	; 8
     a5c:	be 4f       	sbci	r27, 0xFE	; 254
     a5e:	ac 01       	movw	r20, r24
     a60:	48 5f       	subi	r20, 0xF8	; 248
     a62:	5f 4f       	sbci	r21, 0xFF	; 255
     a64:	9a 01       	movw	r18, r20
     a66:	20 55       	subi	r18, 0x50	; 80
     a68:	3e 4f       	sbci	r19, 0xFE	; 254
     a6a:	ea cf       	rjmp	.-44     	; 0xa40 <SMTick1+0xf6>
     a6c:	e0 eb       	ldi	r30, 0xB0	; 176
     a6e:	f1 e0       	ldi	r31, 0x01	; 1
     a70:	a8 ef       	ldi	r26, 0xF8	; 248
     a72:	b1 e0       	ldi	r27, 0x01	; 1
     a74:	28 eb       	ldi	r18, 0xB8	; 184
     a76:	31 e0       	ldi	r19, 0x01	; 1
			row[i][j]=output[i][j];
		}
	}
		for (int j=0;j<8;j++)
		{
			row[0][j]=output[0][j];
     a78:	81 91       	ld	r24, Z+
     a7a:	8d 93       	st	X+, r24
		for (int j=0;j<8;j++)
		{
			row[i][j]=output[i][j];
		}
	}
		for (int j=0;j<8;j++)
     a7c:	e2 17       	cp	r30, r18
     a7e:	f3 07       	cpc	r31, r19
     a80:	d9 f7       	brne	.-10     	; 0xa78 <SMTick1+0x12e>
     a82:	e0 ef       	ldi	r30, 0xF0	; 240
     a84:	f1 e0       	ldi	r31, 0x01	; 1
     a86:	a8 e3       	ldi	r26, 0x38	; 56
     a88:	b2 e0       	ldi	r27, 0x02	; 2
     a8a:	28 ef       	ldi	r18, 0xF8	; 248
     a8c:	31 e0       	ldi	r19, 0x01	; 1
		{
			row[0][j]=output[0][j];
		}
    	for (int j=0;j<8;j++)
		{
			row[8][j]=output[8][j];
     a8e:	81 91       	ld	r24, Z+
     a90:	8d 93       	st	X+, r24
	}
		for (int j=0;j<8;j++)
		{
			row[0][j]=output[0][j];
		}
    	for (int j=0;j<8;j++)
     a92:	e2 17       	cp	r30, r18
     a94:	f3 07       	cpc	r31, r19
     a96:	d9 f7       	brne	.-10     	; 0xa8e <SMTick1+0x144>
		{
			row[8][j]=output[8][j];
		}
	
	count=0;
     a98:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <count>
	//LCD_DisplayString(1, "Score" +score);
	break;
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <SMTick1+0x1554>
	
	case remov:
	rowfull=0;
     aa4:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <rowfull>
     aa8:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <delr>
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	88 0f       	add	r24, r24
     ab0:	99 1f       	adc	r25, r25
     ab2:	88 0f       	add	r24, r24
     ab4:	99 1f       	adc	r25, r25
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	fc 01       	movw	r30, r24
     abc:	e8 50       	subi	r30, 0x08	; 8
     abe:	fe 4f       	sbci	r31, 0xFE	; 254
     ac0:	80 50       	subi	r24, 0x00	; 0
     ac2:	9e 4f       	sbci	r25, 0xFE	; 254
	//removes filled row then moves all rows down one
	for(int i=0;i<8;i++){
		row[delr][i]=0;
     ac4:	11 92       	st	Z+, r1
	break;
	
	case remov:
	rowfull=0;
	//removes filled row then moves all rows down one
	for(int i=0;i<8;i++){
     ac6:	e8 17       	cp	r30, r24
     ac8:	f9 07       	cpc	r31, r25
     aca:	e1 f7       	brne	.-8      	; 0xac4 <SMTick1+0x17a>
		row[delr][i]=0;
	}
	for (int i=delr;i<7;i++)
     acc:	20 91 91 01 	lds	r18, 0x0191	; 0x800191 <delr>
     ad0:	82 2f       	mov	r24, r18
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	87 30       	cpi	r24, 0x07	; 7
     ad6:	91 05       	cpc	r25, r1
     ad8:	d4 f4       	brge	.+52     	; 0xb0e <SMTick1+0x1c4>
     ada:	9c 01       	movw	r18, r24
     adc:	22 0f       	add	r18, r18
     ade:	33 1f       	adc	r19, r19
     ae0:	22 0f       	add	r18, r18
     ae2:	33 1f       	adc	r19, r19
     ae4:	22 0f       	add	r18, r18
     ae6:	33 1f       	adc	r19, r19
     ae8:	20 50       	subi	r18, 0x00	; 0
     aea:	3e 4f       	sbci	r19, 0xFE	; 254
     aec:	48 e3       	ldi	r20, 0x38	; 56
     aee:	52 e0       	ldi	r21, 0x02	; 2
     af0:	0a c0       	rjmp	.+20     	; 0xb06 <SMTick1+0x1bc>
	{
		for (int j=0;j<8;j++)
		{
			row[i][j]=row[i+1][j];
     af2:	8d 91       	ld	r24, X+
     af4:	81 93       	st	Z+, r24
	for(int i=0;i<8;i++){
		row[delr][i]=0;
	}
	for (int i=delr;i<7;i++)
	{
		for (int j=0;j<8;j++)
     af6:	2e 17       	cp	r18, r30
     af8:	3f 07       	cpc	r19, r31
     afa:	d9 f7       	brne	.-10     	; 0xaf2 <SMTick1+0x1a8>
     afc:	28 5f       	subi	r18, 0xF8	; 248
     afe:	3f 4f       	sbci	r19, 0xFF	; 255
	rowfull=0;
	//removes filled row then moves all rows down one
	for(int i=0;i<8;i++){
		row[delr][i]=0;
	}
	for (int i=delr;i<7;i++)
     b00:	24 17       	cp	r18, r20
     b02:	35 07       	cpc	r19, r21
     b04:	21 f0       	breq	.+8      	; 0xb0e <SMTick1+0x1c4>
     b06:	f9 01       	movw	r30, r18
     b08:	38 97       	sbiw	r30, 0x08	; 8
	case SM_Start:	
	break;

	case init:	
	LCD_DisplayString(1, "Press Button to start");
	endg=0;
     b0a:	d9 01       	movw	r26, r18
     b0c:	f2 cf       	rjmp	.-28     	; 0xaf2 <SMTick1+0x1a8>
		for (int j=0;j<8;j++)
		{
			row[i][j]=row[i+1][j];
		}
	}
	cnt++;
     b0e:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <cnt>
     b12:	91 e0       	ldi	r25, 0x01	; 1
     b14:	98 0f       	add	r25, r24
     b16:	90 93 8e 01 	sts	0x018E, r25	; 0x80018e <cnt>
	score=cnt+'0';
     b1a:	8f 5c       	subi	r24, 0xCF	; 207
     b1c:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <score>
	str[0]=score;
     b20:	eb e4       	ldi	r30, 0x4B	; 75
     b22:	f2 e0       	ldi	r31, 0x02	; 2
     b24:	80 83       	st	Z, r24
	str[1]='\0';
     b26:	11 82       	std	Z+1, r1	; 0x01
	LCD_DisplayString(1, str);
     b28:	bf 01       	movw	r22, r30
     b2a:	81 e0       	ldi	r24, 0x01	; 1
     b2c:	f6 dd       	rcall	.-1044   	; 0x71a <LCD_DisplayString>
	break;
     b2e:	87 e0       	ldi	r24, 0x07	; 7
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <SMTick1+0x1554>
	
	case insert:
	  block=randpiece();
     b36:	d1 de       	rcall	.-606    	; 0x8da <randpiece>
     b38:	20 93 45 02 	sts	0x0245, r18	; 0x800245 <block>
     b3c:	30 93 46 02 	sts	0x0246, r19	; 0x800246 <block+0x1>
     b40:	40 93 47 02 	sts	0x0247, r20	; 0x800247 <block+0x2>
     b44:	50 93 48 02 	sts	0x0248, r21	; 0x800248 <block+0x3>
     b48:	60 93 49 02 	sts	0x0249, r22	; 0x800249 <block+0x4>
     b4c:	70 93 4a 02 	sts	0x024A, r23	; 0x80024a <block+0x5>
		  part2row=7;
     b50:	87 e0       	ldi	r24, 0x07	; 7
     b52:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <part2row>
		  part1row=8;
     b56:	88 e0       	ldi	r24, 0x08	; 8
     b58:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <part1row>
		  //set to variable to rotate parts later
		upr=block.part2[0];
     b5c:	40 93 8d 01 	sts	0x018D, r20	; 0x80018d <upr>
		upl=block.part3[0];
     b60:	60 93 8b 01 	sts	0x018B, r22	; 0x80018b <upl>
		lwr=block.part2[1];
     b64:	50 93 8c 01 	sts	0x018C, r21	; 0x80018c <lwr>
		lwl=block.part3[1];
     b68:	70 93 8a 01 	sts	0x018A, r23	; 0x80018a <lwl>
	   row[part1row][column1]=upr;
     b6c:	a0 91 01 01 	lds	r26, 0x0101	; 0x800101 <column1>
     b70:	b0 e0       	ldi	r27, 0x00	; 0
     b72:	a8 50       	subi	r26, 0x08	; 8
     b74:	be 4f       	sbci	r27, 0xFE	; 254
     b76:	fd 01       	movw	r30, r26
     b78:	e0 5c       	subi	r30, 0xC0	; 192
     b7a:	ff 4f       	sbci	r31, 0xFF	; 255
     b7c:	40 83       	st	Z, r20
	   row[part1row][column2]=upl;
     b7e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
     b82:	f0 e0       	ldi	r31, 0x00	; 0
     b84:	e8 50       	subi	r30, 0x08	; 8
     b86:	fe 4f       	sbci	r31, 0xFE	; 254
     b88:	ef 01       	movw	r28, r30
     b8a:	c0 5c       	subi	r28, 0xC0	; 192
     b8c:	df 4f       	sbci	r29, 0xFF	; 255
     b8e:	68 83       	st	Y, r22
	   row[part2row][column1]=lwr;
     b90:	d8 96       	adiw	r26, 0x38	; 56
     b92:	5c 93       	st	X, r21
	   row[part2row][column2]=lwl;
     b94:	70 af       	std	Z+56, r23	; 0x38
	   count=0;
     b96:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <count>
	   score=cnt+'0';
     b9a:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <cnt>
     b9e:	80 5d       	subi	r24, 0xD0	; 208
     ba0:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <score>
	   str[0]=score;
     ba4:	eb e4       	ldi	r30, 0x4B	; 75
     ba6:	f2 e0       	ldi	r31, 0x02	; 2
     ba8:	80 83       	st	Z, r24
	   str[1]='\0';
     baa:	11 82       	std	Z+1, r1	; 0x01
	//   LCD_DisplayString(1, str);
	break;
     bac:	82 e0       	ldi	r24, 0x02	; 2
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <SMTick1+0x1554>
	case movedown:
	 if (row[part2row][column1]==0&&row[part2row-1][column1]==1&& row[part2row-1][column2]==0&&row[part2row][column2]==1)//check lower right is empty
     bb4:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <part2row>
     bb8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <column1>
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	24 2f       	mov	r18, r20
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	fc 01       	movw	r30, r24
     bc4:	58 e0       	ldi	r21, 0x08	; 8
     bc6:	45 9f       	mul	r20, r21
     bc8:	e0 0d       	add	r30, r0
     bca:	f1 1d       	adc	r31, r1
     bcc:	11 24       	eor	r1, r1
     bce:	e8 50       	subi	r30, 0x08	; 8
     bd0:	fe 4f       	sbci	r31, 0xFE	; 254
     bd2:	50 81       	ld	r21, Z
     bd4:	51 11       	cpse	r21, r1
     bd6:	0c 94 89 0e 	jmp	0x1d12	; 0x1d12 <SMTick1+0x13c8>
     bda:	b9 01       	movw	r22, r18
     bdc:	61 50       	subi	r22, 0x01	; 1
     bde:	71 09       	sbc	r23, r1
     be0:	fb 01       	movw	r30, r22
     be2:	ee 0f       	add	r30, r30
     be4:	ff 1f       	adc	r31, r31
     be6:	ee 0f       	add	r30, r30
     be8:	ff 1f       	adc	r31, r31
     bea:	ee 0f       	add	r30, r30
     bec:	ff 1f       	adc	r31, r31
     bee:	e8 0f       	add	r30, r24
     bf0:	f9 1f       	adc	r31, r25
     bf2:	e8 50       	subi	r30, 0x08	; 8
     bf4:	fe 4f       	sbci	r31, 0xFE	; 254
     bf6:	50 81       	ld	r21, Z
     bf8:	51 30       	cpi	r21, 0x01	; 1
     bfa:	09 f0       	breq	.+2      	; 0xbfe <SMTick1+0x2b4>
     bfc:	67 c1       	rjmp	.+718    	; 0xecc <SMTick1+0x582>
     bfe:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
     c02:	f0 e0       	ldi	r31, 0x00	; 0
     c04:	db 01       	movw	r26, r22
     c06:	aa 0f       	add	r26, r26
     c08:	bb 1f       	adc	r27, r27
     c0a:	aa 0f       	add	r26, r26
     c0c:	bb 1f       	adc	r27, r27
     c0e:	aa 0f       	add	r26, r26
     c10:	bb 1f       	adc	r27, r27
     c12:	ae 0f       	add	r26, r30
     c14:	bf 1f       	adc	r27, r31
     c16:	a8 50       	subi	r26, 0x08	; 8
     c18:	be 4f       	sbci	r27, 0xFE	; 254
     c1a:	5c 91       	ld	r21, X
     c1c:	51 11       	cpse	r21, r1
     c1e:	0c 94 94 0e 	jmp	0x1d28	; 0x1d28 <SMTick1+0x13de>
     c22:	d9 01       	movw	r26, r18
     c24:	aa 0f       	add	r26, r26
     c26:	bb 1f       	adc	r27, r27
     c28:	aa 0f       	add	r26, r26
     c2a:	bb 1f       	adc	r27, r27
     c2c:	aa 0f       	add	r26, r26
     c2e:	bb 1f       	adc	r27, r27
     c30:	ae 0f       	add	r26, r30
     c32:	bf 1f       	adc	r27, r31
     c34:	a8 50       	subi	r26, 0x08	; 8
     c36:	be 4f       	sbci	r27, 0xFE	; 254
     c38:	5c 91       	ld	r21, X
     c3a:	51 30       	cpi	r21, 0x01	; 1
     c3c:	11 f0       	breq	.+4      	; 0xc42 <SMTick1+0x2f8>
     c3e:	0c 94 94 0e 	jmp	0x1d28	; 0x1d28 <SMTick1+0x13de>
	 {
		 if (part2row==0)
     c42:	41 11       	cpse	r20, r1
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <SMTick1+0x304>
		 {
			 count=7;
     c46:	27 e0       	ldi	r18, 0x07	; 7
     c48:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <count>
     c4c:	05 c0       	rjmp	.+10     	; 0xc58 <SMTick1+0x30e>
		 }
		 else
		 {
			 count++;
     c4e:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <count>
     c52:	2f 5f       	subi	r18, 0xFF	; 255
     c54:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <count>
		 }
	row[part1row-1][column2]=upl;
     c58:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <part1row>
     c5c:	25 2f       	mov	r18, r21
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	d9 01       	movw	r26, r18
     c62:	11 97       	sbiw	r26, 0x01	; 1
     c64:	aa 0f       	add	r26, r26
     c66:	bb 1f       	adc	r27, r27
     c68:	aa 0f       	add	r26, r26
     c6a:	bb 1f       	adc	r27, r27
     c6c:	aa 0f       	add	r26, r26
     c6e:	bb 1f       	adc	r27, r27
     c70:	ed 01       	movw	r28, r26
     c72:	ce 0f       	add	r28, r30
     c74:	df 1f       	adc	r29, r31
     c76:	c8 50       	subi	r28, 0x08	; 8
     c78:	de 4f       	sbci	r29, 0xFE	; 254
     c7a:	10 91 8b 01 	lds	r17, 0x018B	; 0x80018b <upl>
     c7e:	18 83       	st	Y, r17
	 row[part2row-1][column2]=lwl;
     c80:	eb 01       	movw	r28, r22
     c82:	cc 0f       	add	r28, r28
     c84:	dd 1f       	adc	r29, r29
     c86:	cc 0f       	add	r28, r28
     c88:	dd 1f       	adc	r29, r29
     c8a:	cc 0f       	add	r28, r28
     c8c:	dd 1f       	adc	r29, r29
     c8e:	ce 0f       	add	r28, r30
     c90:	df 1f       	adc	r29, r31
     c92:	c8 50       	subi	r28, 0x08	; 8
     c94:	de 4f       	sbci	r29, 0xFE	; 254
     c96:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <lwl>
     c9a:	68 83       	st	Y, r22
	 
	 //row[part2row-1][column1]=block.part2[1];
	 row[part1row-1][column1]=upr;
     c9c:	a8 0f       	add	r26, r24
     c9e:	b9 1f       	adc	r27, r25
     ca0:	a8 50       	subi	r26, 0x08	; 8
     ca2:	be 4f       	sbci	r27, 0xFE	; 254
     ca4:	60 91 8d 01 	lds	r22, 0x018D	; 0x80018d <upr>
     ca8:	6c 93       	st	X, r22
	 row[part1row][column1]=0;
     caa:	22 0f       	add	r18, r18
     cac:	33 1f       	adc	r19, r19
     cae:	22 0f       	add	r18, r18
     cb0:	33 1f       	adc	r19, r19
     cb2:	22 0f       	add	r18, r18
     cb4:	33 1f       	adc	r19, r19
     cb6:	82 0f       	add	r24, r18
     cb8:	93 1f       	adc	r25, r19
     cba:	dc 01       	movw	r26, r24
     cbc:	a8 50       	subi	r26, 0x08	; 8
     cbe:	be 4f       	sbci	r27, 0xFE	; 254
     cc0:	1c 92       	st	X, r1
	 row[part1row][column2]=0;
     cc2:	e2 0f       	add	r30, r18
     cc4:	f3 1f       	adc	r31, r19
     cc6:	e8 50       	subi	r30, 0x08	; 8
     cc8:	fe 4f       	sbci	r31, 0xFE	; 254
     cca:	10 82       	st	Z, r1
	 part2row--;
     ccc:	41 50       	subi	r20, 0x01	; 1
     cce:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <part2row>
	 part1row--;
     cd2:	51 50       	subi	r21, 0x01	; 1
     cd4:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <part1row>
     cd8:	83 e0       	ldi	r24, 0x03	; 3
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <SMTick1+0x1554>
	 }
	 else if (row[part2row][column1]==1&&row[part2row-1][column1]==0&& row[part2row-1][column2]==1&&row[part2row][column2]==0)//check if lower left is empty and continues moving
     ce0:	d9 01       	movw	r26, r18
     ce2:	11 97       	sbiw	r26, 0x01	; 1
     ce4:	fd 01       	movw	r30, r26
     ce6:	ee 0f       	add	r30, r30
     ce8:	ff 1f       	adc	r31, r31
     cea:	ee 0f       	add	r30, r30
     cec:	ff 1f       	adc	r31, r31
     cee:	ee 0f       	add	r30, r30
     cf0:	ff 1f       	adc	r31, r31
     cf2:	e8 0f       	add	r30, r24
     cf4:	f9 1f       	adc	r31, r25
     cf6:	e8 50       	subi	r30, 0x08	; 8
     cf8:	fe 4f       	sbci	r31, 0xFE	; 254
     cfa:	50 81       	ld	r21, Z
     cfc:	51 11       	cpse	r21, r1
     cfe:	61 c1       	rjmp	.+706    	; 0xfc2 <SMTick1+0x678>
     d00:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	fd 01       	movw	r30, r26
     d08:	ee 0f       	add	r30, r30
     d0a:	ff 1f       	adc	r31, r31
     d0c:	ee 0f       	add	r30, r30
     d0e:	ff 1f       	adc	r31, r31
     d10:	ee 0f       	add	r30, r30
     d12:	ff 1f       	adc	r31, r31
     d14:	e6 0f       	add	r30, r22
     d16:	f7 1f       	adc	r31, r23
     d18:	e8 50       	subi	r30, 0x08	; 8
     d1a:	fe 4f       	sbci	r31, 0xFE	; 254
     d1c:	50 81       	ld	r21, Z
     d1e:	51 30       	cpi	r21, 0x01	; 1
     d20:	11 f0       	breq	.+4      	; 0xd26 <SMTick1+0x3dc>
     d22:	0c 94 a7 0e 	jmp	0x1d4e	; 0x1d4e <SMTick1+0x1404>
     d26:	f9 01       	movw	r30, r18
     d28:	ee 0f       	add	r30, r30
     d2a:	ff 1f       	adc	r31, r31
     d2c:	ee 0f       	add	r30, r30
     d2e:	ff 1f       	adc	r31, r31
     d30:	ee 0f       	add	r30, r30
     d32:	ff 1f       	adc	r31, r31
     d34:	e6 0f       	add	r30, r22
     d36:	f7 1f       	adc	r31, r23
     d38:	e8 50       	subi	r30, 0x08	; 8
     d3a:	fe 4f       	sbci	r31, 0xFE	; 254
     d3c:	50 81       	ld	r21, Z
     d3e:	51 11       	cpse	r21, r1
     d40:	0c 94 a7 0e 	jmp	0x1d4e	; 0x1d4e <SMTick1+0x1404>
	 {
		  if (part2row==0)
     d44:	41 11       	cpse	r20, r1
     d46:	04 c0       	rjmp	.+8      	; 0xd50 <SMTick1+0x406>
		  {
			  count=7;
     d48:	27 e0       	ldi	r18, 0x07	; 7
     d4a:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <count>
     d4e:	05 c0       	rjmp	.+10     	; 0xd5a <SMTick1+0x410>
		  }
		  else
		  {
			  count++;
     d50:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <count>
     d54:	2f 5f       	subi	r18, 0xFF	; 255
     d56:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <count>
		  }
		 row[part2row-1][column1]=lwr;
     d5a:	fd 01       	movw	r30, r26
     d5c:	ee 0f       	add	r30, r30
     d5e:	ff 1f       	adc	r31, r31
     d60:	ee 0f       	add	r30, r30
     d62:	ff 1f       	adc	r31, r31
     d64:	ee 0f       	add	r30, r30
     d66:	ff 1f       	adc	r31, r31
     d68:	e8 0f       	add	r30, r24
     d6a:	f9 1f       	adc	r31, r25
     d6c:	e8 50       	subi	r30, 0x08	; 8
     d6e:	fe 4f       	sbci	r31, 0xFE	; 254
     d70:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <lwr>
     d74:	20 83       	st	Z, r18
		// row[part2row-1][column2]=block.part3[1];
		 
		 row[part1row-1][column1]=upr;
     d76:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <part1row>
     d7a:	a5 2f       	mov	r26, r21
     d7c:	b0 e0       	ldi	r27, 0x00	; 0
     d7e:	9d 01       	movw	r18, r26
     d80:	21 50       	subi	r18, 0x01	; 1
     d82:	31 09       	sbc	r19, r1
     d84:	22 0f       	add	r18, r18
     d86:	33 1f       	adc	r19, r19
     d88:	22 0f       	add	r18, r18
     d8a:	33 1f       	adc	r19, r19
     d8c:	22 0f       	add	r18, r18
     d8e:	33 1f       	adc	r19, r19
     d90:	f9 01       	movw	r30, r18
     d92:	e8 0f       	add	r30, r24
     d94:	f9 1f       	adc	r31, r25
     d96:	e8 50       	subi	r30, 0x08	; 8
     d98:	fe 4f       	sbci	r31, 0xFE	; 254
     d9a:	c0 91 8d 01 	lds	r28, 0x018D	; 0x80018d <upr>
     d9e:	c0 83       	st	Z, r28
		 row[part1row-1][column2]=upl;
     da0:	26 0f       	add	r18, r22
     da2:	37 1f       	adc	r19, r23
     da4:	f9 01       	movw	r30, r18
     da6:	e8 50       	subi	r30, 0x08	; 8
     da8:	fe 4f       	sbci	r31, 0xFE	; 254
     daa:	20 91 8b 01 	lds	r18, 0x018B	; 0x80018b <upl>
     dae:	20 83       	st	Z, r18
		 row[part1row][column1]=0;
     db0:	fd 01       	movw	r30, r26
     db2:	ee 0f       	add	r30, r30
     db4:	ff 1f       	adc	r31, r31
     db6:	ee 0f       	add	r30, r30
     db8:	ff 1f       	adc	r31, r31
     dba:	ee 0f       	add	r30, r30
     dbc:	ff 1f       	adc	r31, r31
     dbe:	8e 0f       	add	r24, r30
     dc0:	9f 1f       	adc	r25, r31
     dc2:	dc 01       	movw	r26, r24
     dc4:	a8 50       	subi	r26, 0x08	; 8
     dc6:	be 4f       	sbci	r27, 0xFE	; 254
     dc8:	1c 92       	st	X, r1
		 row[part1row][column2]=0;
     dca:	6e 0f       	add	r22, r30
     dcc:	7f 1f       	adc	r23, r31
     dce:	fb 01       	movw	r30, r22
     dd0:	e8 50       	subi	r30, 0x08	; 8
     dd2:	fe 4f       	sbci	r31, 0xFE	; 254
     dd4:	10 82       	st	Z, r1
		 part2row--;
     dd6:	41 50       	subi	r20, 0x01	; 1
     dd8:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <part2row>
		 part1row--;
     ddc:	51 50       	subi	r21, 0x01	; 1
     dde:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <part1row>
		
		 count++;
     de2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <count>
     de6:	8f 5f       	subi	r24, 0xFF	; 255
     de8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <count>
     dec:	83 e0       	ldi	r24, 0x03	; 3
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0c 94 4f 0f 	jmp	0x1e9e	; 0x1e9e <SMTick1+0x1554>
	 }
	  else if (row[part2row][column1]==0&&row[part2row-1][column1]==1&& row[part2row-1][column2]==1&&row[part2row][column2]==0)//check if both bottom is empty and continues moving
     df4:	d9 01       	movw	r26, r18
     df6:	aa 0f       	add	r26, r26
     df8:	bb 1f       	adc	r27, r27
     dfa:	aa 0f       	add	r26, r26
     dfc:	bb 1f       	adc	r27, r27
     dfe:	aa 0f       	add	r26, r26
     e00:	bb 1f       	adc	r27, r27
     e02:	ae 0f       	add	r26, r30
     e04:	bf 1f       	adc	r27, r31
     e06:	a8 50       	subi	r26, 0x08	; 8
     e08:	be 4f       	sbci	r27, 0xFE	; 254
     e0a:	2c 91       	ld	r18, X
     e0c:	21 11       	cpse	r18, r1
     e0e:	d9 c0       	rjmp	.+434    	; 0xfc2 <SMTick1+0x678>
	  {
		  if (part2row==0)
     e10:	41 11       	cpse	r20, r1
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <SMTick1+0x4d2>
		  {
			  count=7;
     e14:	27 e0       	ldi	r18, 0x07	; 7
     e16:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <count>
     e1a:	05 c0       	rjmp	.+10     	; 0xe26 <SMTick1+0x4dc>
		  }
		  else
		  {
			  count++;
     e1c:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <count>
     e20:	2f 5f       	subi	r18, 0xFF	; 255
     e22:	20 93 05 01 	sts	0x0105, r18	; 0x800105 <count>
		  }
		  row[part2row-1][column1]=lwr;
     e26:	66 0f       	add	r22, r22
     e28:	77 1f       	adc	r23, r23
     e2a:	66 0f       	add	r22, r22
     e2c:	77 1f       	adc	r23, r23
     e2e:	66 0f       	add	r22, r22
     e30:	77 1f       	adc	r23, r23
     e32:	db 01       	movw	r26, r22
     e34:	a8 0f       	add	r26, r24
     e36:	b9 1f       	adc	r27, r25
     e38:	a8 50       	subi	r26, 0x08	; 8
     e3a:	be 4f       	sbci	r27, 0xFE	; 254
     e3c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <lwr>
     e40:	2c 93       	st	X, r18
		  row[part2row-1][column2]=lwl;
     e42:	6e 0f       	add	r22, r30
     e44:	7f 1f       	adc	r23, r31
     e46:	db 01       	movw	r26, r22
     e48:	a8 50       	subi	r26, 0x08	; 8
     e4a:	be 4f       	sbci	r27, 0xFE	; 254
     e4c:	20 91 8a 01 	lds	r18, 0x018A	; 0x80018a <lwl>
     e50:	2c 93       	st	X, r18
		  
		 row[part1row-1][column1]=upr;
     e52:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <part1row>
     e56:	25 2f       	mov	r18, r21
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	b9 01       	movw	r22, r18
     e5c:	61 50       	subi	r22, 0x01	; 1
     e5e:	71 09       	sbc	r23, r1
     e60:	66 0f       	add	r22, r22
     e62:	77 1f       	adc	r23, r23
     e64:	66 0f       	add	r22, r22
     e66:	77 1f       	adc	r23, r23
     e68:	66 0f       	add	r22, r22
     e6a:	77 1f       	adc	r23, r23
     e6c:	db 01       	movw	r26, r22
     e6e:	a8 0f       	add	r26, r24
     e70:	b9 1f       	adc	r27, r25
     e72:	a8 50       	subi	r26, 0x08	; 8
     e74:	be 4f       	sbci	r27, 0xFE	; 254
     e76:	c0 91 8d 01 	lds	r28, 0x018D	; 0x80018d <upr>
     e7a:	cc 93       	st	X, r28
		  row[part1row-1][column2]=upl;
     e7c:	6e 0f       	add	r22, r30
     e7e:	7f 1f       	adc	r23, r31
     e80:	db 01       	movw	r26, r22
     e82:	a8 50       	subi	r26, 0x08	; 8
     e84:	be 4f       	sbci	r27, 0xFE	; 254
     e86:	60 91 8b 01 	lds	r22, 0x018B	; 0x80018b <upl>
     e8a:	6c 93       	st	X, r22
		  row[part1row][column1]=0;
     e8c:	22 0f       	add	r18, r18
     e8e:	33 1f       	adc	r19, r19
     e90:	22 0f       	add	r18, r18
     e92:	33 1f       	adc	r19, r19
     e94:	22 0f       	add	r18, r18
     e96:	33 1f       	adc	r19, r19
     e98:	82 0f       	add	r24, r18
     e9a:	93 1f       	adc	r25, r19
     e9c:	dc 01       	movw	r26, r24
     e9e:	a8 50       	subi	r26, 0x08	; 8
     ea0:	be 4f       	sbci	r27, 0xFE	; 254
     ea2:	1c 92       	st	X, r1
		  row[part1row][column2]=0;
     ea4:	2e 0f       	add	r18, r30
     ea6:	3f 1f       	adc	r19, r31
     ea8:	f9 01       	movw	r30, r18
     eaa:	e8 50       	subi	r30, 0x08	; 8
     eac:	fe 4f       	sbci	r31, 0xFE	; 254
     eae:	10 82       	st	Z, r1
		  part2row--;
     eb0:	41 50       	subi	r20, 0x01	; 1
     eb2:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <part2row>
		  part1row--;
     eb6:	51 50       	subi	r21, 0x01	; 1
     eb8:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <part1row>
		  
		  count++;
     ebc:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <count>
     ec0:	8f 5f       	subi	r24, 0xFF	; 255
     ec2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <count>
     ec6:	83 e0       	ldi	r24, 0x03	; 3
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	e9 c7       	rjmp	.+4050   	; 0x1e9e <SMTick1+0x1554>
	  }
	 else if (row[part2row-1][column1]==0&& row[part2row-1][column2]==0) // if below is empty movedown
     ecc:	21 50       	subi	r18, 0x01	; 1
     ece:	31 09       	sbc	r19, r1
     ed0:	f9 01       	movw	r30, r18
     ed2:	ee 0f       	add	r30, r30
     ed4:	ff 1f       	adc	r31, r31
     ed6:	ee 0f       	add	r30, r30
     ed8:	ff 1f       	adc	r31, r31
     eda:	ee 0f       	add	r30, r30
     edc:	ff 1f       	adc	r31, r31
     ede:	e8 0f       	add	r30, r24
     ee0:	f9 1f       	adc	r31, r25
     ee2:	e8 50       	subi	r30, 0x08	; 8
     ee4:	fe 4f       	sbci	r31, 0xFE	; 254
     ee6:	50 81       	ld	r21, Z
     ee8:	51 11       	cpse	r21, r1
     eea:	6b c0       	rjmp	.+214    	; 0xfc2 <SMTick1+0x678>
     eec:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     ef0:	70 e0       	ldi	r23, 0x00	; 0
     ef2:	f9 01       	movw	r30, r18
     ef4:	ee 0f       	add	r30, r30
     ef6:	ff 1f       	adc	r31, r31
     ef8:	ee 0f       	add	r30, r30
     efa:	ff 1f       	adc	r31, r31
     efc:	ee 0f       	add	r30, r30
     efe:	ff 1f       	adc	r31, r31
     f00:	e6 0f       	add	r30, r22
     f02:	f7 1f       	adc	r31, r23
     f04:	e8 50       	subi	r30, 0x08	; 8
     f06:	fe 4f       	sbci	r31, 0xFE	; 254
     f08:	50 81       	ld	r21, Z
     f0a:	51 11       	cpse	r21, r1
     f0c:	5a c0       	rjmp	.+180    	; 0xfc2 <SMTick1+0x678>
	 {
		 if (part2row==0)
     f0e:	41 11       	cpse	r20, r1
     f10:	04 c0       	rjmp	.+8      	; 0xf1a <SMTick1+0x5d0>
		 {
			 count=7;
     f12:	57 e0       	ldi	r21, 0x07	; 7
     f14:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <count>
     f18:	05 c0       	rjmp	.+10     	; 0xf24 <SMTick1+0x5da>
		 }
		 else
		{
		 count++;
     f1a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <count>
     f1e:	5f 5f       	subi	r21, 0xFF	; 255
     f20:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <count>
		}
		 row[part2row-1][column1]=lwr;
     f24:	22 0f       	add	r18, r18
     f26:	33 1f       	adc	r19, r19
     f28:	22 0f       	add	r18, r18
     f2a:	33 1f       	adc	r19, r19
     f2c:	22 0f       	add	r18, r18
     f2e:	33 1f       	adc	r19, r19
     f30:	f9 01       	movw	r30, r18
     f32:	e8 0f       	add	r30, r24
     f34:	f9 1f       	adc	r31, r25
     f36:	e8 50       	subi	r30, 0x08	; 8
     f38:	fe 4f       	sbci	r31, 0xFE	; 254
     f3a:	50 91 8c 01 	lds	r21, 0x018C	; 0x80018c <lwr>
     f3e:	50 83       	st	Z, r21
		 row[part2row-1][column2]=lwl;
     f40:	26 0f       	add	r18, r22
     f42:	37 1f       	adc	r19, r23
     f44:	f9 01       	movw	r30, r18
     f46:	e8 50       	subi	r30, 0x08	; 8
     f48:	fe 4f       	sbci	r31, 0xFE	; 254
     f4a:	20 91 8a 01 	lds	r18, 0x018A	; 0x80018a <lwl>
     f4e:	20 83       	st	Z, r18
		 
		 row[part1row-1][column1]=upr;
     f50:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <part1row>
     f54:	e5 2f       	mov	r30, r21
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	9f 01       	movw	r18, r30
     f5a:	21 50       	subi	r18, 0x01	; 1
     f5c:	31 09       	sbc	r19, r1
     f5e:	22 0f       	add	r18, r18
     f60:	33 1f       	adc	r19, r19
     f62:	22 0f       	add	r18, r18
     f64:	33 1f       	adc	r19, r19
     f66:	22 0f       	add	r18, r18
     f68:	33 1f       	adc	r19, r19
     f6a:	d9 01       	movw	r26, r18
     f6c:	a8 0f       	add	r26, r24
     f6e:	b9 1f       	adc	r27, r25
     f70:	a8 50       	subi	r26, 0x08	; 8
     f72:	be 4f       	sbci	r27, 0xFE	; 254
     f74:	c0 91 8d 01 	lds	r28, 0x018D	; 0x80018d <upr>
     f78:	cc 93       	st	X, r28
		 row[part1row-1][column2]=upl;
     f7a:	26 0f       	add	r18, r22
     f7c:	37 1f       	adc	r19, r23
     f7e:	d9 01       	movw	r26, r18
     f80:	a8 50       	subi	r26, 0x08	; 8
     f82:	be 4f       	sbci	r27, 0xFE	; 254
     f84:	20 91 8b 01 	lds	r18, 0x018B	; 0x80018b <upl>
     f88:	2c 93       	st	X, r18
		 row[part1row][column1]=0;
     f8a:	ee 0f       	add	r30, r30
     f8c:	ff 1f       	adc	r31, r31
     f8e:	ee 0f       	add	r30, r30
     f90:	ff 1f       	adc	r31, r31
     f92:	ee 0f       	add	r30, r30
     f94:	ff 1f       	adc	r31, r31
     f96:	df 01       	movw	r26, r30
     f98:	a8 0f       	add	r26, r24
     f9a:	b9 1f       	adc	r27, r25
     f9c:	a8 50       	subi	r26, 0x08	; 8
     f9e:	be 4f       	sbci	r27, 0xFE	; 254
     fa0:	1c 92       	st	X, r1
		 row[part1row][column2]=0;
     fa2:	6e 0f       	add	r22, r30
     fa4:	7f 1f       	adc	r23, r31
     fa6:	fb 01       	movw	r30, r22
     fa8:	e8 50       	subi	r30, 0x08	; 8
     faa:	fe 4f       	sbci	r31, 0xFE	; 254
     fac:	10 82       	st	Z, r1
		 part2row--;
     fae:	41 50       	subi	r20, 0x01	; 1
     fb0:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <part2row>
		 part1row--;
     fb4:	8f ef       	ldi	r24, 0xFF	; 255
     fb6:	85 0f       	add	r24, r21
     fb8:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <part1row>
     fbc:	83 e0       	ldi	r24, 0x03	; 3
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	6e c7       	rjmp	.+3804   	; 0x1e9e <SMTick1+0x1554>
		 
	 }
	 else //if(row[part2row+1][column1]==1|| row[part2row+1][column2]==1)
	 {
		 count=7;
     fc2:	87 e0       	ldi	r24, 0x07	; 7
     fc4:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <count>
     fc8:	83 e0       	ldi	r24, 0x03	; 3
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	68 c7       	rjmp	.+3792   	; 0x1e9e <SMTick1+0x1554>
	}
	break;
	
	case left:
	if (row[part2row][column2]==0&&row[part2row][column2-1]==1&&row[part1row][column2]==1&&row[part1row][column2-1]==0) //checks whats on lower left then moves if clear if not then stays on
     fce:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <part2row>
     fd2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     fd6:	48 2f       	mov	r20, r24
     fd8:	50 e0       	ldi	r21, 0x00	; 0
     fda:	29 2f       	mov	r18, r25
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	fa 01       	movw	r30, r20
     fe0:	68 e0       	ldi	r22, 0x08	; 8
     fe2:	96 9f       	mul	r25, r22
     fe4:	e0 0d       	add	r30, r0
     fe6:	f1 1d       	adc	r31, r1
     fe8:	11 24       	eor	r1, r1
     fea:	e8 50       	subi	r30, 0x08	; 8
     fec:	fe 4f       	sbci	r31, 0xFE	; 254
     fee:	90 81       	ld	r25, Z
     ff0:	91 11       	cpse	r25, r1
     ff2:	72 c0       	rjmp	.+228    	; 0x10d8 <SMTick1+0x78e>
     ff4:	ba 01       	movw	r22, r20
     ff6:	61 50       	subi	r22, 0x01	; 1
     ff8:	71 09       	sbc	r23, r1
     ffa:	f9 01       	movw	r30, r18
     ffc:	ee 0f       	add	r30, r30
     ffe:	ff 1f       	adc	r31, r31
    1000:	ee 0f       	add	r30, r30
    1002:	ff 1f       	adc	r31, r31
    1004:	ee 0f       	add	r30, r30
    1006:	ff 1f       	adc	r31, r31
    1008:	e6 0f       	add	r30, r22
    100a:	f7 1f       	adc	r31, r23
    100c:	e8 50       	subi	r30, 0x08	; 8
    100e:	fe 4f       	sbci	r31, 0xFE	; 254
    1010:	90 81       	ld	r25, Z
    1012:	91 30       	cpi	r25, 0x01	; 1
    1014:	09 f0       	breq	.+2      	; 0x1018 <SMTick1+0x6ce>
    1016:	d6 c0       	rjmp	.+428    	; 0x11c4 <SMTick1+0x87a>
    1018:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    101c:	c9 2f       	mov	r28, r25
    101e:	d0 e0       	ldi	r29, 0x00	; 0
    1020:	da 01       	movw	r26, r20
    1022:	e8 e0       	ldi	r30, 0x08	; 8
    1024:	9e 9f       	mul	r25, r30
    1026:	a0 0d       	add	r26, r0
    1028:	b1 1d       	adc	r27, r1
    102a:	11 24       	eor	r1, r1
    102c:	a8 50       	subi	r26, 0x08	; 8
    102e:	be 4f       	sbci	r27, 0xFE	; 254
    1030:	9c 91       	ld	r25, X
    1032:	91 30       	cpi	r25, 0x01	; 1
    1034:	09 f0       	breq	.+2      	; 0x1038 <SMTick1+0x6ee>
    1036:	8e c6       	rjmp	.+3356   	; 0x1d54 <SMTick1+0x140a>
    1038:	fe 01       	movw	r30, r28
    103a:	ee 0f       	add	r30, r30
    103c:	ff 1f       	adc	r31, r31
    103e:	ee 0f       	add	r30, r30
    1040:	ff 1f       	adc	r31, r31
    1042:	ee 0f       	add	r30, r30
    1044:	ff 1f       	adc	r31, r31
    1046:	e6 0f       	add	r30, r22
    1048:	f7 1f       	adc	r31, r23
    104a:	e8 50       	subi	r30, 0x08	; 8
    104c:	fe 4f       	sbci	r31, 0xFE	; 254
    104e:	90 81       	ld	r25, Z
    1050:	91 11       	cpse	r25, r1
    1052:	80 c6       	rjmp	.+3328   	; 0x1d54 <SMTick1+0x140a>
	{																													//0,1 
		if (column2!=0)																									//1,0
    1054:	88 23       	and	r24, r24
    1056:	09 f4       	brne	.+2      	; 0x105a <SMTick1+0x710>
    1058:	f4 c5       	rjmp	.+3048   	; 0x1c42 <SMTick1+0x12f8>
		{
	column1--;
    105a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    105e:	91 50       	subi	r25, 0x01	; 1
    1060:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
	column2--;
    1064:	81 50       	subi	r24, 0x01	; 1
    1066:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	row[part1row][column2]=upl;
    106a:	fe 01       	movw	r30, r28
    106c:	ee 0f       	add	r30, r30
    106e:	ff 1f       	adc	r31, r31
    1070:	ee 0f       	add	r30, r30
    1072:	ff 1f       	adc	r31, r31
    1074:	ee 0f       	add	r30, r30
    1076:	ff 1f       	adc	r31, r31
    1078:	df 01       	movw	r26, r30
    107a:	a8 0f       	add	r26, r24
    107c:	b1 1d       	adc	r27, r1
    107e:	a8 50       	subi	r26, 0x08	; 8
    1080:	be 4f       	sbci	r27, 0xFE	; 254
    1082:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <upl>
    1086:	8c 93       	st	X, r24
	//row[part2row][column2]=block.part3[1];
	row[part1row][column1]=upr;
    1088:	89 2f       	mov	r24, r25
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	df 01       	movw	r26, r30
    108e:	a8 0f       	add	r26, r24
    1090:	b9 1f       	adc	r27, r25
    1092:	a8 50       	subi	r26, 0x08	; 8
    1094:	be 4f       	sbci	r27, 0xFE	; 254
    1096:	40 91 8d 01 	lds	r20, 0x018D	; 0x80018d <upr>
    109a:	4c 93       	st	X, r20
	row[part2row][column1]=lwr;
    109c:	22 0f       	add	r18, r18
    109e:	33 1f       	adc	r19, r19
    10a0:	22 0f       	add	r18, r18
    10a2:	33 1f       	adc	r19, r19
    10a4:	22 0f       	add	r18, r18
    10a6:	33 1f       	adc	r19, r19
    10a8:	d9 01       	movw	r26, r18
    10aa:	a8 0f       	add	r26, r24
    10ac:	b9 1f       	adc	r27, r25
    10ae:	a8 50       	subi	r26, 0x08	; 8
    10b0:	be 4f       	sbci	r27, 0xFE	; 254
    10b2:	40 91 8c 01 	lds	r20, 0x018C	; 0x80018c <lwr>
    10b6:	4c 93       	st	X, r20
	//row[part1row][column2]=block.part2[1];
	//row[part2row][column1-1]=block.part3[0];
	//row[part2row][column2]=block.part3[1];
	 row[part2row][column1+1]=0;
    10b8:	01 96       	adiw	r24, 0x01	; 1
    10ba:	28 0f       	add	r18, r24
    10bc:	39 1f       	adc	r19, r25
    10be:	d9 01       	movw	r26, r18
    10c0:	a8 50       	subi	r26, 0x08	; 8
    10c2:	be 4f       	sbci	r27, 0xFE	; 254
    10c4:	1c 92       	st	X, r1
	// row[part2row][column2+1]=0;
	 row[part1row][column1+1]=0;
    10c6:	8e 0f       	add	r24, r30
    10c8:	9f 1f       	adc	r25, r31
    10ca:	fc 01       	movw	r30, r24
    10cc:	e8 50       	subi	r30, 0x08	; 8
    10ce:	fe 4f       	sbci	r31, 0xFE	; 254
    10d0:	10 82       	st	Z, r1
    10d2:	84 e0       	ldi	r24, 0x04	; 4
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	e3 c6       	rjmp	.+3526   	; 0x1e9e <SMTick1+0x1554>
	 //row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==1&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==1)//checks upper right empty
    10d8:	91 30       	cpi	r25, 0x01	; 1
    10da:	09 f0       	breq	.+2      	; 0x10de <SMTick1+0x794>
    10dc:	b5 c5       	rjmp	.+2922   	; 0x1c48 <SMTick1+0x12fe>
    10de:	ba 01       	movw	r22, r20
    10e0:	61 50       	subi	r22, 0x01	; 1
    10e2:	71 09       	sbc	r23, r1
    10e4:	f9 01       	movw	r30, r18
    10e6:	ee 0f       	add	r30, r30
    10e8:	ff 1f       	adc	r31, r31
    10ea:	ee 0f       	add	r30, r30
    10ec:	ff 1f       	adc	r31, r31
    10ee:	ee 0f       	add	r30, r30
    10f0:	ff 1f       	adc	r31, r31
    10f2:	e6 0f       	add	r30, r22
    10f4:	f7 1f       	adc	r31, r23
    10f6:	e8 50       	subi	r30, 0x08	; 8
    10f8:	fe 4f       	sbci	r31, 0xFE	; 254
    10fa:	90 81       	ld	r25, Z
    10fc:	91 11       	cpse	r25, r1
    10fe:	51 c6       	rjmp	.+3234   	; 0x1da2 <SMTick1+0x1458>
    1100:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1104:	a9 2f       	mov	r26, r25
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	fa 01       	movw	r30, r20
    110a:	c8 e0       	ldi	r28, 0x08	; 8
    110c:	9c 9f       	mul	r25, r28
    110e:	e0 0d       	add	r30, r0
    1110:	f1 1d       	adc	r31, r1
    1112:	11 24       	eor	r1, r1
    1114:	e8 50       	subi	r30, 0x08	; 8
    1116:	fe 4f       	sbci	r31, 0xFE	; 254
    1118:	90 81       	ld	r25, Z
    111a:	91 11       	cpse	r25, r1
    111c:	56 c6       	rjmp	.+3244   	; 0x1dca <SMTick1+0x1480>
    111e:	fd 01       	movw	r30, r26
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	ee 0f       	add	r30, r30
    1126:	ff 1f       	adc	r31, r31
    1128:	ee 0f       	add	r30, r30
    112a:	ff 1f       	adc	r31, r31
    112c:	e6 0f       	add	r30, r22
    112e:	f7 1f       	adc	r31, r23
    1130:	e8 50       	subi	r30, 0x08	; 8
    1132:	fe 4f       	sbci	r31, 0xFE	; 254
    1134:	90 81       	ld	r25, Z
    1136:	91 30       	cpi	r25, 0x01	; 1
    1138:	09 f0       	breq	.+2      	; 0x113c <SMTick1+0x7f2>
    113a:	47 c6       	rjmp	.+3214   	; 0x1dca <SMTick1+0x1480>
	{																														//  1,0
		if (column2!=0)																										//  0,1
    113c:	88 23       	and	r24, r24
    113e:	09 f4       	brne	.+2      	; 0x1142 <SMTick1+0x7f8>
    1140:	86 c5       	rjmp	.+2828   	; 0x1c4e <SMTick1+0x1304>
		{
			column1--;
    1142:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    1146:	91 50       	subi	r25, 0x01	; 1
    1148:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
			column2--;
    114c:	81 50       	subi	r24, 0x01	; 1
    114e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			row[part1row][column2]=upr;
    1152:	48 2f       	mov	r20, r24
    1154:	50 e0       	ldi	r21, 0x00	; 0
    1156:	fd 01       	movw	r30, r26
    1158:	ee 0f       	add	r30, r30
    115a:	ff 1f       	adc	r31, r31
    115c:	ee 0f       	add	r30, r30
    115e:	ff 1f       	adc	r31, r31
    1160:	ee 0f       	add	r30, r30
    1162:	ff 1f       	adc	r31, r31
    1164:	df 01       	movw	r26, r30
    1166:	a4 0f       	add	r26, r20
    1168:	b5 1f       	adc	r27, r21
    116a:	a8 50       	subi	r26, 0x08	; 8
    116c:	be 4f       	sbci	r27, 0xFE	; 254
    116e:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <upr>
    1172:	8c 93       	st	X, r24
			row[part2row][column2]=lwl;
    1174:	22 0f       	add	r18, r18
    1176:	33 1f       	adc	r19, r19
    1178:	22 0f       	add	r18, r18
    117a:	33 1f       	adc	r19, r19
    117c:	22 0f       	add	r18, r18
    117e:	33 1f       	adc	r19, r19
    1180:	42 0f       	add	r20, r18
    1182:	53 1f       	adc	r21, r19
    1184:	da 01       	movw	r26, r20
    1186:	a8 50       	subi	r26, 0x08	; 8
    1188:	be 4f       	sbci	r27, 0xFE	; 254
    118a:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <lwl>
    118e:	8c 93       	st	X, r24
			//row[part1row][column1]=block.part2[0];
			row[part2row][column1]=lwr;
    1190:	89 2f       	mov	r24, r25
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	d9 01       	movw	r26, r18
    1196:	a8 0f       	add	r26, r24
    1198:	b9 1f       	adc	r27, r25
    119a:	a8 50       	subi	r26, 0x08	; 8
    119c:	be 4f       	sbci	r27, 0xFE	; 254
    119e:	40 91 8c 01 	lds	r20, 0x018C	; 0x80018c <lwr>
    11a2:	4c 93       	st	X, r20
			//row[part1row][column2]=block.part2[1];
			//row[part2row][column1-1]=block.part3[0];
			//row[part2row][column2]=block.part3[1];
			row[part2row][column1+1]=0;
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	28 0f       	add	r18, r24
    11a8:	39 1f       	adc	r19, r25
    11aa:	d9 01       	movw	r26, r18
    11ac:	a8 50       	subi	r26, 0x08	; 8
    11ae:	be 4f       	sbci	r27, 0xFE	; 254
    11b0:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
    11b2:	8e 0f       	add	r24, r30
    11b4:	9f 1f       	adc	r25, r31
    11b6:	fc 01       	movw	r30, r24
    11b8:	e8 50       	subi	r30, 0x08	; 8
    11ba:	fe 4f       	sbci	r31, 0xFE	; 254
    11bc:	10 82       	st	Z, r1
    11be:	84 e0       	ldi	r24, 0x04	; 4
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	6d c6       	rjmp	.+3290   	; 0x1e9e <SMTick1+0x1554>
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0)
    11c4:	ba 01       	movw	r22, r20
    11c6:	61 50       	subi	r22, 0x01	; 1
    11c8:	71 09       	sbc	r23, r1
    11ca:	f9 01       	movw	r30, r18
    11cc:	ee 0f       	add	r30, r30
    11ce:	ff 1f       	adc	r31, r31
    11d0:	ee 0f       	add	r30, r30
    11d2:	ff 1f       	adc	r31, r31
    11d4:	ee 0f       	add	r30, r30
    11d6:	ff 1f       	adc	r31, r31
    11d8:	e6 0f       	add	r30, r22
    11da:	f7 1f       	adc	r31, r23
    11dc:	e8 50       	subi	r30, 0x08	; 8
    11de:	fe 4f       	sbci	r31, 0xFE	; 254
    11e0:	90 81       	ld	r25, Z
    11e2:	91 11       	cpse	r25, r1
    11e4:	c9 c5       	rjmp	.+2962   	; 0x1d78 <SMTick1+0x142e>
    11e6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    11ea:	a9 2f       	mov	r26, r25
    11ec:	b0 e0       	ldi	r27, 0x00	; 0
    11ee:	fa 01       	movw	r30, r20
    11f0:	c8 e0       	ldi	r28, 0x08	; 8
    11f2:	9c 9f       	mul	r25, r28
    11f4:	e0 0d       	add	r30, r0
    11f6:	f1 1d       	adc	r31, r1
    11f8:	11 24       	eor	r1, r1
    11fa:	e8 50       	subi	r30, 0x08	; 8
    11fc:	fe 4f       	sbci	r31, 0xFE	; 254
    11fe:	90 81       	ld	r25, Z
    1200:	91 30       	cpi	r25, 0x01	; 1
    1202:	09 f0       	breq	.+2      	; 0x1206 <SMTick1+0x8bc>
    1204:	5a c0       	rjmp	.+180    	; 0x12ba <SMTick1+0x970>
    1206:	fd 01       	movw	r30, r26
    1208:	ee 0f       	add	r30, r30
    120a:	ff 1f       	adc	r31, r31
    120c:	ee 0f       	add	r30, r30
    120e:	ff 1f       	adc	r31, r31
    1210:	ee 0f       	add	r30, r30
    1212:	ff 1f       	adc	r31, r31
    1214:	e6 0f       	add	r30, r22
    1216:	f7 1f       	adc	r31, r23
    1218:	e8 50       	subi	r30, 0x08	; 8
    121a:	fe 4f       	sbci	r31, 0xFE	; 254
    121c:	90 81       	ld	r25, Z
    121e:	91 11       	cpse	r25, r1
    1220:	4c c0       	rjmp	.+152    	; 0x12ba <SMTick1+0x970>
	{																												//0,1
		if (column2!=0)																								//0,0
    1222:	88 23       	and	r24, r24
    1224:	09 f4       	brne	.+2      	; 0x1228 <SMTick1+0x8de>
    1226:	16 c5       	rjmp	.+2604   	; 0x1c54 <SMTick1+0x130a>
		{
			column1--;
    1228:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    122c:	91 50       	subi	r25, 0x01	; 1
    122e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
			column2--;
    1232:	81 50       	subi	r24, 0x01	; 1
    1234:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			row[part1row][column2]=upl;
    1238:	48 2f       	mov	r20, r24
    123a:	50 e0       	ldi	r21, 0x00	; 0
    123c:	fd 01       	movw	r30, r26
    123e:	ee 0f       	add	r30, r30
    1240:	ff 1f       	adc	r31, r31
    1242:	ee 0f       	add	r30, r30
    1244:	ff 1f       	adc	r31, r31
    1246:	ee 0f       	add	r30, r30
    1248:	ff 1f       	adc	r31, r31
    124a:	df 01       	movw	r26, r30
    124c:	a4 0f       	add	r26, r20
    124e:	b5 1f       	adc	r27, r21
    1250:	a8 50       	subi	r26, 0x08	; 8
    1252:	be 4f       	sbci	r27, 0xFE	; 254
    1254:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <upl>
    1258:	8c 93       	st	X, r24
			row[part2row][column2]=lwl;
    125a:	22 0f       	add	r18, r18
    125c:	33 1f       	adc	r19, r19
    125e:	22 0f       	add	r18, r18
    1260:	33 1f       	adc	r19, r19
    1262:	22 0f       	add	r18, r18
    1264:	33 1f       	adc	r19, r19
    1266:	42 0f       	add	r20, r18
    1268:	53 1f       	adc	r21, r19
    126a:	da 01       	movw	r26, r20
    126c:	a8 50       	subi	r26, 0x08	; 8
    126e:	be 4f       	sbci	r27, 0xFE	; 254
    1270:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <lwl>
    1274:	8c 93       	st	X, r24
			row[part1row][column1]=upr;
    1276:	89 2f       	mov	r24, r25
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	df 01       	movw	r26, r30
    127c:	a8 0f       	add	r26, r24
    127e:	b9 1f       	adc	r27, r25
    1280:	a8 50       	subi	r26, 0x08	; 8
    1282:	be 4f       	sbci	r27, 0xFE	; 254
    1284:	40 91 8d 01 	lds	r20, 0x018D	; 0x80018d <upr>
    1288:	4c 93       	st	X, r20
			row[part2row][column1]=lwr;
    128a:	d9 01       	movw	r26, r18
    128c:	a8 0f       	add	r26, r24
    128e:	b9 1f       	adc	r27, r25
    1290:	a8 50       	subi	r26, 0x08	; 8
    1292:	be 4f       	sbci	r27, 0xFE	; 254
    1294:	40 91 8c 01 	lds	r20, 0x018C	; 0x80018c <lwr>
    1298:	4c 93       	st	X, r20
			//row[part1row][column2]=block.part2[1];
			//row[part2row][column1-1]=block.part3[0];
			//row[part2row][column2]=block.part3[1];
			row[part2row][column1+1]=0;
    129a:	01 96       	adiw	r24, 0x01	; 1
    129c:	d9 01       	movw	r26, r18
    129e:	a8 0f       	add	r26, r24
    12a0:	b9 1f       	adc	r27, r25
    12a2:	a8 50       	subi	r26, 0x08	; 8
    12a4:	be 4f       	sbci	r27, 0xFE	; 254
    12a6:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
    12a8:	8e 0f       	add	r24, r30
    12aa:	9f 1f       	adc	r25, r31
    12ac:	fc 01       	movw	r30, r24
    12ae:	e8 50       	subi	r30, 0x08	; 8
    12b0:	fe 4f       	sbci	r31, 0xFE	; 254
    12b2:	10 82       	st	Z, r1
    12b4:	84 e0       	ldi	r24, 0x04	; 4
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	f2 c5       	rjmp	.+3044   	; 0x1e9e <SMTick1+0x1554>
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0&&row[part1row][column1]==1)
    12ba:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    12be:	e9 2f       	mov	r30, r25
    12c0:	f0 e0       	ldi	r31, 0x00	; 0
    12c2:	da 01       	movw	r26, r20
    12c4:	c8 e0       	ldi	r28, 0x08	; 8
    12c6:	9c 9f       	mul	r25, r28
    12c8:	a0 0d       	add	r26, r0
    12ca:	b1 1d       	adc	r27, r1
    12cc:	11 24       	eor	r1, r1
    12ce:	a8 50       	subi	r26, 0x08	; 8
    12d0:	be 4f       	sbci	r27, 0xFE	; 254
    12d2:	9c 91       	ld	r25, X
    12d4:	91 30       	cpi	r25, 0x01	; 1
    12d6:	09 f0       	breq	.+2      	; 0x12da <SMTick1+0x990>
    12d8:	8c c5       	rjmp	.+2840   	; 0x1df2 <SMTick1+0x14a8>
    12da:	df 01       	movw	r26, r30
    12dc:	aa 0f       	add	r26, r26
    12de:	bb 1f       	adc	r27, r27
    12e0:	aa 0f       	add	r26, r26
    12e2:	bb 1f       	adc	r27, r27
    12e4:	aa 0f       	add	r26, r26
    12e6:	bb 1f       	adc	r27, r27
    12e8:	6a 0f       	add	r22, r26
    12ea:	7b 1f       	adc	r23, r27
    12ec:	db 01       	movw	r26, r22
    12ee:	a8 50       	subi	r26, 0x08	; 8
    12f0:	be 4f       	sbci	r27, 0xFE	; 254
    12f2:	9c 91       	ld	r25, X
    12f4:	91 11       	cpse	r25, r1
    12f6:	7d c5       	rjmp	.+2810   	; 0x1df2 <SMTick1+0x14a8>
    12f8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    12fc:	df 01       	movw	r26, r30
    12fe:	aa 0f       	add	r26, r26
    1300:	bb 1f       	adc	r27, r27
    1302:	aa 0f       	add	r26, r26
    1304:	bb 1f       	adc	r27, r27
    1306:	aa 0f       	add	r26, r26
    1308:	bb 1f       	adc	r27, r27
    130a:	a9 0f       	add	r26, r25
    130c:	b1 1d       	adc	r27, r1
    130e:	a8 50       	subi	r26, 0x08	; 8
    1310:	be 4f       	sbci	r27, 0xFE	; 254
    1312:	6c 91       	ld	r22, X
    1314:	61 30       	cpi	r22, 0x01	; 1
    1316:	09 f0       	breq	.+2      	; 0x131a <SMTick1+0x9d0>
    1318:	6c c5       	rjmp	.+2776   	; 0x1df2 <SMTick1+0x14a8>
	{																												//0,1,1
		if (column2!=0)																								//0,0,0
    131a:	88 23       	and	r24, r24
    131c:	09 f4       	brne	.+2      	; 0x1320 <SMTick1+0x9d6>
    131e:	9d c4       	rjmp	.+2362   	; 0x1c5a <SMTick1+0x1310>
		{
			column1--;
    1320:	91 50       	subi	r25, 0x01	; 1
    1322:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
			column2--;
    1326:	81 50       	subi	r24, 0x01	; 1
    1328:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			row[part1row][column2]=upl;
    132c:	48 2f       	mov	r20, r24
    132e:	50 e0       	ldi	r21, 0x00	; 0
    1330:	ee 0f       	add	r30, r30
    1332:	ff 1f       	adc	r31, r31
    1334:	ee 0f       	add	r30, r30
    1336:	ff 1f       	adc	r31, r31
    1338:	ee 0f       	add	r30, r30
    133a:	ff 1f       	adc	r31, r31
    133c:	df 01       	movw	r26, r30
    133e:	a4 0f       	add	r26, r20
    1340:	b5 1f       	adc	r27, r21
    1342:	a8 50       	subi	r26, 0x08	; 8
    1344:	be 4f       	sbci	r27, 0xFE	; 254
    1346:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <upl>
    134a:	8c 93       	st	X, r24
			row[part2row][column2]=lwl;
    134c:	22 0f       	add	r18, r18
    134e:	33 1f       	adc	r19, r19
    1350:	22 0f       	add	r18, r18
    1352:	33 1f       	adc	r19, r19
    1354:	22 0f       	add	r18, r18
    1356:	33 1f       	adc	r19, r19
    1358:	42 0f       	add	r20, r18
    135a:	53 1f       	adc	r21, r19
    135c:	da 01       	movw	r26, r20
    135e:	a8 50       	subi	r26, 0x08	; 8
    1360:	be 4f       	sbci	r27, 0xFE	; 254
    1362:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <lwl>
    1366:	8c 93       	st	X, r24
			row[part1row][column1]=upr;
    1368:	89 2f       	mov	r24, r25
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	df 01       	movw	r26, r30
    136e:	a8 0f       	add	r26, r24
    1370:	b9 1f       	adc	r27, r25
    1372:	a8 50       	subi	r26, 0x08	; 8
    1374:	be 4f       	sbci	r27, 0xFE	; 254
    1376:	40 91 8d 01 	lds	r20, 0x018D	; 0x80018d <upr>
    137a:	4c 93       	st	X, r20
			//row[part2row][column1]=block.part2[0];
			//row[part1row][column2]=block.part2[1];
			//row[part2row][column1-1]=block.part3[0];
			//row[part2row][column2]=block.part3[1];
			row[part2row][column1+1]=0;
    137c:	01 96       	adiw	r24, 0x01	; 1
    137e:	28 0f       	add	r18, r24
    1380:	39 1f       	adc	r19, r25
    1382:	d9 01       	movw	r26, r18
    1384:	a8 50       	subi	r26, 0x08	; 8
    1386:	be 4f       	sbci	r27, 0xFE	; 254
    1388:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
    138a:	8e 0f       	add	r24, r30
    138c:	9f 1f       	adc	r25, r31
    138e:	fc 01       	movw	r30, r24
    1390:	e8 50       	subi	r30, 0x08	; 8
    1392:	fe 4f       	sbci	r31, 0xFE	; 254
    1394:	10 82       	st	Z, r1
    1396:	84 e0       	ldi	r24, 0x04	; 4
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	81 c5       	rjmp	.+2818   	; 0x1e9e <SMTick1+0x1554>
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==1&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0)
    139c:	df 01       	movw	r26, r30
    139e:	aa 0f       	add	r26, r26
    13a0:	bb 1f       	adc	r27, r27
    13a2:	aa 0f       	add	r26, r26
    13a4:	bb 1f       	adc	r27, r27
    13a6:	aa 0f       	add	r26, r26
    13a8:	bb 1f       	adc	r27, r27
    13aa:	6a 0f       	add	r22, r26
    13ac:	7b 1f       	adc	r23, r27
    13ae:	db 01       	movw	r26, r22
    13b0:	a8 50       	subi	r26, 0x08	; 8
    13b2:	be 4f       	sbci	r27, 0xFE	; 254
    13b4:	9c 91       	ld	r25, X
    13b6:	91 11       	cpse	r25, r1
    13b8:	35 c5       	rjmp	.+2666   	; 0x1e24 <SMTick1+0x14da>
	{																												//0,0
		if (column2!=0)																								//0,1
    13ba:	88 23       	and	r24, r24
    13bc:	09 f4       	brne	.+2      	; 0x13c0 <SMTick1+0xa76>
    13be:	50 c4       	rjmp	.+2208   	; 0x1c60 <SMTick1+0x1316>
		{
			column1--;
    13c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    13c4:	91 50       	subi	r25, 0x01	; 1
    13c6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
			column2--;
    13ca:	81 50       	subi	r24, 0x01	; 1
    13cc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			row[part1row][column2]=upl;
    13d0:	48 2f       	mov	r20, r24
    13d2:	50 e0       	ldi	r21, 0x00	; 0
    13d4:	ee 0f       	add	r30, r30
    13d6:	ff 1f       	adc	r31, r31
    13d8:	ee 0f       	add	r30, r30
    13da:	ff 1f       	adc	r31, r31
    13dc:	ee 0f       	add	r30, r30
    13de:	ff 1f       	adc	r31, r31
    13e0:	df 01       	movw	r26, r30
    13e2:	a4 0f       	add	r26, r20
    13e4:	b5 1f       	adc	r27, r21
    13e6:	a8 50       	subi	r26, 0x08	; 8
    13e8:	be 4f       	sbci	r27, 0xFE	; 254
    13ea:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <upl>
    13ee:	8c 93       	st	X, r24
			row[part2row][column2]=lwl;
    13f0:	22 0f       	add	r18, r18
    13f2:	33 1f       	adc	r19, r19
    13f4:	22 0f       	add	r18, r18
    13f6:	33 1f       	adc	r19, r19
    13f8:	22 0f       	add	r18, r18
    13fa:	33 1f       	adc	r19, r19
    13fc:	42 0f       	add	r20, r18
    13fe:	53 1f       	adc	r21, r19
    1400:	da 01       	movw	r26, r20
    1402:	a8 50       	subi	r26, 0x08	; 8
    1404:	be 4f       	sbci	r27, 0xFE	; 254
    1406:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <lwl>
    140a:	8c 93       	st	X, r24
			row[part1row][column1]=upr;
    140c:	89 2f       	mov	r24, r25
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	df 01       	movw	r26, r30
    1412:	a8 0f       	add	r26, r24
    1414:	b9 1f       	adc	r27, r25
    1416:	a8 50       	subi	r26, 0x08	; 8
    1418:	be 4f       	sbci	r27, 0xFE	; 254
    141a:	40 91 8d 01 	lds	r20, 0x018D	; 0x80018d <upr>
    141e:	4c 93       	st	X, r20
			row[part2row][column1]=lwr;
    1420:	d9 01       	movw	r26, r18
    1422:	a8 0f       	add	r26, r24
    1424:	b9 1f       	adc	r27, r25
    1426:	a8 50       	subi	r26, 0x08	; 8
    1428:	be 4f       	sbci	r27, 0xFE	; 254
    142a:	40 91 8c 01 	lds	r20, 0x018C	; 0x80018c <lwr>
    142e:	4c 93       	st	X, r20
			//row[part1row][column2]=block.part2[1];
			//row[part2row][column1-1]=block.part3[0];
			//row[part2row][column2]=block.part3[1];
			row[part2row][column1+1]=0;
    1430:	01 96       	adiw	r24, 0x01	; 1
    1432:	d9 01       	movw	r26, r18
    1434:	a8 0f       	add	r26, r24
    1436:	b9 1f       	adc	r27, r25
    1438:	a8 50       	subi	r26, 0x08	; 8
    143a:	be 4f       	sbci	r27, 0xFE	; 254
    143c:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
    143e:	8e 0f       	add	r24, r30
    1440:	9f 1f       	adc	r25, r31
    1442:	fc 01       	movw	r30, r24
    1444:	e8 50       	subi	r30, 0x08	; 8
    1446:	fe 4f       	sbci	r31, 0xFE	; 254
    1448:	10 82       	st	Z, r1
    144a:	84 e0       	ldi	r24, 0x04	; 4
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	27 c5       	rjmp	.+2638   	; 0x1e9e <SMTick1+0x1554>
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0&&row[part1row][column1]==1&&row[part2row][column1]==1)
    1450:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1454:	a9 2f       	mov	r26, r25
    1456:	b0 e0       	ldi	r27, 0x00	; 0
    1458:	fa 01       	movw	r30, r20
    145a:	c8 e0       	ldi	r28, 0x08	; 8
    145c:	9c 9f       	mul	r25, r28
    145e:	e0 0d       	add	r30, r0
    1460:	f1 1d       	adc	r31, r1
    1462:	11 24       	eor	r1, r1
    1464:	e8 50       	subi	r30, 0x08	; 8
    1466:	fe 4f       	sbci	r31, 0xFE	; 254
    1468:	90 81       	ld	r25, Z
    146a:	91 11       	cpse	r25, r1
    146c:	a1 c0       	rjmp	.+322    	; 0x15b0 <SMTick1+0xc66>
    146e:	fd 01       	movw	r30, r26
    1470:	ee 0f       	add	r30, r30
    1472:	ff 1f       	adc	r31, r31
    1474:	ee 0f       	add	r30, r30
    1476:	ff 1f       	adc	r31, r31
    1478:	ee 0f       	add	r30, r30
    147a:	ff 1f       	adc	r31, r31
    147c:	e6 0f       	add	r30, r22
    147e:	f7 1f       	adc	r31, r23
    1480:	e8 50       	subi	r30, 0x08	; 8
    1482:	fe 4f       	sbci	r31, 0xFE	; 254
    1484:	90 81       	ld	r25, Z
    1486:	91 11       	cpse	r25, r1
    1488:	93 c0       	rjmp	.+294    	; 0x15b0 <SMTick1+0xc66>
    148a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    148e:	c9 2f       	mov	r28, r25
    1490:	d0 e0       	ldi	r29, 0x00	; 0
    1492:	fd 01       	movw	r30, r26
    1494:	ee 0f       	add	r30, r30
    1496:	ff 1f       	adc	r31, r31
    1498:	ee 0f       	add	r30, r30
    149a:	ff 1f       	adc	r31, r31
    149c:	ee 0f       	add	r30, r30
    149e:	ff 1f       	adc	r31, r31
    14a0:	ec 0f       	add	r30, r28
    14a2:	fd 1f       	adc	r31, r29
    14a4:	e8 50       	subi	r30, 0x08	; 8
    14a6:	fe 4f       	sbci	r31, 0xFE	; 254
    14a8:	e0 81       	ld	r30, Z
    14aa:	e1 30       	cpi	r30, 0x01	; 1
    14ac:	09 f0       	breq	.+2      	; 0x14b0 <SMTick1+0xb66>
    14ae:	80 c0       	rjmp	.+256    	; 0x15b0 <SMTick1+0xc66>
    14b0:	f9 01       	movw	r30, r18
    14b2:	ee 0f       	add	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	ee 0f       	add	r30, r30
    14b8:	ff 1f       	adc	r31, r31
    14ba:	ee 0f       	add	r30, r30
    14bc:	ff 1f       	adc	r31, r31
    14be:	ec 0f       	add	r30, r28
    14c0:	fd 1f       	adc	r31, r29
    14c2:	e8 50       	subi	r30, 0x08	; 8
    14c4:	fe 4f       	sbci	r31, 0xFE	; 254
    14c6:	e0 81       	ld	r30, Z
    14c8:	e1 30       	cpi	r30, 0x01	; 1
    14ca:	09 f0       	breq	.+2      	; 0x14ce <SMTick1+0xb84>
    14cc:	71 c0       	rjmp	.+226    	; 0x15b0 <SMTick1+0xc66>
		{																									       //0,0,1
			if (column2!=0)																						   //0,0,1
    14ce:	88 23       	and	r24, r24
    14d0:	c1 f1       	breq	.+112    	; 0x1542 <SMTick1+0xbf8>
			{
				column1--;
    14d2:	91 50       	subi	r25, 0x01	; 1
    14d4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
				column2--;
    14d8:	81 50       	subi	r24, 0x01	; 1
    14da:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				//row[part1row][column2]=block.part2[0];
				//row[part2row][column2]=block.part3[1];
				row[part1row][column1]=block.part2[0];
    14de:	89 2f       	mov	r24, r25
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	fd 01       	movw	r30, r26
    14e4:	ee 0f       	add	r30, r30
    14e6:	ff 1f       	adc	r31, r31
    14e8:	ee 0f       	add	r30, r30
    14ea:	ff 1f       	adc	r31, r31
    14ec:	ee 0f       	add	r30, r30
    14ee:	ff 1f       	adc	r31, r31
    14f0:	ef 01       	movw	r28, r30
    14f2:	c8 0f       	add	r28, r24
    14f4:	d9 1f       	adc	r29, r25
    14f6:	c8 50       	subi	r28, 0x08	; 8
    14f8:	de 4f       	sbci	r29, 0xFE	; 254
    14fa:	a5 e4       	ldi	r26, 0x45	; 69
    14fc:	b2 e0       	ldi	r27, 0x02	; 2
    14fe:	12 96       	adiw	r26, 0x02	; 2
    1500:	4c 91       	ld	r20, X
    1502:	12 97       	sbiw	r26, 0x02	; 2
    1504:	48 83       	st	Y, r20
				row[part2row][column1]=block.part2[1];
    1506:	22 0f       	add	r18, r18
    1508:	33 1f       	adc	r19, r19
    150a:	22 0f       	add	r18, r18
    150c:	33 1f       	adc	r19, r19
    150e:	22 0f       	add	r18, r18
    1510:	33 1f       	adc	r19, r19
    1512:	e9 01       	movw	r28, r18
    1514:	c8 0f       	add	r28, r24
    1516:	d9 1f       	adc	r29, r25
    1518:	c8 50       	subi	r28, 0x08	; 8
    151a:	de 4f       	sbci	r29, 0xFE	; 254
    151c:	13 96       	adiw	r26, 0x03	; 3
    151e:	4c 91       	ld	r20, X
    1520:	48 83       	st	Y, r20
				//row[part1row][column2]=block.part2[1];
				//row[part2row][column1-1]=block.part3[0];
				//row[part2row][column2]=block.part3[1];
				row[part2row][column1+1]=0;
    1522:	01 96       	adiw	r24, 0x01	; 1
    1524:	28 0f       	add	r18, r24
    1526:	39 1f       	adc	r19, r25
    1528:	d9 01       	movw	r26, r18
    152a:	a8 50       	subi	r26, 0x08	; 8
    152c:	be 4f       	sbci	r27, 0xFE	; 254
    152e:	1c 92       	st	X, r1
				// row[part2row][column2+1]=0;
				row[part1row][column1+1]=0;
    1530:	8e 0f       	add	r24, r30
    1532:	9f 1f       	adc	r25, r31
    1534:	fc 01       	movw	r30, r24
    1536:	e8 50       	subi	r30, 0x08	; 8
    1538:	fe 4f       	sbci	r31, 0xFE	; 254
    153a:	10 82       	st	Z, r1
    153c:	84 e0       	ldi	r24, 0x04	; 4
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	ae c4       	rjmp	.+2396   	; 0x1e9e <SMTick1+0x1554>
				//row[part1row][column2]=0;
			}
			else 
			{
				row[part1row][column2]=block.part2[0];row[part1row][column1]=block.part3[0];
    1542:	cd 01       	movw	r24, r26
    1544:	88 0f       	add	r24, r24
    1546:	99 1f       	adc	r25, r25
    1548:	88 0f       	add	r24, r24
    154a:	99 1f       	adc	r25, r25
    154c:	88 0f       	add	r24, r24
    154e:	99 1f       	adc	r25, r25
    1550:	fc 01       	movw	r30, r24
    1552:	e4 0f       	add	r30, r20
    1554:	f5 1f       	adc	r31, r21
    1556:	e8 50       	subi	r30, 0x08	; 8
    1558:	fe 4f       	sbci	r31, 0xFE	; 254
    155a:	a5 e4       	ldi	r26, 0x45	; 69
    155c:	b2 e0       	ldi	r27, 0x02	; 2
    155e:	12 96       	adiw	r26, 0x02	; 2
    1560:	6c 91       	ld	r22, X
    1562:	12 97       	sbiw	r26, 0x02	; 2
    1564:	60 83       	st	Z, r22
    1566:	8c 0f       	add	r24, r28
    1568:	9d 1f       	adc	r25, r29
    156a:	fc 01       	movw	r30, r24
    156c:	e8 50       	subi	r30, 0x08	; 8
    156e:	fe 4f       	sbci	r31, 0xFE	; 254
    1570:	14 96       	adiw	r26, 0x04	; 4
    1572:	8c 91       	ld	r24, X
    1574:	14 97       	sbiw	r26, 0x04	; 4
    1576:	80 83       	st	Z, r24
				row[part2row][column2]=block.part2[1];row[part2row][column1]=block.part3[1];
    1578:	b9 01       	movw	r22, r18
    157a:	66 0f       	add	r22, r22
    157c:	77 1f       	adc	r23, r23
    157e:	66 0f       	add	r22, r22
    1580:	77 1f       	adc	r23, r23
    1582:	66 0f       	add	r22, r22
    1584:	77 1f       	adc	r23, r23
    1586:	cb 01       	movw	r24, r22
    1588:	84 0f       	add	r24, r20
    158a:	95 1f       	adc	r25, r21
    158c:	88 50       	subi	r24, 0x08	; 8
    158e:	9e 4f       	sbci	r25, 0xFE	; 254
    1590:	13 96       	adiw	r26, 0x03	; 3
    1592:	2c 91       	ld	r18, X
    1594:	13 97       	sbiw	r26, 0x03	; 3
    1596:	fc 01       	movw	r30, r24
    1598:	20 83       	st	Z, r18
    159a:	fb 01       	movw	r30, r22
    159c:	ec 0f       	add	r30, r28
    159e:	fd 1f       	adc	r31, r29
    15a0:	e8 50       	subi	r30, 0x08	; 8
    15a2:	fe 4f       	sbci	r31, 0xFE	; 254
    15a4:	15 96       	adiw	r26, 0x05	; 5
    15a6:	8c 91       	ld	r24, X
    15a8:	80 83       	st	Z, r24
    15aa:	84 e0       	ldi	r24, 0x04	; 4
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	77 c4       	rjmp	.+2286   	; 0x1e9e <SMTick1+0x1554>
			}
		}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0)
    15b0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    15b4:	a9 2f       	mov	r26, r25
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	f8 e0       	ldi	r31, 0x08	; 8
    15ba:	9f 9f       	mul	r25, r31
    15bc:	40 0d       	add	r20, r0
    15be:	51 1d       	adc	r21, r1
    15c0:	11 24       	eor	r1, r1
    15c2:	fa 01       	movw	r30, r20
    15c4:	e8 50       	subi	r30, 0x08	; 8
    15c6:	fe 4f       	sbci	r31, 0xFE	; 254
    15c8:	90 81       	ld	r25, Z
    15ca:	91 11       	cpse	r25, r1
    15cc:	4c c3       	rjmp	.+1688   	; 0x1c66 <SMTick1+0x131c>
    15ce:	fd 01       	movw	r30, r26
    15d0:	ee 0f       	add	r30, r30
    15d2:	ff 1f       	adc	r31, r31
    15d4:	ee 0f       	add	r30, r30
    15d6:	ff 1f       	adc	r31, r31
    15d8:	ee 0f       	add	r30, r30
    15da:	ff 1f       	adc	r31, r31
    15dc:	6e 0f       	add	r22, r30
    15de:	7f 1f       	adc	r23, r31
    15e0:	fb 01       	movw	r30, r22
    15e2:	e8 50       	subi	r30, 0x08	; 8
    15e4:	fe 4f       	sbci	r31, 0xFE	; 254
    15e6:	90 81       	ld	r25, Z
    15e8:	91 11       	cpse	r25, r1
    15ea:	40 c3       	rjmp	.+1664   	; 0x1c6c <SMTick1+0x1322>
	{																											//0,0
		if (column2!=0)																							//0,0
    15ec:	88 23       	and	r24, r24
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <SMTick1+0xca8>
    15f0:	40 c3       	rjmp	.+1664   	; 0x1c72 <SMTick1+0x1328>
		{
			column1--;
    15f2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    15f6:	91 50       	subi	r25, 0x01	; 1
    15f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
			column2--;
    15fc:	81 50       	subi	r24, 0x01	; 1
    15fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			row[part1row][column2]=block.part2[0];
    1602:	48 2f       	mov	r20, r24
    1604:	50 e0       	ldi	r21, 0x00	; 0
    1606:	c5 e4       	ldi	r28, 0x45	; 69
    1608:	d2 e0       	ldi	r29, 0x02	; 2
    160a:	6a 81       	ldd	r22, Y+2	; 0x02
    160c:	fd 01       	movw	r30, r26
    160e:	ee 0f       	add	r30, r30
    1610:	ff 1f       	adc	r31, r31
    1612:	ee 0f       	add	r30, r30
    1614:	ff 1f       	adc	r31, r31
    1616:	ee 0f       	add	r30, r30
    1618:	ff 1f       	adc	r31, r31
    161a:	df 01       	movw	r26, r30
    161c:	a4 0f       	add	r26, r20
    161e:	b5 1f       	adc	r27, r21
    1620:	a8 50       	subi	r26, 0x08	; 8
    1622:	be 4f       	sbci	r27, 0xFE	; 254
    1624:	6c 93       	st	X, r22
			row[part2row][column2]=block.part3[1];
    1626:	22 0f       	add	r18, r18
    1628:	33 1f       	adc	r19, r19
    162a:	22 0f       	add	r18, r18
    162c:	33 1f       	adc	r19, r19
    162e:	22 0f       	add	r18, r18
    1630:	33 1f       	adc	r19, r19
    1632:	42 0f       	add	r20, r18
    1634:	53 1f       	adc	r21, r19
    1636:	da 01       	movw	r26, r20
    1638:	a8 50       	subi	r26, 0x08	; 8
    163a:	be 4f       	sbci	r27, 0xFE	; 254
    163c:	8d 81       	ldd	r24, Y+5	; 0x05
    163e:	8c 93       	st	X, r24
			row[part1row][column1]=block.part2[0];
    1640:	89 2f       	mov	r24, r25
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	df 01       	movw	r26, r30
    1646:	a8 0f       	add	r26, r24
    1648:	b9 1f       	adc	r27, r25
    164a:	a8 50       	subi	r26, 0x08	; 8
    164c:	be 4f       	sbci	r27, 0xFE	; 254
    164e:	6c 93       	st	X, r22
			row[part2row][column1]=block.part2[0];
    1650:	d9 01       	movw	r26, r18
    1652:	a8 0f       	add	r26, r24
    1654:	b9 1f       	adc	r27, r25
    1656:	a8 50       	subi	r26, 0x08	; 8
    1658:	be 4f       	sbci	r27, 0xFE	; 254
    165a:	6c 93       	st	X, r22
			//row[part1row][column2]=block.part2[1];
			//row[part2row][column1-1]=block.part3[0];
			//row[part2row][column2]=block.part3[1];
			row[part2row][column1+1]=0;
    165c:	01 96       	adiw	r24, 0x01	; 1
    165e:	d9 01       	movw	r26, r18
    1660:	a8 0f       	add	r26, r24
    1662:	b9 1f       	adc	r27, r25
    1664:	a8 50       	subi	r26, 0x08	; 8
    1666:	be 4f       	sbci	r27, 0xFE	; 254
    1668:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
    166a:	8e 0f       	add	r24, r30
    166c:	9f 1f       	adc	r25, r31
    166e:	fc 01       	movw	r30, r24
    1670:	e8 50       	subi	r30, 0x08	; 8
    1672:	fe 4f       	sbci	r31, 0xFE	; 254
    1674:	10 82       	st	Z, r1
    1676:	84 e0       	ldi	r24, 0x04	; 4
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	11 c4       	rjmp	.+2082   	; 0x1e9e <SMTick1+0x1554>
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==1&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0)
    167c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1680:	69 2f       	mov	r22, r25
    1682:	70 e0       	ldi	r23, 0x00	; 0
    1684:	c8 e0       	ldi	r28, 0x08	; 8
    1686:	9c 9f       	mul	r25, r28
    1688:	40 0d       	add	r20, r0
    168a:	51 1d       	adc	r21, r1
    168c:	11 24       	eor	r1, r1
    168e:	fa 01       	movw	r30, r20
    1690:	e8 50       	subi	r30, 0x08	; 8
    1692:	fe 4f       	sbci	r31, 0xFE	; 254
    1694:	90 81       	ld	r25, Z
    1696:	91 30       	cpi	r25, 0x01	; 1
    1698:	09 f0       	breq	.+2      	; 0x169c <SMTick1+0xd52>
    169a:	ee c2       	rjmp	.+1500   	; 0x1c78 <SMTick1+0x132e>
    169c:	fb 01       	movw	r30, r22
    169e:	ee 0f       	add	r30, r30
    16a0:	ff 1f       	adc	r31, r31
    16a2:	ee 0f       	add	r30, r30
    16a4:	ff 1f       	adc	r31, r31
    16a6:	ee 0f       	add	r30, r30
    16a8:	ff 1f       	adc	r31, r31
    16aa:	ea 0f       	add	r30, r26
    16ac:	fb 1f       	adc	r31, r27
    16ae:	e8 50       	subi	r30, 0x08	; 8
    16b0:	fe 4f       	sbci	r31, 0xFE	; 254
    16b2:	90 81       	ld	r25, Z
    16b4:	91 11       	cpse	r25, r1
    16b6:	e3 c2       	rjmp	.+1478   	; 0x1c7e <SMTick1+0x1334>
	{																									       //0,1			
		if (column2!=0)																						   //0,1
    16b8:	88 23       	and	r24, r24
    16ba:	09 f4       	brne	.+2      	; 0x16be <SMTick1+0xd74>
    16bc:	e3 c2       	rjmp	.+1478   	; 0x1c84 <SMTick1+0x133a>
		{
			column1--;
    16be:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <column1>
    16c2:	91 50       	subi	r25, 0x01	; 1
    16c4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <column1>
			column2--;
    16c8:	81 50       	subi	r24, 0x01	; 1
    16ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			row[part1row][column2]=block.part2[0];
    16ce:	48 2f       	mov	r20, r24
    16d0:	50 e0       	ldi	r21, 0x00	; 0
    16d2:	e5 e4       	ldi	r30, 0x45	; 69
    16d4:	f2 e0       	ldi	r31, 0x02	; 2
    16d6:	c2 81       	ldd	r28, Z+2	; 0x02
    16d8:	66 0f       	add	r22, r22
    16da:	77 1f       	adc	r23, r23
    16dc:	66 0f       	add	r22, r22
    16de:	77 1f       	adc	r23, r23
    16e0:	66 0f       	add	r22, r22
    16e2:	77 1f       	adc	r23, r23
    16e4:	db 01       	movw	r26, r22
    16e6:	a4 0f       	add	r26, r20
    16e8:	b5 1f       	adc	r27, r21
    16ea:	a8 50       	subi	r26, 0x08	; 8
    16ec:	be 4f       	sbci	r27, 0xFE	; 254
    16ee:	cc 93       	st	X, r28
			row[part2row][column2]=block.part3[1];
    16f0:	22 0f       	add	r18, r18
    16f2:	33 1f       	adc	r19, r19
    16f4:	22 0f       	add	r18, r18
    16f6:	33 1f       	adc	r19, r19
    16f8:	22 0f       	add	r18, r18
    16fa:	33 1f       	adc	r19, r19
    16fc:	42 0f       	add	r20, r18
    16fe:	53 1f       	adc	r21, r19
    1700:	da 01       	movw	r26, r20
    1702:	a8 50       	subi	r26, 0x08	; 8
    1704:	be 4f       	sbci	r27, 0xFE	; 254
    1706:	85 81       	ldd	r24, Z+5	; 0x05
    1708:	8c 93       	st	X, r24
			row[part1row][column1]=block.part2[0];
    170a:	89 2f       	mov	r24, r25
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	db 01       	movw	r26, r22
    1710:	a8 0f       	add	r26, r24
    1712:	b9 1f       	adc	r27, r25
    1714:	a8 50       	subi	r26, 0x08	; 8
    1716:	be 4f       	sbci	r27, 0xFE	; 254
    1718:	cc 93       	st	X, r28
			row[part2row][column1]=block.part2[1];
    171a:	d9 01       	movw	r26, r18
    171c:	a8 0f       	add	r26, r24
    171e:	b9 1f       	adc	r27, r25
    1720:	a8 50       	subi	r26, 0x08	; 8
    1722:	be 4f       	sbci	r27, 0xFE	; 254
    1724:	43 81       	ldd	r20, Z+3	; 0x03
    1726:	4c 93       	st	X, r20
			//row[part1row][column2]=block.part2[1];
			//row[part2row][column1-1]=block.part3[0];
			//row[part2row][column2]=block.part3[1];
			row[part2row][column1+1]=0;
    1728:	01 96       	adiw	r24, 0x01	; 1
    172a:	d9 01       	movw	r26, r18
    172c:	a8 0f       	add	r26, r24
    172e:	b9 1f       	adc	r27, r25
    1730:	a8 50       	subi	r26, 0x08	; 8
    1732:	be 4f       	sbci	r27, 0xFE	; 254
    1734:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
    1736:	86 0f       	add	r24, r22
    1738:	97 1f       	adc	r25, r23
    173a:	fc 01       	movw	r30, r24
    173c:	e8 50       	subi	r30, 0x08	; 8
    173e:	fe 4f       	sbci	r31, 0xFE	; 254
    1740:	10 82       	st	Z, r1
    1742:	84 e0       	ldi	r24, 0x04	; 4
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	ab c3       	rjmp	.+1878   	; 0x1e9e <SMTick1+0x1554>
	}

	break;
	
	case right:
	if (row[part2row][column1]==1&&row[part2row][column1+1]==0&&row[part1row][column1]==1&&row[part1row][column1+1]==0)
    1748:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <part2row>
    174c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <column1>
    1750:	28 2f       	mov	r18, r24
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	49 2f       	mov	r20, r25
    1756:	50 e0       	ldi	r21, 0x00	; 0
    1758:	f9 01       	movw	r30, r18
    175a:	68 e0       	ldi	r22, 0x08	; 8
    175c:	96 9f       	mul	r25, r22
    175e:	e0 0d       	add	r30, r0
    1760:	f1 1d       	adc	r31, r1
    1762:	11 24       	eor	r1, r1
    1764:	e8 50       	subi	r30, 0x08	; 8
    1766:	fe 4f       	sbci	r31, 0xFE	; 254
    1768:	90 81       	ld	r25, Z
    176a:	91 30       	cpi	r25, 0x01	; 1
    176c:	09 f0       	breq	.+2      	; 0x1770 <SMTick1+0xe26>
    176e:	d6 c2       	rjmp	.+1452   	; 0x1d1c <SMTick1+0x13d2>
    1770:	e9 01       	movw	r28, r18
    1772:	21 96       	adiw	r28, 0x01	; 1
    1774:	fa 01       	movw	r30, r20
    1776:	ee 0f       	add	r30, r30
    1778:	ff 1f       	adc	r31, r31
    177a:	ee 0f       	add	r30, r30
    177c:	ff 1f       	adc	r31, r31
    177e:	ee 0f       	add	r30, r30
    1780:	ff 1f       	adc	r31, r31
    1782:	ec 0f       	add	r30, r28
    1784:	fd 1f       	adc	r31, r29
    1786:	e8 50       	subi	r30, 0x08	; 8
    1788:	fe 4f       	sbci	r31, 0xFE	; 254
    178a:	90 81       	ld	r25, Z
    178c:	91 11       	cpse	r25, r1
    178e:	7d c2       	rjmp	.+1274   	; 0x1c8a <SMTick1+0x1340>
    1790:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1794:	69 2f       	mov	r22, r25
    1796:	70 e0       	ldi	r23, 0x00	; 0
    1798:	f9 01       	movw	r30, r18
    179a:	a8 e0       	ldi	r26, 0x08	; 8
    179c:	9a 9f       	mul	r25, r26
    179e:	e0 0d       	add	r30, r0
    17a0:	f1 1d       	adc	r31, r1
    17a2:	11 24       	eor	r1, r1
    17a4:	e8 50       	subi	r30, 0x08	; 8
    17a6:	fe 4f       	sbci	r31, 0xFE	; 254
    17a8:	90 81       	ld	r25, Z
    17aa:	91 30       	cpi	r25, 0x01	; 1
    17ac:	09 f0       	breq	.+2      	; 0x17b0 <SMTick1+0xe66>
    17ae:	3d c3       	rjmp	.+1658   	; 0x1e2a <SMTick1+0x14e0>
    17b0:	fb 01       	movw	r30, r22
    17b2:	ee 0f       	add	r30, r30
    17b4:	ff 1f       	adc	r31, r31
    17b6:	ee 0f       	add	r30, r30
    17b8:	ff 1f       	adc	r31, r31
    17ba:	ee 0f       	add	r30, r30
    17bc:	ff 1f       	adc	r31, r31
    17be:	ec 0f       	add	r30, r28
    17c0:	fd 1f       	adc	r31, r29
    17c2:	e8 50       	subi	r30, 0x08	; 8
    17c4:	fe 4f       	sbci	r31, 0xFE	; 254
    17c6:	90 81       	ld	r25, Z
    17c8:	91 11       	cpse	r25, r1
    17ca:	2f c3       	rjmp	.+1630   	; 0x1e2a <SMTick1+0x14e0>
	{																										//1,0
	if (column1!=7)																							//1,0
    17cc:	87 30       	cpi	r24, 0x07	; 7
    17ce:	09 f4       	brne	.+2      	; 0x17d2 <SMTick1+0xe88>
    17d0:	5f c2       	rjmp	.+1214   	; 0x1c90 <SMTick1+0x1346>
	{
	column1++;
    17d2:	8f 5f       	subi	r24, 0xFF	; 255
    17d4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <column1>
	column2++;
    17d8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    17dc:	2f 5f       	subi	r18, 0xFF	; 255
    17de:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
	row[part2row][column2-1]=0;
    17e2:	30 e0       	ldi	r19, 0x00	; 0
    17e4:	f9 01       	movw	r30, r18
    17e6:	31 97       	sbiw	r30, 0x01	; 1
    17e8:	44 0f       	add	r20, r20
    17ea:	55 1f       	adc	r21, r21
    17ec:	44 0f       	add	r20, r20
    17ee:	55 1f       	adc	r21, r21
    17f0:	44 0f       	add	r20, r20
    17f2:	55 1f       	adc	r21, r21
    17f4:	da 01       	movw	r26, r20
    17f6:	ae 0f       	add	r26, r30
    17f8:	bf 1f       	adc	r27, r31
    17fa:	a8 50       	subi	r26, 0x08	; 8
    17fc:	be 4f       	sbci	r27, 0xFE	; 254
    17fe:	1c 92       	st	X, r1
	// row[part2row][column2+1]=0;
	row[part1row][column2-1]=0;
    1800:	66 0f       	add	r22, r22
    1802:	77 1f       	adc	r23, r23
    1804:	66 0f       	add	r22, r22
    1806:	77 1f       	adc	r23, r23
    1808:	66 0f       	add	r22, r22
    180a:	77 1f       	adc	r23, r23
    180c:	e6 0f       	add	r30, r22
    180e:	f7 1f       	adc	r31, r23
    1810:	e8 50       	subi	r30, 0x08	; 8
    1812:	fe 4f       	sbci	r31, 0xFE	; 254
    1814:	10 82       	st	Z, r1
	row[part1row][column1]=block.part2[0];
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	c5 e4       	ldi	r28, 0x45	; 69
    181a:	d2 e0       	ldi	r29, 0x02	; 2
    181c:	1a 81       	ldd	r17, Y+2	; 0x02
    181e:	fb 01       	movw	r30, r22
    1820:	e8 0f       	add	r30, r24
    1822:	f9 1f       	adc	r31, r25
    1824:	e8 50       	subi	r30, 0x08	; 8
    1826:	fe 4f       	sbci	r31, 0xFE	; 254
    1828:	10 83       	st	Z, r17
	row[part2row][column1]=block.part2[0];
    182a:	84 0f       	add	r24, r20
    182c:	95 1f       	adc	r25, r21
    182e:	fc 01       	movw	r30, r24
    1830:	e8 50       	subi	r30, 0x08	; 8
    1832:	fe 4f       	sbci	r31, 0xFE	; 254
    1834:	10 83       	st	Z, r17
	row[part1row][column2]=block.part2[0];
    1836:	62 0f       	add	r22, r18
    1838:	73 1f       	adc	r23, r19
    183a:	db 01       	movw	r26, r22
    183c:	a8 50       	subi	r26, 0x08	; 8
    183e:	be 4f       	sbci	r27, 0xFE	; 254
    1840:	1c 93       	st	X, r17
	//row[part2row][column1-1]=block.part3[0];
	row[part2row][column2]=block.part3[1];
    1842:	24 0f       	add	r18, r20
    1844:	35 1f       	adc	r19, r21
    1846:	f9 01       	movw	r30, r18
    1848:	e8 50       	subi	r30, 0x08	; 8
    184a:	fe 4f       	sbci	r31, 0xFE	; 254
    184c:	8d 81       	ldd	r24, Y+5	; 0x05
    184e:	80 83       	st	Z, r24
    1850:	85 e0       	ldi	r24, 0x05	; 5
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	24 c3       	rjmp	.+1608   	; 0x1e9e <SMTick1+0x1554>
	
	//row[part1row][column2]=0;
	}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==0&&row[part1row][column1]==0&&row[part1row][column1+1]==0)
    1856:	b9 01       	movw	r22, r18
    1858:	6f 5f       	subi	r22, 0xFF	; 255
    185a:	7f 4f       	sbci	r23, 0xFF	; 255
    185c:	fa 01       	movw	r30, r20
    185e:	ee 0f       	add	r30, r30
    1860:	ff 1f       	adc	r31, r31
    1862:	ee 0f       	add	r30, r30
    1864:	ff 1f       	adc	r31, r31
    1866:	ee 0f       	add	r30, r30
    1868:	ff 1f       	adc	r31, r31
    186a:	e6 0f       	add	r30, r22
    186c:	f7 1f       	adc	r31, r23
    186e:	e8 50       	subi	r30, 0x08	; 8
    1870:	fe 4f       	sbci	r31, 0xFE	; 254
    1872:	90 81       	ld	r25, Z
    1874:	91 11       	cpse	r25, r1
    1876:	00 c3       	rjmp	.+1536   	; 0x1e78 <SMTick1+0x152e>
    1878:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    187c:	a9 2f       	mov	r26, r25
    187e:	b0 e0       	ldi	r27, 0x00	; 0
    1880:	f9 01       	movw	r30, r18
    1882:	c8 e0       	ldi	r28, 0x08	; 8
    1884:	9c 9f       	mul	r25, r28
    1886:	e0 0d       	add	r30, r0
    1888:	f1 1d       	adc	r31, r1
    188a:	11 24       	eor	r1, r1
    188c:	e8 50       	subi	r30, 0x08	; 8
    188e:	fe 4f       	sbci	r31, 0xFE	; 254
    1890:	90 81       	ld	r25, Z
    1892:	91 11       	cpse	r25, r1
    1894:	dd c2       	rjmp	.+1466   	; 0x1e50 <SMTick1+0x1506>
    1896:	fd 01       	movw	r30, r26
    1898:	ee 0f       	add	r30, r30
    189a:	ff 1f       	adc	r31, r31
    189c:	ee 0f       	add	r30, r30
    189e:	ff 1f       	adc	r31, r31
    18a0:	ee 0f       	add	r30, r30
    18a2:	ff 1f       	adc	r31, r31
    18a4:	e6 0f       	add	r30, r22
    18a6:	f7 1f       	adc	r31, r23
    18a8:	e8 50       	subi	r30, 0x08	; 8
    18aa:	fe 4f       	sbci	r31, 0xFE	; 254
    18ac:	90 81       	ld	r25, Z
    18ae:	91 11       	cpse	r25, r1
    18b0:	cf c2       	rjmp	.+1438   	; 0x1e50 <SMTick1+0x1506>
	{																										//0,0
		if (column1!=7)																					    //0,0
    18b2:	87 30       	cpi	r24, 0x07	; 7
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <SMTick1+0xf6e>
    18b6:	ef c1       	rjmp	.+990    	; 0x1c96 <SMTick1+0x134c>
		{
			column1++;
    18b8:	8f 5f       	subi	r24, 0xFF	; 255
    18ba:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <column1>
			column2++;
    18be:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    18c2:	2f 5f       	subi	r18, 0xFF	; 255
    18c4:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
			row[part2row][column2-1]=0;
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	b9 01       	movw	r22, r18
    18cc:	61 50       	subi	r22, 0x01	; 1
    18ce:	71 09       	sbc	r23, r1
    18d0:	44 0f       	add	r20, r20
    18d2:	55 1f       	adc	r21, r21
    18d4:	44 0f       	add	r20, r20
    18d6:	55 1f       	adc	r21, r21
    18d8:	44 0f       	add	r20, r20
    18da:	55 1f       	adc	r21, r21
    18dc:	fa 01       	movw	r30, r20
    18de:	e6 0f       	add	r30, r22
    18e0:	f7 1f       	adc	r31, r23
    18e2:	e8 50       	subi	r30, 0x08	; 8
    18e4:	fe 4f       	sbci	r31, 0xFE	; 254
    18e6:	10 82       	st	Z, r1
			// row[part2row][column2+1]=0;
			row[part1row][column2-1]=0;
    18e8:	aa 0f       	add	r26, r26
    18ea:	bb 1f       	adc	r27, r27
    18ec:	aa 0f       	add	r26, r26
    18ee:	bb 1f       	adc	r27, r27
    18f0:	aa 0f       	add	r26, r26
    18f2:	bb 1f       	adc	r27, r27
    18f4:	6a 0f       	add	r22, r26
    18f6:	7b 1f       	adc	r23, r27
    18f8:	fb 01       	movw	r30, r22
    18fa:	e8 50       	subi	r30, 0x08	; 8
    18fc:	fe 4f       	sbci	r31, 0xFE	; 254
    18fe:	10 82       	st	Z, r1
			row[part1row][column1]=block.part2[0];
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	c5 e4       	ldi	r28, 0x45	; 69
    1904:	d2 e0       	ldi	r29, 0x02	; 2
    1906:	6a 81       	ldd	r22, Y+2	; 0x02
    1908:	fd 01       	movw	r30, r26
    190a:	e8 0f       	add	r30, r24
    190c:	f9 1f       	adc	r31, r25
    190e:	e8 50       	subi	r30, 0x08	; 8
    1910:	fe 4f       	sbci	r31, 0xFE	; 254
    1912:	60 83       	st	Z, r22
			row[part2row][column1]=block.part2[0];
    1914:	84 0f       	add	r24, r20
    1916:	95 1f       	adc	r25, r21
    1918:	fc 01       	movw	r30, r24
    191a:	e8 50       	subi	r30, 0x08	; 8
    191c:	fe 4f       	sbci	r31, 0xFE	; 254
    191e:	60 83       	st	Z, r22
			row[part1row][column2]=block.part2[0];
    1920:	a2 0f       	add	r26, r18
    1922:	b3 1f       	adc	r27, r19
    1924:	a8 50       	subi	r26, 0x08	; 8
    1926:	be 4f       	sbci	r27, 0xFE	; 254
    1928:	6c 93       	st	X, r22
			//row[part2row][column1-1]=block.part3[0];
			row[part2row][column2]=block.part3[1];
    192a:	24 0f       	add	r18, r20
    192c:	35 1f       	adc	r19, r21
    192e:	f9 01       	movw	r30, r18
    1930:	e8 50       	subi	r30, 0x08	; 8
    1932:	fe 4f       	sbci	r31, 0xFE	; 254
    1934:	8d 81       	ldd	r24, Y+5	; 0x05
    1936:	80 83       	st	Z, r24
    1938:	85 e0       	ldi	r24, 0x05	; 5
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	b0 c2       	rjmp	.+1376   	; 0x1e9e <SMTick1+0x1554>
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==1&&row[part2row][column1+1]==0&&row[part1row][column1]==0&&row[part1row][column1+1]==1)
    193e:	fd 01       	movw	r30, r26
    1940:	ee 0f       	add	r30, r30
    1942:	ff 1f       	adc	r31, r31
    1944:	ee 0f       	add	r30, r30
    1946:	ff 1f       	adc	r31, r31
    1948:	ee 0f       	add	r30, r30
    194a:	ff 1f       	adc	r31, r31
    194c:	ec 0f       	add	r30, r28
    194e:	fd 1f       	adc	r31, r29
    1950:	e8 50       	subi	r30, 0x08	; 8
    1952:	fe 4f       	sbci	r31, 0xFE	; 254
    1954:	90 81       	ld	r25, Z
    1956:	91 30       	cpi	r25, 0x01	; 1
    1958:	09 f0       	breq	.+2      	; 0x195c <SMTick1+0x1012>
    195a:	a0 c1       	rjmp	.+832    	; 0x1c9c <SMTick1+0x1352>
	{																										//0,1
		if (column1!=7)																						//1,0
    195c:	87 30       	cpi	r24, 0x07	; 7
    195e:	09 f4       	brne	.+2      	; 0x1962 <SMTick1+0x1018>
    1960:	a0 c1       	rjmp	.+832    	; 0x1ca2 <SMTick1+0x1358>
		{
			column1++;
    1962:	8f 5f       	subi	r24, 0xFF	; 255
    1964:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <column1>
			column2++;
    1968:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    196c:	2f 5f       	subi	r18, 0xFF	; 255
    196e:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
			row[part2row][column2-1]=0;
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	b9 01       	movw	r22, r18
    1976:	61 50       	subi	r22, 0x01	; 1
    1978:	71 09       	sbc	r23, r1
    197a:	44 0f       	add	r20, r20
    197c:	55 1f       	adc	r21, r21
    197e:	44 0f       	add	r20, r20
    1980:	55 1f       	adc	r21, r21
    1982:	44 0f       	add	r20, r20
    1984:	55 1f       	adc	r21, r21
    1986:	fa 01       	movw	r30, r20
    1988:	e6 0f       	add	r30, r22
    198a:	f7 1f       	adc	r31, r23
    198c:	e8 50       	subi	r30, 0x08	; 8
    198e:	fe 4f       	sbci	r31, 0xFE	; 254
    1990:	10 82       	st	Z, r1
			// row[part2row][column2+1]=0;
			row[part1row][column2-1]=0;
    1992:	aa 0f       	add	r26, r26
    1994:	bb 1f       	adc	r27, r27
    1996:	aa 0f       	add	r26, r26
    1998:	bb 1f       	adc	r27, r27
    199a:	aa 0f       	add	r26, r26
    199c:	bb 1f       	adc	r27, r27
    199e:	6a 0f       	add	r22, r26
    19a0:	7b 1f       	adc	r23, r27
    19a2:	fb 01       	movw	r30, r22
    19a4:	e8 50       	subi	r30, 0x08	; 8
    19a6:	fe 4f       	sbci	r31, 0xFE	; 254
    19a8:	10 82       	st	Z, r1
			row[part1row][column1]=block.part2[0];
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	c5 e4       	ldi	r28, 0x45	; 69
    19ae:	d2 e0       	ldi	r29, 0x02	; 2
    19b0:	6a 81       	ldd	r22, Y+2	; 0x02
    19b2:	fd 01       	movw	r30, r26
    19b4:	e8 0f       	add	r30, r24
    19b6:	f9 1f       	adc	r31, r25
    19b8:	e8 50       	subi	r30, 0x08	; 8
    19ba:	fe 4f       	sbci	r31, 0xFE	; 254
    19bc:	60 83       	st	Z, r22
			row[part2row][column1]=block.part2[0];
    19be:	84 0f       	add	r24, r20
    19c0:	95 1f       	adc	r25, r21
    19c2:	fc 01       	movw	r30, r24
    19c4:	e8 50       	subi	r30, 0x08	; 8
    19c6:	fe 4f       	sbci	r31, 0xFE	; 254
    19c8:	60 83       	st	Z, r22
			row[part1row][column2]=block.part2[0];
    19ca:	a2 0f       	add	r26, r18
    19cc:	b3 1f       	adc	r27, r19
    19ce:	a8 50       	subi	r26, 0x08	; 8
    19d0:	be 4f       	sbci	r27, 0xFE	; 254
    19d2:	6c 93       	st	X, r22
			//row[part2row][column1-1]=block.part3[0];
			row[part2row][column2]=block.part3[1];
    19d4:	24 0f       	add	r18, r20
    19d6:	35 1f       	adc	r19, r21
    19d8:	f9 01       	movw	r30, r18
    19da:	e8 50       	subi	r30, 0x08	; 8
    19dc:	fe 4f       	sbci	r31, 0xFE	; 254
    19de:	8d 81       	ldd	r24, Y+5	; 0x05
    19e0:	80 83       	st	Z, r24
    19e2:	85 e0       	ldi	r24, 0x05	; 5
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	5b c2       	rjmp	.+1206   	; 0x1e9e <SMTick1+0x1554>
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==1&&row[part1row][column1]==1&&row[part1row][column1+1]==0)
    19e8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    19ec:	09 2f       	mov	r16, r25
    19ee:	10 e0       	ldi	r17, 0x00	; 0
    19f0:	e8 e0       	ldi	r30, 0x08	; 8
    19f2:	9e 9f       	mul	r25, r30
    19f4:	20 0d       	add	r18, r0
    19f6:	31 1d       	adc	r19, r1
    19f8:	11 24       	eor	r1, r1
    19fa:	f9 01       	movw	r30, r18
    19fc:	e8 50       	subi	r30, 0x08	; 8
    19fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1a00:	90 81       	ld	r25, Z
    1a02:	91 30       	cpi	r25, 0x01	; 1
    1a04:	09 f0       	breq	.+2      	; 0x1a08 <SMTick1+0x10be>
    1a06:	50 c1       	rjmp	.+672    	; 0x1ca8 <SMTick1+0x135e>
    1a08:	b8 01       	movw	r22, r16
    1a0a:	66 0f       	add	r22, r22
    1a0c:	77 1f       	adc	r23, r23
    1a0e:	66 0f       	add	r22, r22
    1a10:	77 1f       	adc	r23, r23
    1a12:	66 0f       	add	r22, r22
    1a14:	77 1f       	adc	r23, r23
    1a16:	fb 01       	movw	r30, r22
    1a18:	ea 0f       	add	r30, r26
    1a1a:	fb 1f       	adc	r31, r27
    1a1c:	e8 50       	subi	r30, 0x08	; 8
    1a1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1a20:	90 81       	ld	r25, Z
    1a22:	91 11       	cpse	r25, r1
    1a24:	44 c1       	rjmp	.+648    	; 0x1cae <SMTick1+0x1364>
	{																										//1,0
		if (column1!=7)																						//0,1
    1a26:	87 30       	cpi	r24, 0x07	; 7
    1a28:	09 f4       	brne	.+2      	; 0x1a2c <SMTick1+0x10e2>
    1a2a:	44 c1       	rjmp	.+648    	; 0x1cb4 <SMTick1+0x136a>
		{
			column1++;
    1a2c:	8f 5f       	subi	r24, 0xFF	; 255
    1a2e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <column1>
			column2++;
    1a32:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1a36:	ef 5f       	subi	r30, 0xFF	; 255
    1a38:	e0 93 00 01 	sts	0x0100, r30	; 0x800100 <__data_start>
			row[part2row][column2-1]=0;
    1a3c:	ce 2f       	mov	r28, r30
    1a3e:	d0 e0       	ldi	r29, 0x00	; 0
    1a40:	be 01       	movw	r22, r28
    1a42:	61 50       	subi	r22, 0x01	; 1
    1a44:	71 09       	sbc	r23, r1
    1a46:	44 0f       	add	r20, r20
    1a48:	55 1f       	adc	r21, r21
    1a4a:	44 0f       	add	r20, r20
    1a4c:	55 1f       	adc	r21, r21
    1a4e:	44 0f       	add	r20, r20
    1a50:	55 1f       	adc	r21, r21
    1a52:	fa 01       	movw	r30, r20
    1a54:	e6 0f       	add	r30, r22
    1a56:	f7 1f       	adc	r31, r23
    1a58:	e8 50       	subi	r30, 0x08	; 8
    1a5a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a5c:	10 82       	st	Z, r1
			// row[part2row][column2+1]=0;
			row[part1row][column2-1]=0;
    1a5e:	98 01       	movw	r18, r16
    1a60:	22 0f       	add	r18, r18
    1a62:	33 1f       	adc	r19, r19
    1a64:	22 0f       	add	r18, r18
    1a66:	33 1f       	adc	r19, r19
    1a68:	22 0f       	add	r18, r18
    1a6a:	33 1f       	adc	r19, r19
    1a6c:	62 0f       	add	r22, r18
    1a6e:	73 1f       	adc	r23, r19
    1a70:	db 01       	movw	r26, r22
    1a72:	a8 50       	subi	r26, 0x08	; 8
    1a74:	be 4f       	sbci	r27, 0xFE	; 254
    1a76:	1c 92       	st	X, r1
			row[part1row][column1]=block.part2[0];
    1a78:	f9 01       	movw	r30, r18
    1a7a:	e8 0f       	add	r30, r24
    1a7c:	f1 1d       	adc	r31, r1
    1a7e:	e8 50       	subi	r30, 0x08	; 8
    1a80:	fe 4f       	sbci	r31, 0xFE	; 254
    1a82:	a5 e4       	ldi	r26, 0x45	; 69
    1a84:	b2 e0       	ldi	r27, 0x02	; 2
    1a86:	12 96       	adiw	r26, 0x02	; 2
    1a88:	8c 91       	ld	r24, X
    1a8a:	12 97       	sbiw	r26, 0x02	; 2
    1a8c:	80 83       	st	Z, r24
			//row[part2row][column1]=block.part2[0];
			row[part1row][column2]=block.part3[0];
    1a8e:	2c 0f       	add	r18, r28
    1a90:	3d 1f       	adc	r19, r29
    1a92:	f9 01       	movw	r30, r18
    1a94:	e8 50       	subi	r30, 0x08	; 8
    1a96:	fe 4f       	sbci	r31, 0xFE	; 254
    1a98:	14 96       	adiw	r26, 0x04	; 4
    1a9a:	8c 91       	ld	r24, X
    1a9c:	14 97       	sbiw	r26, 0x04	; 4
    1a9e:	80 83       	st	Z, r24
			//row[part2row][column1-1]=block.part3[0];
			row[part2row][column2]=block.part3[1];
    1aa0:	fa 01       	movw	r30, r20
    1aa2:	ec 0f       	add	r30, r28
    1aa4:	fd 1f       	adc	r31, r29
    1aa6:	e8 50       	subi	r30, 0x08	; 8
    1aa8:	fe 4f       	sbci	r31, 0xFE	; 254
    1aaa:	15 96       	adiw	r26, 0x05	; 5
    1aac:	8c 91       	ld	r24, X
    1aae:	80 83       	st	Z, r24
    1ab0:	85 e0       	ldi	r24, 0x05	; 5
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	f4 c1       	rjmp	.+1000   	; 0x1e9e <SMTick1+0x1554>
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==0&&row[part1row][column1]==1&&row[part1row][column1+1]==0)
    1ab6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1aba:	69 2f       	mov	r22, r25
    1abc:	70 e0       	ldi	r23, 0x00	; 0
    1abe:	f8 e0       	ldi	r31, 0x08	; 8
    1ac0:	9f 9f       	mul	r25, r31
    1ac2:	20 0d       	add	r18, r0
    1ac4:	31 1d       	adc	r19, r1
    1ac6:	11 24       	eor	r1, r1
    1ac8:	f9 01       	movw	r30, r18
    1aca:	e8 50       	subi	r30, 0x08	; 8
    1acc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ace:	90 81       	ld	r25, Z
    1ad0:	91 30       	cpi	r25, 0x01	; 1
    1ad2:	09 f0       	breq	.+2      	; 0x1ad6 <SMTick1+0x118c>
    1ad4:	f2 c0       	rjmp	.+484    	; 0x1cba <SMTick1+0x1370>
    1ad6:	fb 01       	movw	r30, r22
    1ad8:	ee 0f       	add	r30, r30
    1ada:	ff 1f       	adc	r31, r31
    1adc:	ee 0f       	add	r30, r30
    1ade:	ff 1f       	adc	r31, r31
    1ae0:	ee 0f       	add	r30, r30
    1ae2:	ff 1f       	adc	r31, r31
    1ae4:	ea 0f       	add	r30, r26
    1ae6:	fb 1f       	adc	r31, r27
    1ae8:	e8 50       	subi	r30, 0x08	; 8
    1aea:	fe 4f       	sbci	r31, 0xFE	; 254
    1aec:	90 81       	ld	r25, Z
    1aee:	91 11       	cpse	r25, r1
    1af0:	e7 c0       	rjmp	.+462    	; 0x1cc0 <SMTick1+0x1376>
	{																										//1,0
		if (column1!=7)																						//0,0
    1af2:	87 30       	cpi	r24, 0x07	; 7
    1af4:	09 f4       	brne	.+2      	; 0x1af8 <SMTick1+0x11ae>
    1af6:	e7 c0       	rjmp	.+462    	; 0x1cc6 <SMTick1+0x137c>
		{
			column1++;
    1af8:	8f 5f       	subi	r24, 0xFF	; 255
    1afa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <column1>
			column2++;
    1afe:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1b02:	2f 5f       	subi	r18, 0xFF	; 255
    1b04:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
			row[part2row][column2-1]=0;
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	f9 01       	movw	r30, r18
    1b0c:	31 97       	sbiw	r30, 0x01	; 1
    1b0e:	44 0f       	add	r20, r20
    1b10:	55 1f       	adc	r21, r21
    1b12:	44 0f       	add	r20, r20
    1b14:	55 1f       	adc	r21, r21
    1b16:	44 0f       	add	r20, r20
    1b18:	55 1f       	adc	r21, r21
    1b1a:	da 01       	movw	r26, r20
    1b1c:	ae 0f       	add	r26, r30
    1b1e:	bf 1f       	adc	r27, r31
    1b20:	a8 50       	subi	r26, 0x08	; 8
    1b22:	be 4f       	sbci	r27, 0xFE	; 254
    1b24:	1c 92       	st	X, r1
			// row[part2row][column2+1]=0;
			row[part1row][column2-1]=0;
    1b26:	66 0f       	add	r22, r22
    1b28:	77 1f       	adc	r23, r23
    1b2a:	66 0f       	add	r22, r22
    1b2c:	77 1f       	adc	r23, r23
    1b2e:	66 0f       	add	r22, r22
    1b30:	77 1f       	adc	r23, r23
    1b32:	e6 0f       	add	r30, r22
    1b34:	f7 1f       	adc	r31, r23
    1b36:	e8 50       	subi	r30, 0x08	; 8
    1b38:	fe 4f       	sbci	r31, 0xFE	; 254
    1b3a:	10 82       	st	Z, r1
			row[part1row][column1]=block.part2[0];
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	fb 01       	movw	r30, r22
    1b40:	e8 0f       	add	r30, r24
    1b42:	f9 1f       	adc	r31, r25
    1b44:	e8 50       	subi	r30, 0x08	; 8
    1b46:	fe 4f       	sbci	r31, 0xFE	; 254
    1b48:	c5 e4       	ldi	r28, 0x45	; 69
    1b4a:	d2 e0       	ldi	r29, 0x02	; 2
    1b4c:	aa 81       	ldd	r26, Y+2	; 0x02
    1b4e:	a0 83       	st	Z, r26
			row[part2row][column1]=block.part2[1];
    1b50:	84 0f       	add	r24, r20
    1b52:	95 1f       	adc	r25, r21
    1b54:	fc 01       	movw	r30, r24
    1b56:	e8 50       	subi	r30, 0x08	; 8
    1b58:	fe 4f       	sbci	r31, 0xFE	; 254
    1b5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b5c:	80 83       	st	Z, r24
			row[part1row][column2]=block.part3[0];
    1b5e:	62 0f       	add	r22, r18
    1b60:	73 1f       	adc	r23, r19
    1b62:	db 01       	movw	r26, r22
    1b64:	a8 50       	subi	r26, 0x08	; 8
    1b66:	be 4f       	sbci	r27, 0xFE	; 254
    1b68:	8c 81       	ldd	r24, Y+4	; 0x04
    1b6a:	8c 93       	st	X, r24
			//row[part2row][column1-1]=block.part3[0];
			row[part2row][column2]=block.part3[1];
    1b6c:	24 0f       	add	r18, r20
    1b6e:	35 1f       	adc	r19, r21
    1b70:	f9 01       	movw	r30, r18
    1b72:	e8 50       	subi	r30, 0x08	; 8
    1b74:	fe 4f       	sbci	r31, 0xFE	; 254
    1b76:	8d 81       	ldd	r24, Y+5	; 0x05
    1b78:	80 83       	st	Z, r24
    1b7a:	85 e0       	ldi	r24, 0x05	; 5
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	8f c1       	rjmp	.+798    	; 0x1e9e <SMTick1+0x1554>
		}
	}
	break;
	
	case rotate:
	upr=block.part2[1];
    1b80:	e5 e4       	ldi	r30, 0x45	; 69
    1b82:	f2 e0       	ldi	r31, 0x02	; 2
    1b84:	83 81       	ldd	r24, Z+3	; 0x03
    1b86:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <upr>
	upl=block.part2[0];
    1b8a:	82 81       	ldd	r24, Z+2	; 0x02
    1b8c:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <upl>
	lwl=block.part3[0];
    1b90:	84 81       	ldd	r24, Z+4	; 0x04
    1b92:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <lwl>
	lwr=block.part3[1];
    1b96:	85 81       	ldd	r24, Z+5	; 0x05
    1b98:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <lwr>
	LCD_DisplayString(1, "Rotate State");
    1b9c:	62 e3       	ldi	r22, 0x32	; 50
    1b9e:	71 e0       	ldi	r23, 0x01	; 1
    1ba0:	81 e0       	ldi	r24, 0x01	; 1
    1ba2:	0e 94 8d 03 	call	0x71a	; 0x71a <LCD_DisplayString>
	rotbutton=1;
    1ba6:	81 e0       	ldi	r24, 0x01	; 1
    1ba8:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <rotbutton>
	break;
    1bac:	88 e0       	ldi	r24, 0x08	; 8
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	76 c1       	rjmp	.+748    	; 0x1e9e <SMTick1+0x1554>
    1bb2:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
	
	case  gameov:
	  if (USART_HasReceived(1)) {
    1bb6:	88 23       	and	r24, r24
    1bb8:	d4 f4       	brge	.+52     	; 0x1bee <SMTick1+0x12a4>
		receive = USART_Receive(1);
    1bba:	81 e0       	ldi	r24, 0x01	; 1
    1bbc:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <USART_Receive>
    1bc0:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <receive>
		
		if (GetBit(receive,0)!=1)
    1bc4:	80 fd       	sbrc	r24, 0
    1bc6:	0f c0       	rjmp	.+30     	; 0x1be6 <SMTick1+0x129c>
		{
			message[0]='W';
    1bc8:	e0 e8       	ldi	r30, 0x80	; 128
    1bca:	f1 e0       	ldi	r31, 0x01	; 1
    1bcc:	87 e5       	ldi	r24, 0x57	; 87
    1bce:	80 83       	st	Z, r24
			message[1]='i';
    1bd0:	89 e6       	ldi	r24, 0x69	; 105
    1bd2:	81 83       	std	Z+1, r24	; 0x01
			message[2]='n';
    1bd4:	8e e6       	ldi	r24, 0x6E	; 110
    1bd6:	82 83       	std	Z+2, r24	; 0x02
			message[3]='n';
    1bd8:	83 83       	std	Z+3, r24	; 0x03
			message[4]='e';
    1bda:	85 e6       	ldi	r24, 0x65	; 101
    1bdc:	84 83       	std	Z+4, r24	; 0x04
			message[5]='r';
    1bde:	82 e7       	ldi	r24, 0x72	; 114
    1be0:	85 83       	std	Z+5, r24	; 0x05
			message[6]='/0';
    1be2:	80 e3       	ldi	r24, 0x30	; 48
    1be4:	86 83       	std	Z+6, r24	; 0x06
		}
		USART_Flush(1);
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	0e 94 28 04 	call	0x850	; 0x850 <USART_Flush>
    1bec:	18 c0       	rjmp	.+48     	; 0x1c1e <SMTick1+0x12d4>
//Functionality - checks if USART is ready to send
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_IsSendReady(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << UDRE0)) : (UCSR1A & (1 << UDRE1));
    1bee:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
	}
	else
	{
		if (USART_IsSendReady(1))
    1bf2:	85 ff       	sbrs	r24, 5
    1bf4:	04 c0       	rjmp	.+8      	; 0x1bfe <SMTick1+0x12b4>
		{
			USART_Send(0x02,1);
    1bf6:	61 e0       	ldi	r22, 0x01	; 1
    1bf8:	82 e0       	ldi	r24, 0x02	; 2
    1bfa:	0e 94 49 04 	call	0x892	; 0x892 <USART_Send>
		}
		message[0]='L';
    1bfe:	e0 e8       	ldi	r30, 0x80	; 128
    1c00:	f1 e0       	ldi	r31, 0x01	; 1
    1c02:	8c e4       	ldi	r24, 0x4C	; 76
    1c04:	80 83       	st	Z, r24
		message[1]='o';
    1c06:	8f e6       	ldi	r24, 0x6F	; 111
    1c08:	81 83       	std	Z+1, r24	; 0x01
		message[2]='s';
    1c0a:	83 e7       	ldi	r24, 0x73	; 115
    1c0c:	82 83       	std	Z+2, r24	; 0x02
		message[3]='e';
    1c0e:	85 e6       	ldi	r24, 0x65	; 101
    1c10:	83 83       	std	Z+3, r24	; 0x03
		message[4]='r';
    1c12:	82 e7       	ldi	r24, 0x72	; 114
    1c14:	84 83       	std	Z+4, r24	; 0x04
		message[5]='!';
    1c16:	81 e2       	ldi	r24, 0x21	; 33
    1c18:	85 83       	std	Z+5, r24	; 0x05
		message[6]='0/';
    1c1a:	8f e2       	ldi	r24, 0x2F	; 47
    1c1c:	86 83       	std	Z+6, r24	; 0x06
	}
	count=0;
    1c1e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <count>
	endg=0;
    1c22:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <endg>
	LCD_DisplayString(1,message);
    1c26:	60 e8       	ldi	r22, 0x80	; 128
    1c28:	71 e0       	ldi	r23, 0x01	; 1
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	0e 94 8d 03 	call	0x71a	; 0x71a <LCD_DisplayString>
	break;
    1c30:	89 e0       	ldi	r24, 0x09	; 9
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	34 c1       	rjmp	.+616    	; 0x1e9e <SMTick1+0x1554>
int SMTick1(int state) {

	// Local Variables
	//unsigned char press = ~PINA & 0x01;
	//State machine transitions
	switch (state) {
    1c36:	80 e0       	ldi	r24, 0x00	; 0
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	31 c1       	rjmp	.+610    	; 0x1e9e <SMTick1+0x1554>
	state = SM_Start; // default: Initial state
	break;
	}

	//State machine actions
	switch(state) {
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	90 e0       	ldi	r25, 0x00	; 0
    1c40:	2e c1       	rjmp	.+604    	; 0x1e9e <SMTick1+0x1554>
    1c42:	84 e0       	ldi	r24, 0x04	; 4
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	2b c1       	rjmp	.+598    	; 0x1e9e <SMTick1+0x1554>
    1c48:	84 e0       	ldi	r24, 0x04	; 4
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	28 c1       	rjmp	.+592    	; 0x1e9e <SMTick1+0x1554>
    1c4e:	84 e0       	ldi	r24, 0x04	; 4
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	25 c1       	rjmp	.+586    	; 0x1e9e <SMTick1+0x1554>
    1c54:	84 e0       	ldi	r24, 0x04	; 4
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	22 c1       	rjmp	.+580    	; 0x1e9e <SMTick1+0x1554>
    1c5a:	84 e0       	ldi	r24, 0x04	; 4
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	1f c1       	rjmp	.+574    	; 0x1e9e <SMTick1+0x1554>
    1c60:	84 e0       	ldi	r24, 0x04	; 4
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	1c c1       	rjmp	.+568    	; 0x1e9e <SMTick1+0x1554>
    1c66:	84 e0       	ldi	r24, 0x04	; 4
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	19 c1       	rjmp	.+562    	; 0x1e9e <SMTick1+0x1554>
    1c6c:	84 e0       	ldi	r24, 0x04	; 4
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	16 c1       	rjmp	.+556    	; 0x1e9e <SMTick1+0x1554>
    1c72:	84 e0       	ldi	r24, 0x04	; 4
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	13 c1       	rjmp	.+550    	; 0x1e9e <SMTick1+0x1554>
    1c78:	84 e0       	ldi	r24, 0x04	; 4
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	10 c1       	rjmp	.+544    	; 0x1e9e <SMTick1+0x1554>
    1c7e:	84 e0       	ldi	r24, 0x04	; 4
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0d c1       	rjmp	.+538    	; 0x1e9e <SMTick1+0x1554>
    1c84:	84 e0       	ldi	r24, 0x04	; 4
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	0a c1       	rjmp	.+532    	; 0x1e9e <SMTick1+0x1554>
    1c8a:	85 e0       	ldi	r24, 0x05	; 5
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	07 c1       	rjmp	.+526    	; 0x1e9e <SMTick1+0x1554>
    1c90:	85 e0       	ldi	r24, 0x05	; 5
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	04 c1       	rjmp	.+520    	; 0x1e9e <SMTick1+0x1554>
    1c96:	85 e0       	ldi	r24, 0x05	; 5
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	01 c1       	rjmp	.+514    	; 0x1e9e <SMTick1+0x1554>
    1c9c:	85 e0       	ldi	r24, 0x05	; 5
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	fe c0       	rjmp	.+508    	; 0x1e9e <SMTick1+0x1554>
    1ca2:	85 e0       	ldi	r24, 0x05	; 5
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	fb c0       	rjmp	.+502    	; 0x1e9e <SMTick1+0x1554>
    1ca8:	85 e0       	ldi	r24, 0x05	; 5
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	f8 c0       	rjmp	.+496    	; 0x1e9e <SMTick1+0x1554>
    1cae:	85 e0       	ldi	r24, 0x05	; 5
    1cb0:	90 e0       	ldi	r25, 0x00	; 0
    1cb2:	f5 c0       	rjmp	.+490    	; 0x1e9e <SMTick1+0x1554>
    1cb4:	85 e0       	ldi	r24, 0x05	; 5
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	f2 c0       	rjmp	.+484    	; 0x1e9e <SMTick1+0x1554>
    1cba:	85 e0       	ldi	r24, 0x05	; 5
    1cbc:	90 e0       	ldi	r25, 0x00	; 0
    1cbe:	ef c0       	rjmp	.+478    	; 0x1e9e <SMTick1+0x1554>
    1cc0:	85 e0       	ldi	r24, 0x05	; 5
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	ec c0       	rjmp	.+472    	; 0x1e9e <SMTick1+0x1554>
    1cc6:	85 e0       	ldi	r24, 0x05	; 5
    1cc8:	90 e0       	ldi	r25, 0x00	; 0
    1cca:	e9 c0       	rjmp	.+466    	; 0x1e9e <SMTick1+0x1554>
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
    1ccc:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
		}
		else if(GetBit(rotbutton,0)!=1)
		{
			state=rotate;
		}
		if (USART_HasReceived(1)) {
    1cd0:	88 23       	and	r24, r24
    1cd2:	0c f4       	brge	.+2      	; 0x1cd6 <SMTick1+0x138c>
    1cd4:	6e cf       	rjmp	.-292    	; 0x1bb2 <SMTick1+0x1268>
    1cd6:	7b c9       	rjmp	.-3338   	; 0xfce <SMTick1+0x684>
    1cd8:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    1cdc:	88 23       	and	r24, r24
    1cde:	0c f4       	brge	.+2      	; 0x1ce2 <SMTick1+0x1398>
    1ce0:	68 cf       	rjmp	.-304    	; 0x1bb2 <SMTick1+0x1268>
    1ce2:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <SMTick1+0x26a>
    1ce6:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    1cea:	88 23       	and	r24, r24
    1cec:	0c f4       	brge	.+2      	; 0x1cf0 <SMTick1+0x13a6>
    1cee:	61 cf       	rjmp	.-318    	; 0x1bb2 <SMTick1+0x1268>
    1cf0:	2b cd       	rjmp	.-1450   	; 0x1748 <SMTick1+0xdfe>
    1cf2:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    1cf6:	88 23       	and	r24, r24
    1cf8:	0c f4       	brge	.+2      	; 0x1cfc <SMTick1+0x13b2>
    1cfa:	5b cf       	rjmp	.-330    	; 0x1bb2 <SMTick1+0x1268>
    1cfc:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <SMTick1+0x1ec>
    1d00:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    1d04:	88 23       	and	r24, r24
    1d06:	0c f4       	brge	.+2      	; 0x1d0a <SMTick1+0x13c0>
    1d08:	54 cf       	rjmp	.-344    	; 0x1bb2 <SMTick1+0x1268>
    1d0a:	3a cf       	rjmp	.-396    	; 0x1b80 <SMTick1+0x1236>
    1d0c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    1d10:	50 cf       	rjmp	.-352    	; 0x1bb2 <SMTick1+0x1268>
	 row[part1row][column1]=0;
	 row[part1row][column2]=0;
	 part2row--;
	 part1row--;
	 }
	 else if (row[part2row][column1]==1&&row[part2row-1][column1]==0&& row[part2row-1][column2]==1&&row[part2row][column2]==0)//check if lower left is empty and continues moving
    1d12:	51 30       	cpi	r21, 0x01	; 1
    1d14:	09 f0       	breq	.+2      	; 0x1d18 <SMTick1+0x13ce>
    1d16:	da c8       	rjmp	.-3660   	; 0xecc <SMTick1+0x582>
    1d18:	0c 94 70 06 	jmp	0xce0	; 0xce0 <SMTick1+0x396>
	row[part2row][column2]=block.part3[1];
	
	//row[part1row][column2]=0;
	}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==0&&row[part1row][column1]==0&&row[part1row][column1+1]==0)
    1d1c:	99 23       	and	r25, r25
    1d1e:	09 f4       	brne	.+2      	; 0x1d22 <SMTick1+0x13d8>
    1d20:	9a cd       	rjmp	.-1228   	; 0x1856 <SMTick1+0xf0c>
    1d22:	85 e0       	ldi	r24, 0x05	; 5
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	bb c0       	rjmp	.+374    	; 0x1e9e <SMTick1+0x1554>
		 part2row--;
		 part1row--;
		
		 count++;
	 }
	  else if (row[part2row][column1]==0&&row[part2row-1][column1]==1&& row[part2row-1][column2]==1&&row[part2row][column2]==0)//check if both bottom is empty and continues moving
    1d28:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1d2c:	f0 e0       	ldi	r31, 0x00	; 0
    1d2e:	db 01       	movw	r26, r22
    1d30:	aa 0f       	add	r26, r26
    1d32:	bb 1f       	adc	r27, r27
    1d34:	aa 0f       	add	r26, r26
    1d36:	bb 1f       	adc	r27, r27
    1d38:	aa 0f       	add	r26, r26
    1d3a:	bb 1f       	adc	r27, r27
    1d3c:	ae 0f       	add	r26, r30
    1d3e:	bf 1f       	adc	r27, r31
    1d40:	a8 50       	subi	r26, 0x08	; 8
    1d42:	be 4f       	sbci	r27, 0xFE	; 254
    1d44:	5c 91       	ld	r21, X
    1d46:	51 30       	cpi	r21, 0x01	; 1
    1d48:	09 f0       	breq	.+2      	; 0x1d4c <SMTick1+0x1402>
    1d4a:	3b c9       	rjmp	.-3466   	; 0xfc2 <SMTick1+0x678>
    1d4c:	53 c8       	rjmp	.-3930   	; 0xdf4 <SMTick1+0x4aa>
		  part2row--;
		  part1row--;
		  
		  count++;
	  }
	 else if (row[part2row-1][column1]==0&& row[part2row-1][column2]==0) // if below is empty movedown
    1d4e:	21 50       	subi	r18, 0x01	; 1
    1d50:	31 09       	sbc	r19, r1
    1d52:	cc c8       	rjmp	.-3688   	; 0xeec <SMTick1+0x5a2>
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0)
    1d54:	ba 01       	movw	r22, r20
    1d56:	61 50       	subi	r22, 0x01	; 1
    1d58:	71 09       	sbc	r23, r1
    1d5a:	f9 01       	movw	r30, r18
    1d5c:	ee 0f       	add	r30, r30
    1d5e:	ff 1f       	adc	r31, r31
    1d60:	ee 0f       	add	r30, r30
    1d62:	ff 1f       	adc	r31, r31
    1d64:	ee 0f       	add	r30, r30
    1d66:	ff 1f       	adc	r31, r31
    1d68:	e6 0f       	add	r30, r22
    1d6a:	f7 1f       	adc	r31, r23
    1d6c:	e8 50       	subi	r30, 0x08	; 8
    1d6e:	fe 4f       	sbci	r31, 0xFE	; 254
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0&&row[part1row][column1]==1)
    1d70:	90 81       	ld	r25, Z
    1d72:	91 11       	cpse	r25, r1
    1d74:	42 c0       	rjmp	.+132    	; 0x1dfa <SMTick1+0x14b0>
    1d76:	a1 ca       	rjmp	.-2750   	; 0x12ba <SMTick1+0x970>
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0&&row[part1row][column1]==1&&row[part2row][column1]==1)
    1d78:	ba 01       	movw	r22, r20
    1d7a:	61 50       	subi	r22, 0x01	; 1
    1d7c:	71 09       	sbc	r23, r1
    1d7e:	f9 01       	movw	r30, r18
    1d80:	ee 0f       	add	r30, r30
    1d82:	ff 1f       	adc	r31, r31
    1d84:	ee 0f       	add	r30, r30
    1d86:	ff 1f       	adc	r31, r31
    1d88:	ee 0f       	add	r30, r30
    1d8a:	ff 1f       	adc	r31, r31
    1d8c:	e6 0f       	add	r30, r22
    1d8e:	f7 1f       	adc	r31, r23
    1d90:	e8 50       	subi	r30, 0x08	; 8
    1d92:	fe 4f       	sbci	r31, 0xFE	; 254
    1d94:	90 81       	ld	r25, Z
    1d96:	99 23       	and	r25, r25
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <SMTick1+0x1452>
    1d9a:	5a cb       	rjmp	.-2380   	; 0x1450 <SMTick1+0xb06>
    1d9c:	84 e0       	ldi	r24, 0x04	; 4
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	7e c0       	rjmp	.+252    	; 0x1e9e <SMTick1+0x1554>
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==1&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0)
    1da2:	da 01       	movw	r26, r20
    1da4:	11 97       	sbiw	r26, 0x01	; 1
    1da6:	f9 01       	movw	r30, r18
    1da8:	ee 0f       	add	r30, r30
    1daa:	ff 1f       	adc	r31, r31
    1dac:	ee 0f       	add	r30, r30
    1dae:	ff 1f       	adc	r31, r31
    1db0:	ee 0f       	add	r30, r30
    1db2:	ff 1f       	adc	r31, r31
    1db4:	ea 0f       	add	r30, r26
    1db6:	fb 1f       	adc	r31, r27
    1db8:	e8 50       	subi	r30, 0x08	; 8
    1dba:	fe 4f       	sbci	r31, 0xFE	; 254
    1dbc:	90 81       	ld	r25, Z
    1dbe:	99 23       	and	r25, r25
    1dc0:	09 f4       	brne	.+2      	; 0x1dc4 <SMTick1+0x147a>
    1dc2:	5c cc       	rjmp	.-1864   	; 0x167c <SMTick1+0xd32>
    1dc4:	84 e0       	ldi	r24, 0x04	; 4
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	6a c0       	rjmp	.+212    	; 0x1e9e <SMTick1+0x1554>
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==1&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0)
    1dca:	ba 01       	movw	r22, r20
    1dcc:	61 50       	subi	r22, 0x01	; 1
    1dce:	71 09       	sbc	r23, r1
    1dd0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1dd4:	e9 2f       	mov	r30, r25
    1dd6:	f0 e0       	ldi	r31, 0x00	; 0
    1dd8:	da 01       	movw	r26, r20
    1dda:	c8 e0       	ldi	r28, 0x08	; 8
    1ddc:	9c 9f       	mul	r25, r28
    1dde:	a0 0d       	add	r26, r0
    1de0:	b1 1d       	adc	r27, r1
    1de2:	11 24       	eor	r1, r1
    1de4:	a8 50       	subi	r26, 0x08	; 8
    1de6:	be 4f       	sbci	r27, 0xFE	; 254
    1de8:	9c 91       	ld	r25, X
    1dea:	99 23       	and	r25, r25
    1dec:	09 f4       	brne	.+2      	; 0x1df0 <SMTick1+0x14a6>
    1dee:	d6 ca       	rjmp	.-2644   	; 0x139c <SMTick1+0xa52>
    1df0:	19 c0       	rjmp	.+50     	; 0x1e24 <SMTick1+0x14da>
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0&&row[part1row][column1]==1&&row[part2row][column1]==1)
    1df2:	ba 01       	movw	r22, r20
    1df4:	61 50       	subi	r22, 0x01	; 1
    1df6:	71 09       	sbc	r23, r1
    1df8:	2b cb       	rjmp	.-2474   	; 0x1450 <SMTick1+0xb06>
    1dfa:	ba 01       	movw	r22, r20
    1dfc:	61 50       	subi	r22, 0x01	; 1
    1dfe:	71 09       	sbc	r23, r1
    1e00:	f9 01       	movw	r30, r18
    1e02:	ee 0f       	add	r30, r30
    1e04:	ff 1f       	adc	r31, r31
    1e06:	ee 0f       	add	r30, r30
    1e08:	ff 1f       	adc	r31, r31
    1e0a:	ee 0f       	add	r30, r30
    1e0c:	ff 1f       	adc	r31, r31
    1e0e:	e6 0f       	add	r30, r22
    1e10:	f7 1f       	adc	r31, r23
    1e12:	e8 50       	subi	r30, 0x08	; 8
    1e14:	fe 4f       	sbci	r31, 0xFE	; 254
			{
				row[part1row][column2]=block.part2[0];row[part1row][column1]=block.part3[0];
				row[part2row][column2]=block.part2[1];row[part2row][column1]=block.part3[1];
			}
		}
	else if (row[part2row][column2]==0&&row[part2row][column2-1]==0&&row[part1row][column2]==0&&row[part1row][column2-1]==0)
    1e16:	90 81       	ld	r25, Z
    1e18:	99 23       	and	r25, r25
    1e1a:	09 f4       	brne	.+2      	; 0x1e1e <SMTick1+0x14d4>
    1e1c:	c9 cb       	rjmp	.-2158   	; 0x15b0 <SMTick1+0xc66>
    1e1e:	84 e0       	ldi	r24, 0x04	; 4
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	3d c0       	rjmp	.+122    	; 0x1e9e <SMTick1+0x1554>
			// row[part2row][column2+1]=0;
			row[part1row][column1+1]=0;
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column2]==1&&row[part2row][column2-1]==0&&row[part1row][column2]==1&&row[part1row][column2-1]==0)
    1e24:	da 01       	movw	r26, r20
    1e26:	11 97       	sbiw	r26, 0x01	; 1
    1e28:	29 cc       	rjmp	.-1966   	; 0x167c <SMTick1+0xd32>
			row[part2row][column2]=block.part3[1];
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==1&&row[part2row][column1+1]==0&&row[part1row][column1]==0&&row[part1row][column1+1]==1)
    1e2a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <part1row>
    1e2e:	a9 2f       	mov	r26, r25
    1e30:	b0 e0       	ldi	r27, 0x00	; 0
    1e32:	e8 e0       	ldi	r30, 0x08	; 8
    1e34:	9e 9f       	mul	r25, r30
    1e36:	20 0d       	add	r18, r0
    1e38:	31 1d       	adc	r19, r1
    1e3a:	11 24       	eor	r1, r1
    1e3c:	f9 01       	movw	r30, r18
    1e3e:	e8 50       	subi	r30, 0x08	; 8
    1e40:	fe 4f       	sbci	r31, 0xFE	; 254
    1e42:	90 81       	ld	r25, Z
    1e44:	99 23       	and	r25, r25
    1e46:	09 f4       	brne	.+2      	; 0x1e4a <SMTick1+0x1500>
    1e48:	7a cd       	rjmp	.-1292   	; 0x193e <SMTick1+0xff4>
    1e4a:	85 e0       	ldi	r24, 0x05	; 5
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	27 c0       	rjmp	.+78     	; 0x1e9e <SMTick1+0x1554>
			row[part2row][column2]=block.part3[1];
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==1&&row[part1row][column1]==1&&row[part1row][column1+1]==0)
    1e50:	d9 01       	movw	r26, r18
    1e52:	11 96       	adiw	r26, 0x01	; 1
    1e54:	fa 01       	movw	r30, r20
    1e56:	ee 0f       	add	r30, r30
    1e58:	ff 1f       	adc	r31, r31
    1e5a:	ee 0f       	add	r30, r30
    1e5c:	ff 1f       	adc	r31, r31
    1e5e:	ee 0f       	add	r30, r30
    1e60:	ff 1f       	adc	r31, r31
    1e62:	ea 0f       	add	r30, r26
    1e64:	fb 1f       	adc	r31, r27
    1e66:	e8 50       	subi	r30, 0x08	; 8
    1e68:	fe 4f       	sbci	r31, 0xFE	; 254
			row[part2row][column2]=block.part3[1];
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==0&&row[part1row][column1]==1&&row[part1row][column1+1]==0)
    1e6a:	90 81       	ld	r25, Z
    1e6c:	99 23       	and	r25, r25
    1e6e:	09 f4       	brne	.+2      	; 0x1e72 <SMTick1+0x1528>
    1e70:	22 ce       	rjmp	.-956    	; 0x1ab6 <SMTick1+0x116c>
    1e72:	85 e0       	ldi	r24, 0x05	; 5
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	13 c0       	rjmp	.+38     	; 0x1e9e <SMTick1+0x1554>
			row[part2row][column2]=block.part3[1];
			
			//row[part1row][column2]=0;
		}
	}
	else if (row[part2row][column1]==0&&row[part2row][column1+1]==1&&row[part1row][column1]==1&&row[part1row][column1+1]==0)
    1e78:	d9 01       	movw	r26, r18
    1e7a:	11 96       	adiw	r26, 0x01	; 1
    1e7c:	fa 01       	movw	r30, r20
    1e7e:	ee 0f       	add	r30, r30
    1e80:	ff 1f       	adc	r31, r31
    1e82:	ee 0f       	add	r30, r30
    1e84:	ff 1f       	adc	r31, r31
    1e86:	ee 0f       	add	r30, r30
    1e88:	ff 1f       	adc	r31, r31
    1e8a:	ea 0f       	add	r30, r26
    1e8c:	fb 1f       	adc	r31, r27
    1e8e:	e8 50       	subi	r30, 0x08	; 8
    1e90:	fe 4f       	sbci	r31, 0xFE	; 254
    1e92:	90 81       	ld	r25, Z
    1e94:	91 30       	cpi	r25, 0x01	; 1
    1e96:	09 f4       	brne	.+2      	; 0x1e9a <SMTick1+0x1550>
    1e98:	a7 cd       	rjmp	.-1202   	; 0x19e8 <SMTick1+0x109e>
    1e9a:	85 e0       	ldi	r24, 0x05	; 5
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
	state = SM_Start; // default: Initial state
	break;
	}

	return state;
}
    1e9e:	df 91       	pop	r29
    1ea0:	cf 91       	pop	r28
    1ea2:	1f 91       	pop	r17
    1ea4:	0f 91       	pop	r16
    1ea6:	08 95       	ret

00001ea8 <ADC_init>:
	  }
	 pselection++;
	 return prandom;
}
void ADC_init() {
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
    1ea8:	ea e7       	ldi	r30, 0x7A	; 122
    1eaa:	f0 e0       	ldi	r31, 0x00	; 0
    1eac:	80 81       	ld	r24, Z
    1eae:	80 6e       	ori	r24, 0xE0	; 224
    1eb0:	80 83       	st	Z, r24
    1eb2:	08 95       	ret

00001eb4 <main>:

// --------END User defined FSMs-----------------------------------------------

// Implement scheduler code from PES.
int main()
{
    1eb4:	cf 93       	push	r28
    1eb6:	df 93       	push	r29
    1eb8:	cd b7       	in	r28, 0x3d	; 61
    1eba:	de b7       	in	r29, 0x3e	; 62
    1ebc:	2a 97       	sbiw	r28, 0x0a	; 10
    1ebe:	0f b6       	in	r0, 0x3f	; 63
    1ec0:	f8 94       	cli
    1ec2:	de bf       	out	0x3e, r29	; 62
    1ec4:	0f be       	out	0x3f, r0	; 63
    1ec6:	cd bf       	out	0x3d, r28	; 61
// Set Data Direction Registers
// Buttons PORTA[0-7], set AVR PORTA to pull down logic
DDRA = 0x00; PORTA = 0xFF;  // Configure port A  pins as inputs
    1ec8:	11 b8       	out	0x01, r1	; 1
    1eca:	8f ef       	ldi	r24, 0xFF	; 255
    1ecc:	82 b9       	out	0x02, r24	; 2
DDRB = 0xFF; PORTB = 0x00;  // Configure port B pins as outputs
    1ece:	84 b9       	out	0x04, r24	; 4
    1ed0:	15 b8       	out	0x05, r1	; 5
DDRC = 0xFF; PORTC = 0x00; // Configure portc for output on LCD
    1ed2:	87 b9       	out	0x07, r24	; 7
    1ed4:	18 b8       	out	0x08, r1	; 8
DDRD = 0xCA; PORTD = 0x35;  // Configures port D as outputs for lcd and setups portd for USART
    1ed6:	9a ec       	ldi	r25, 0xCA	; 202
    1ed8:	9a b9       	out	0x0a, r25	; 10
    1eda:	95 e3       	ldi	r25, 0x35	; 53
    1edc:	9b b9       	out	0x0b, r25	; 11
unsigned long int SMTick3_period = 2;  // update data for shifters
unsigned long int SMTick4_period = 2;  //shift
unsigned long int SMTick5_period = 700;  // lose
//Declare an array of tasks 
static task task1, task2, task3, task4,task5;
task *tasks[] = { &task1, &task2, &task3, &task4,&task5 };
    1ede:	9a e0       	ldi	r25, 0x0A	; 10
    1ee0:	e2 e1       	ldi	r30, 0x12	; 18
    1ee2:	f1 e0       	ldi	r31, 0x01	; 1
    1ee4:	de 01       	movw	r26, r28
    1ee6:	11 96       	adiw	r26, 0x01	; 1
    1ee8:	01 90       	ld	r0, Z+
    1eea:	0d 92       	st	X+, r0
    1eec:	9a 95       	dec	r25
    1eee:	e1 f7       	brne	.-8      	; 0x1ee8 <main+0x34>
const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

// Task 1
task1.state = -1;//Task initial state.
    1ef0:	ec e6       	ldi	r30, 0x6C	; 108
    1ef2:	f1 e0       	ldi	r31, 0x01	; 1
    1ef4:	80 83       	st	Z, r24
task1.period = SMTick1_period;//Task Period.
    1ef6:	4a ef       	ldi	r20, 0xFA	; 250
    1ef8:	50 e0       	ldi	r21, 0x00	; 0
    1efa:	60 e0       	ldi	r22, 0x00	; 0
    1efc:	70 e0       	ldi	r23, 0x00	; 0
    1efe:	41 83       	std	Z+1, r20	; 0x01
    1f00:	52 83       	std	Z+2, r21	; 0x02
    1f02:	63 83       	std	Z+3, r22	; 0x03
    1f04:	74 83       	std	Z+4, r23	; 0x04
task1.elapsedTime = SMTick1_period;//Task current elapsed time.
    1f06:	45 83       	std	Z+5, r20	; 0x05
    1f08:	56 83       	std	Z+6, r21	; 0x06
    1f0a:	67 83       	std	Z+7, r22	; 0x07
    1f0c:	70 87       	std	Z+8, r23	; 0x08
task1.TickFct = &SMTick1;//Function pointer for the tick.
    1f0e:	25 ea       	ldi	r18, 0xA5	; 165
    1f10:	34 e0       	ldi	r19, 0x04	; 4
    1f12:	32 87       	std	Z+10, r19	; 0x0a
    1f14:	21 87       	std	Z+9, r18	; 0x09

// Task 2
task2.state = -1;//Task initial state.
    1f16:	e1 e6       	ldi	r30, 0x61	; 97
    1f18:	f1 e0       	ldi	r31, 0x01	; 1
    1f1a:	80 83       	st	Z, r24
task2.period = SMTick2_period;//Task Period.
    1f1c:	42 e0       	ldi	r20, 0x02	; 2
    1f1e:	50 e0       	ldi	r21, 0x00	; 0
    1f20:	60 e0       	ldi	r22, 0x00	; 0
    1f22:	70 e0       	ldi	r23, 0x00	; 0
    1f24:	41 83       	std	Z+1, r20	; 0x01
    1f26:	52 83       	std	Z+2, r21	; 0x02
    1f28:	63 83       	std	Z+3, r22	; 0x03
    1f2a:	74 83       	std	Z+4, r23	; 0x04
task2.elapsedTime = SMTick2_period;//Task current elapsed time.
    1f2c:	45 83       	std	Z+5, r20	; 0x05
    1f2e:	56 83       	std	Z+6, r21	; 0x06
    1f30:	67 83       	std	Z+7, r22	; 0x07
    1f32:	70 87       	std	Z+8, r23	; 0x08
task2.TickFct = &SMTick2;//Function pointer for the tick.
    1f34:	22 e8       	ldi	r18, 0x82	; 130
    1f36:	30 e0       	ldi	r19, 0x00	; 0
    1f38:	32 87       	std	Z+10, r19	; 0x0a
    1f3a:	21 87       	std	Z+9, r18	; 0x09

// Task 3
task3.state = -1;//Task initial state.
    1f3c:	e6 e5       	ldi	r30, 0x56	; 86
    1f3e:	f1 e0       	ldi	r31, 0x01	; 1
    1f40:	80 83       	st	Z, r24
task3.period = SMTick3_period;//Task Period.
    1f42:	41 83       	std	Z+1, r20	; 0x01
    1f44:	52 83       	std	Z+2, r21	; 0x02
    1f46:	63 83       	std	Z+3, r22	; 0x03
    1f48:	74 83       	std	Z+4, r23	; 0x04
task3.elapsedTime = SMTick3_period; // Task current elasped time.
    1f4a:	45 83       	std	Z+5, r20	; 0x05
    1f4c:	56 83       	std	Z+6, r21	; 0x06
    1f4e:	67 83       	std	Z+7, r22	; 0x07
    1f50:	70 87       	std	Z+8, r23	; 0x08
task3.TickFct = &SMTick3; // Function pointer for the tick.
    1f52:	2b e5       	ldi	r18, 0x5B	; 91
    1f54:	31 e0       	ldi	r19, 0x01	; 1
    1f56:	32 87       	std	Z+10, r19	; 0x0a
    1f58:	21 87       	std	Z+9, r18	; 0x09

// Task 4
task4.state = -1;//Task initial state.
    1f5a:	eb e4       	ldi	r30, 0x4B	; 75
    1f5c:	f1 e0       	ldi	r31, 0x01	; 1
    1f5e:	80 83       	st	Z, r24
task4.period = SMTick4_period;//Task Period.
    1f60:	41 83       	std	Z+1, r20	; 0x01
    1f62:	52 83       	std	Z+2, r21	; 0x02
    1f64:	63 83       	std	Z+3, r22	; 0x03
    1f66:	74 83       	std	Z+4, r23	; 0x04
task4.elapsedTime = SMTick4_period; // Task current elasped time.
    1f68:	45 83       	std	Z+5, r20	; 0x05
    1f6a:	56 83       	std	Z+6, r21	; 0x06
    1f6c:	67 83       	std	Z+7, r22	; 0x07
    1f6e:	70 87       	std	Z+8, r23	; 0x08
task4.TickFct = &SMTick4; // Function pointer for the tick.
    1f70:	27 e7       	ldi	r18, 0x77	; 119
    1f72:	32 e0       	ldi	r19, 0x02	; 2
    1f74:	32 87       	std	Z+10, r19	; 0x0a
    1f76:	21 87       	std	Z+9, r18	; 0x09

// Task 5
task5.state = -1;//Task initial state.
    1f78:	e0 e4       	ldi	r30, 0x40	; 64
    1f7a:	f1 e0       	ldi	r31, 0x01	; 1
    1f7c:	80 83       	st	Z, r24
task5.period = SMTick5_period;//Task Period.
    1f7e:	8c eb       	ldi	r24, 0xBC	; 188
    1f80:	92 e0       	ldi	r25, 0x02	; 2
    1f82:	a0 e0       	ldi	r26, 0x00	; 0
    1f84:	b0 e0       	ldi	r27, 0x00	; 0
    1f86:	81 83       	std	Z+1, r24	; 0x01
    1f88:	92 83       	std	Z+2, r25	; 0x02
    1f8a:	a3 83       	std	Z+3, r26	; 0x03
    1f8c:	b4 83       	std	Z+4, r27	; 0x04
task5.elapsedTime = SMTick5_period; // Task current elasped time.
    1f8e:	85 83       	std	Z+5, r24	; 0x05
    1f90:	96 83       	std	Z+6, r25	; 0x06
    1f92:	a7 83       	std	Z+7, r26	; 0x07
    1f94:	b0 87       	std	Z+8, r27	; 0x08
task5.TickFct = &gameover; // Function pointer for the tick.
    1f96:	81 ea       	ldi	r24, 0xA1	; 161
    1f98:	92 e0       	ldi	r25, 0x02	; 2
    1f9a:	92 87       	std	Z+10, r25	; 0x0a
    1f9c:	81 87       	std	Z+9, r24	; 0x09
unsigned long _avr_timer_M = 1; // Start count from here, down to 0. Default 1ms
unsigned long _avr_timer_cntcurr = 0; // Current internal count of 1ms ticks

// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
    1f9e:	81 e0       	ldi	r24, 0x01	; 1
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	a0 e0       	ldi	r26, 0x00	; 0
    1fa4:	b0 e0       	ldi	r27, 0x00	; 0
    1fa6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_avr_timer_M>
    1faa:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <_avr_timer_M+0x1>
    1fae:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <_avr_timer_M+0x2>
    1fb2:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <_avr_timer_M+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
    1fb6:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <_avr_timer_cntcurr>
    1fba:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <_avr_timer_cntcurr+0x1>
    1fbe:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <_avr_timer_cntcurr+0x2>
    1fc2:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <_avr_timer_cntcurr+0x3>

// Set the timer and turn it on
TimerSet(1);
TimerOn();
    1fc6:	0e 94 a6 03 	call	0x74c	; 0x74c <TimerOn>
ADC_init();
    1fca:	6e df       	rcall	.-292    	; 0x1ea8 <ADC_init>
//initUSART();
initUSART(0);
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	0e 94 06 04 	call	0x80c	; 0x80c <initUSART>
initUSART(1);
    1fd2:	81 e0       	ldi	r24, 0x01	; 1
    1fd4:	0e 94 06 04 	call	0x80c	; 0x80c <initUSART>
LCD_init();
    1fd8:	0e 94 75 03 	call	0x6ea	; 0x6ea <LCD_init>
unsigned short i; // Scheduler for-loop iterator

while(1) {
	// Scheduler code
	 adcvalue=ADC;
    1fdc:	0f 2e       	mov	r0, r31
    1fde:	f8 e7       	ldi	r31, 0x78	; 120
    1fe0:	af 2e       	mov	r10, r31
    1fe2:	b1 2c       	mov	r11, r1
    1fe4:	f0 2d       	mov	r31, r0
    1fe6:	6e 01       	movw	r12, r28
    1fe8:	8b e0       	ldi	r24, 0x0B	; 11
    1fea:	c8 0e       	add	r12, r24
    1fec:	d1 1c       	adc	r13, r1
    1fee:	d5 01       	movw	r26, r10
    1ff0:	8d 91       	ld	r24, X+
    1ff2:	9c 91       	ld	r25, X
    1ff4:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <adcvalue+0x1>
    1ff8:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <adcvalue>
	 button=PIND&0x20;
    1ffc:	89 b1       	in	r24, 0x09	; 9
	 button=button>>5;
    1ffe:	85 fb       	bst	r24, 5
    2000:	88 27       	eor	r24, r24
    2002:	80 f9       	bld	r24, 0
    2004:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <button>
	 rotbutton=PIND&0x10;
    2008:	89 b1       	in	r24, 0x09	; 9
	 rotbutton=rotbutton>>4;
    200a:	82 95       	swap	r24
    200c:	81 70       	andi	r24, 0x01	; 1
    200e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <rotbutton>
    2012:	fe 01       	movw	r30, r28
    2014:	31 96       	adiw	r30, 0x01	; 1
    2016:	7f 01       	movw	r14, r30
	for ( i = 0; i < numTasks; i++ ) {
		// Task is ready to tick
		if ( tasks[i]->elapsedTime == tasks[i]->period ) {
    2018:	d7 01       	movw	r26, r14
    201a:	0d 91       	ld	r16, X+
    201c:	1d 91       	ld	r17, X+
    201e:	7d 01       	movw	r14, r26
    2020:	f8 01       	movw	r30, r16
    2022:	45 81       	ldd	r20, Z+5	; 0x05
    2024:	56 81       	ldd	r21, Z+6	; 0x06
    2026:	67 81       	ldd	r22, Z+7	; 0x07
    2028:	70 85       	ldd	r23, Z+8	; 0x08
    202a:	81 81       	ldd	r24, Z+1	; 0x01
    202c:	92 81       	ldd	r25, Z+2	; 0x02
    202e:	a3 81       	ldd	r26, Z+3	; 0x03
    2030:	b4 81       	ldd	r27, Z+4	; 0x04
    2032:	48 17       	cp	r20, r24
    2034:	59 07       	cpc	r21, r25
    2036:	6a 07       	cpc	r22, r26
    2038:	7b 07       	cpc	r23, r27
    203a:	79 f4       	brne	.+30     	; 0x205a <main+0x1a6>
			// Setting next state for task
			tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    203c:	80 81       	ld	r24, Z
    203e:	01 84       	ldd	r0, Z+9	; 0x09
    2040:	f2 85       	ldd	r31, Z+10	; 0x0a
    2042:	e0 2d       	mov	r30, r0
    2044:	08 2e       	mov	r0, r24
    2046:	00 0c       	add	r0, r0
    2048:	99 0b       	sbc	r25, r25
    204a:	09 95       	icall
    204c:	d8 01       	movw	r26, r16
    204e:	8c 93       	st	X, r24
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
    2050:	f8 01       	movw	r30, r16
    2052:	15 82       	std	Z+5, r1	; 0x05
    2054:	16 82       	std	Z+6, r1	; 0x06
    2056:	17 82       	std	Z+7, r1	; 0x07
    2058:	10 86       	std	Z+8, r1	; 0x08
		}
		tasks[i]->elapsedTime += 1;
    205a:	f8 01       	movw	r30, r16
    205c:	85 81       	ldd	r24, Z+5	; 0x05
    205e:	96 81       	ldd	r25, Z+6	; 0x06
    2060:	a7 81       	ldd	r26, Z+7	; 0x07
    2062:	b0 85       	ldd	r27, Z+8	; 0x08
    2064:	01 96       	adiw	r24, 0x01	; 1
    2066:	a1 1d       	adc	r26, r1
    2068:	b1 1d       	adc	r27, r1
    206a:	85 83       	std	Z+5, r24	; 0x05
    206c:	96 83       	std	Z+6, r25	; 0x06
    206e:	a7 83       	std	Z+7, r26	; 0x07
    2070:	b0 87       	std	Z+8, r27	; 0x08
	 adcvalue=ADC;
	 button=PIND&0x20;
	 button=button>>5;
	 rotbutton=PIND&0x10;
	 rotbutton=rotbutton>>4;
	for ( i = 0; i < numTasks; i++ ) {
    2072:	ec 14       	cp	r14, r12
    2074:	fd 04       	cpc	r15, r13
    2076:	81 f6       	brne	.-96     	; 0x2018 <main+0x164>
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
		}
		tasks[i]->elapsedTime += 1;
	}
	while(!TimerFlag);
    2078:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <TimerFlag>
    207c:	88 23       	and	r24, r24
    207e:	e1 f3       	breq	.-8      	; 0x2078 <main+0x1c4>
	TimerFlag = 0;
    2080:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <TimerFlag>
}
    2084:	b4 cf       	rjmp	.-152    	; 0x1fee <main+0x13a>

00002086 <__tablejump2__>:
    2086:	ee 0f       	add	r30, r30
    2088:	ff 1f       	adc	r31, r31
    208a:	00 24       	eor	r0, r0
    208c:	00 1c       	adc	r0, r0
    208e:	0b be       	out	0x3b, r0	; 59
    2090:	07 90       	elpm	r0, Z+
    2092:	f6 91       	elpm	r31, Z
    2094:	e0 2d       	mov	r30, r0
    2096:	09 94       	ijmp

00002098 <_exit>:
    2098:	f8 94       	cli

0000209a <__stop_program>:
    209a:	ff cf       	rjmp	.-2      	; 0x209a <__stop_program>
